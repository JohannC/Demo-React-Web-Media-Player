{"version":3,"sources":["../node_modules/snippet-highlight/dist/esm/es5/build/x0bfsqwh.sc.entry.js"],"names":["__webpack_require__","r","__webpack_exports__","global","d","MyComponent","_snippet_highlight_core_js__WEBPACK_IMPORTED_MODULE_0__","commonjsGlobal","window","self","createCommonjsModule","e","t","exports","WorkerGlobalScope","n","a","Prism","manual","disableWorkerMessageHandler","util","encode","i","type","content","alias","map","replace","Object","prototype","toString","call","match","objId","__id","defineProperty","value","clone","hasOwnProperty","forEach","languages","extend","insertBefore","arguments","length","o","s","l","DFS","this","plugins","highlightAll","highlightAllUnder","document","callback","selector","hooks","run","elements","querySelectorAll","highlightElement","test","className","parentNode","toLowerCase","nodeName","element","language","grammar","code","textContent","Worker","c","filename","onmessage","highlightedCode","data","innerHTML","postMessage","JSON","stringify","immediateClose","highlight","tokens","tokenize","matchGrammar","Token","p","u","g","inside","m","lookbehind","b","greedy","f","h","pattern","E","RegExp","source","S","y","_","lastIndex","w","exec","A","index","T","I","R","v","C","slice","N","k","P","push","L","Array","splice","apply","rest","all","add","join","tag","classes","attributes","parent","keys","addEventListener","parse","close","currentScript","getElementsByTagName","pop","src","hasAttribute","readyState","requestAnimationFrame","setTimeout","markup","comment","prolog","doctype","cdata","punctuation","namespace","attr-value","attr-name","entity","title","xml","html","mathml","svg","css","atrule","rule","url","string","property","important","function","style","style-attr","clike","class-name","keyword","boolean","number","operator","javascript","regex","function-variable","constant","template-string","interpolation","interpolation-punctuation","script","js","querySelector","fileHighlight","py","rb","ps1","psm1","sh","bat","tex","getAttribute","createElement","appendChild","XMLHttpRequest","open","onreadystatechange","status","responseText","statusText","send","toolbar","registerButton","setAttribute","href","abap","string-template","eol-comment","string-operator","token-operator","actionscript","ada","char","variable","apacheconf","directive-inline","directive-block","directive-block-parameter","directive-flags","apl","statement","system-function","monadic-operator","dyadic-operator","assignment","dfn","applescript","class","macro","directive","cpp","raw-string","objectivec","opencl","function-opencl-kernel","constant-opencl-kernel","type-opencl-host","boolean-opencl-host","constant-opencl-host","function-opencl-host","arduino","builtin","arff","quoted","interpreted","asciidoc","comment-block","table","specifiers","passthrough-block","literal-block","other-block","list-punctuation","list-label","indented-block","attribute-entry","hr","page-break","admonition","callout","inline","attribute-ref","italic","bold","replacement","line-continuation","asm6502","opcode","hexnumber","binarynumber","decimalnumber","register","aspnet","page-directive tag","directive tag","csharp","asp comment","asp script","autohotkey","symbol","autoit","bash","shebang","shell","basic","vbnet","batch","label","command","parameter","bison","delimiter","bison-variable","brainfuck","pointer","increment","decrement","branching","bro","clojure","coffeescript","class-member","multiline-comment","block-regex","inline-javascript","multiline-string","ruby","crystal","attribute","expansion","generic-method","preprocessor","dotnet","defineProperties","buildPlaceholders","tokenStack","indexOf","toUpperCase","tokenizePlaceholders","substring","filter","concat","_django_template","django","jinja2","csp","safe","unsafe","pseudo-element","pseudo-class","id","hexcode","token-string","dart","metadata","diff","coord","deleted","inserted","docker","dockerfile","eiffel","elixir","atom","capture","argument","elm","import_statement","hvariable","erb","erlang","quoted-function","quoted-atom","flow","flow-punctuation","unshift","fortran","quoted-number","fsharp","gedcom","line-value","level","gherkin","pystring","feature","scenario","table-body","outline","td","table-head","th","git","commit_sha1","glsl","go","graphql","groovy","spock-block","annotation","expression","haml","multiline-code","filter-name","handlebars","block","brackets","haskell","haxe","reification","hpkp","hsts","http","request-line","response-status","header-name","httpLanguages","application/json","application/xml","text/xml","text/html","contentType","options","ichigojam","icon","builtin-keyword","inform7","substitution","verb","position","text","ini","io","triple-quoted-string","j","adverb","conjunction","java","generics","jolie","aggregates","withExtension","redirects","json","null","jsonp","jsx","spread","script-punctuation","tagName","openedBraces","julia","keyman","kotlin","equation-command","latex","equation","headline","less","mixin-usage","liquid","heading","quoted-symbol","lisp-property","declare","interactive","defvar","defun","lambda","car","lisp-marker","varform","rest-vars","other-marker-vars","sublist","lisp","elisp","emacs","livescript","interpolated-string","keyword-operator","identifier","lolcode","lua","makefile","markdown","blockquote","list","url-reference","matlab","mel","flag","mizar","monkey","type-char","n4js","n4jsd","nasm","nginx","nim","ignore","nix","antiquotation","nsis","ocaml","oz","parigp","split","parser","escape","parser-comment","parser-punctuation","pascal","objectpascal","perl","filehandle","vstring","scope","php","shell-comment","package","nowdoc-string","heredoc-string","single-quoted-string","double-quoted-string","sql","plsql","powershell","processing","properties","protobuf","primitive","pug","multiline-script","multiline-plain-text","flow-control","each","branch","mixin","name","plain-text","puppet","heredoc","extended-regex","double-quoted","datatype","short-variable","pure","inline-lang","lang","special","python","q","datetime","qore","percent-operator","ellipsis","reason","character","constructor","renpy","substitution-def","link-target","field","command-line-option","literal-block-punctuation","quoted-literal-block","list-bullet","doctest-block","inline-literal","role","interpreted-text","link","rip","date","time","reference","roboconf","component","optional","wildcard","rust","lifetime-annotation","macro-rules","closure-params","sas","datalines","sass","atrule-line","variable-line","property-line","scala","scheme","scss","placeholder","smalltalk","block-arguments","temporary-variables","smarty","smarty-comment","soy","command-arg","func","stylus","atrule-declaration","variable-declaration","property-declaration","swift","tap","fail","pass","pragma","bailout","version","plan","subtest","yamlish","yaml","tcl","class-id","textile","phrase","block-tag","modifier","cite","span","link-ref","image","footnote","acronym","mark","typescript","tsx","tt2","twig","ld","rd","other","ts","velocity","unparsed","velocity-comment","verilog","vhdl","vhdl-vectors","vim","vb","wasm","wiki","block-comment","emphasis","bold italic","table-tag","table-bar","nowiki","xeora","function-inline","function-block","directive-block-open","directive-block-separator","directive-block-close","xeoracube","xojo","xquery","xquery-comment","extension","axis","xquery-element","xquery-attribute","scalar","key","toggleSelection","getSelection","rangeCount","activeElement","getRangeAt","blur","removeAllRanges","addRange","focus","defaultMessage","copyToClipboard","debug","createRange","top","clip","whiteSpace","webkitUserSelect","MozUserSelect","msUserSelect","userSelect","body","selectNode","execCommand","Error","console","error","warn","clipboardData","setData","navigator","userAgent","format","message","prompt","removeRange","removeChild","theme","copyMessage","componentDidLoad","componentDidUpdate","encodeContent","render","onClick","aria-hidden","data-prefix","data-icon","xmlns","viewBox","width","height","fill","get","enumerable","configurable","String","attr","state"],"mappings":"yFAAAA,EAAAC,EAAAC,GAAA,SAAAC,GAAAH,EAAAI,EAAAF,EAAA,qCAAAG,IAAA,IAAAC,EAAAN,EAAA,IAEAO,EAAA,oBAAAC,cAAA,oBAAAL,IAAA,oBAAAM,UAAA,GAEA,SAAAC,EAAAC,EAAAC,GACA,OAAAD,EAAAC,EAAA,CACAC,QAAA,IACGD,EAAAC,SAAAD,EAAAC,QAGHH,EAAA,SAAAC,GACA,IAAAC,EAAA,oBAAAJ,cAAA,oBAAAM,mBAAAL,gBAAAK,kBAAAL,KAAA,GACAM,EAAA,WACA,IAAAJ,EAAA,8BACAI,EAAA,EACAC,EAAAJ,EAAAK,MAAA,CACAC,OAAAN,EAAAK,OAAAL,EAAAK,MAAAC,OACAC,4BAAAP,EAAAK,OAAAL,EAAAK,MAAAE,4BACAC,KAAA,CACAC,OAAA,SAAAV,GACA,OAAAA,aAAAW,EAAA,IAAAA,EAAAX,EAAAY,KAAAP,EAAAI,KAAAC,OAAAV,EAAAa,SAAAb,EAAAc,OAAA,UAAAT,EAAAI,KAAAG,KAAAZ,KAAAe,IAAAV,EAAAI,KAAAC,QAAAV,EAAAgB,QAAA,cAA+JA,QAAA,aAAsBA,QAAA,gBAErLJ,KAAA,SAAAZ,GACA,OAAAiB,OAAAC,UAAAC,SAAAC,KAAApB,GAAAqB,MAAA,wBAEAC,MAAA,SAAAtB,GACA,OAAAA,EAAAuB,MAAAN,OAAAO,eAAAxB,EAAA,QACAyB,QAAArB,IACWJ,EAAAuB,MAEXG,MAAA,SAAA1B,EAAAC,GACA,IAAAG,EAAAC,EAAAI,KAAAG,KAAAZ,GAEA,OAAAC,KAAA,GAA6BG,GAC7B,aACA,GAAAH,EAAAI,EAAAI,KAAAa,MAAAtB,IAAA,OAAAC,EAAAI,EAAAI,KAAAa,MAAAtB,IACA,IAAAW,EAAA,GAEA,QAAArB,KAAAW,EAAAI,EAAAI,KAAAa,MAAAtB,IAAAW,EAAAX,EACAA,EAAA2B,eAAArC,KAAAqB,EAAArB,GAAAe,EAAAI,KAAAiB,MAAA1B,EAAAV,GAAAW,IAGA,OAAAU,EAEA,YACA,OAAAV,EAAAI,EAAAI,KAAAa,MAAAtB,IAAAC,EAAAI,EAAAI,KAAAa,MAAAtB,KAAAW,EAAA,GAAAV,EAAAI,EAAAI,KAAAa,MAAAtB,IAAAW,EAAAX,EAAA4B,QAAA,SAAA5B,EAAAI,GACAO,EAAAP,GAAAC,EAAAI,KAAAiB,MAAA1B,EAAAC,KACeU,GAGf,OAAAX,IAGA6B,UAAA,CACAC,OAAA,SAAA9B,EAAAC,GACA,IAAAG,EAAAC,EAAAI,KAAAiB,MAAArB,EAAAwB,UAAA7B,IAEA,QAAAW,KAAAV,EACAG,EAAAO,GAAAV,EAAAU,GAGA,OAAAP,GAEA2B,aAAA,SAAA/B,EAAAC,EAAAG,EAAAO,GACA,IAAArB,GAAAqB,KAAAN,EAAAwB,WAAA7B,GAEA,MAAAgC,UAAAC,OAAA,CACA,QAAAC,KAAA9B,EAAA4B,UAAA,GACA5B,EAAAuB,eAAAO,KAAA5C,EAAA4C,GAAA9B,EAAA8B,IAGA,OAAA5C,EAGA,IAAA6C,EAAA,GAEA,QAAAC,KAAA9C,EACA,GAAAA,EAAAqC,eAAAS,GAAA,CACA,GAAAA,GAAAnC,EAAA,QAAAiC,KAAA9B,EACAA,EAAAuB,eAAAO,KAAAC,EAAAD,GAAA9B,EAAA8B,IAEAC,EAAAC,GAAA9C,EAAA8C,GAIA,OAAA/B,EAAAwB,UAAAQ,IAAAhC,EAAAwB,UAAA,SAAA5B,EAAAG,GACAA,IAAAO,EAAAX,IAAAC,GAAAD,IAAAsC,KAAArC,GAAAkC,KACWxB,EAAAX,GAAAmC,GAEXE,IAAA,SAAArC,EAAAC,EAAAG,EAAAO,GACA,QAAArB,KAAAqB,KAAA,GAAmCX,EACnCA,EAAA2B,eAAArC,KAAAW,EAAAmB,KAAApB,EAAAV,EAAAU,EAAAV,GAAAc,GAAAd,GAAA,WAAAe,EAAAI,KAAAG,KAAAZ,EAAAV,KAAAqB,EAAAN,EAAAI,KAAAa,MAAAtB,EAAAV,KAAA,UAAAe,EAAAI,KAAAG,KAAAZ,EAAAV,KAAAqB,EAAAN,EAAAI,KAAAa,MAAAtB,EAAAV,OAAAqB,EAAAN,EAAAI,KAAAa,MAAAtB,EAAAV,MAAA,EAAAe,EAAAwB,UAAAQ,IAAArC,EAAAV,GAAAW,EAAAX,EAAAqB,OAAAN,EAAAI,KAAAa,MAAAtB,EAAAV,MAAA,EAAAe,EAAAwB,UAAAQ,IAAArC,EAAAV,GAAAW,EAAA,KAAAU,OAIA4B,QAAA,GACAC,aAAA,SAAAxC,EAAAC,GACAI,EAAAoC,kBAAAC,SAAA1C,EAAAC,IAEAwC,kBAAA,SAAAzC,EAAAC,EAAAG,GACA,IAAAO,EAAA,CACAgC,SAAAvC,EACAwC,SAAA,oGAEAvC,EAAAwC,MAAAC,IAAA,sBAAAnC,GAEA,QAAArB,EAAA4C,EAAAvB,EAAAoC,UAAA/C,EAAAgD,iBAAArC,EAAAiC,UAAAT,EAAA,EAA4E7C,EAAA4C,EAAAC,MAC5E9B,EAAA4C,iBAAA3D,GAAA,IAAAW,EAAAU,EAAAgC,WAGAM,iBAAA,SAAA7C,EAAAO,EAAArB,GACA,QAAA4C,EAAAC,EAAAC,EAAAhC,EAA6BgC,IAAApC,EAAAkD,KAAAd,EAAAe,YAC7Bf,IAAAgB,WAGAhB,IAAAF,GAAAE,EAAAe,UAAA9B,MAAArB,IAAA,UAAAqD,cAAAlB,EAAA9B,EAAAwB,UAAAK,IAAA9B,EAAA+C,UAAA/C,EAAA+C,UAAAnC,QAAAhB,EAAA,IAAAgB,QAAA,yBAAAkB,EAAA9B,EAAAgD,YAAA,OAAAF,MAAAd,EAAAhC,EAAAgD,YAAAE,YAAAlB,EAAAe,UAAAf,EAAAe,UAAAnC,QAAAhB,EAAA,IAAAgB,QAAA,yBAAAkB,GACA,IAAAzC,EAAA,CACA8D,QAAAnD,EACAoD,SAAAtB,EACAuB,QAAAtB,EACAuB,KAAAtD,EAAAuD,aAEA,GAAAtD,EAAAwC,MAAAC,IAAA,sBAAArD,MAAAiE,OAAAjE,EAAAgE,QAAA,OAAAhE,EAAAiE,OAAArD,EAAAwC,MAAAC,IAAA,mBAAArD,KAAA8D,QAAAI,YAAAlE,EAAAiE,KAAArD,EAAAwC,MAAAC,IAAA,kBAAArD,SAAAY,EAAAwC,MAAAC,IAAA,WAAArD,GAEA,GAAAY,EAAAwC,MAAAC,IAAA,mBAAArD,GAAAkB,GAAAV,EAAA2D,OAAA,CACA,IAAAC,EAAA,IAAAD,OAAAvD,EAAAyD,UACAD,EAAAE,UAAA,SAAA/D,GACAP,EAAAuE,gBAAAhE,EAAAiE,KAAA5D,EAAAwC,MAAAC,IAAA,gBAAArD,KAAA8D,QAAAW,UAAAzE,EAAAuE,gBAAA1E,KAAA8B,KAAA3B,EAAA8D,SAAAlD,EAAAwC,MAAAC,IAAA,kBAAArD,GAAAY,EAAAwC,MAAAC,IAAA,WAAArD,IACWoE,EAAAM,YAAAC,KAAAC,UAAA,CACXb,SAAA/D,EAAA+D,SACAE,KAAAjE,EAAAiE,KACAY,gBAAA,UAES7E,EAAAuE,gBAAA3D,EAAAkE,UAAA9E,EAAAiE,KAAAjE,EAAAgE,QAAAhE,EAAA+D,UAAAnD,EAAAwC,MAAAC,IAAA,gBAAArD,KAAA8D,QAAAW,UAAAzE,EAAAuE,gBAAA1E,KAAA8B,KAAAhB,GAAAC,EAAAwC,MAAAC,IAAA,kBAAArD,GAAAY,EAAAwC,MAAAC,IAAA,WAAArD,IAET8E,UAAA,SAAAvE,EAAAC,EAAAG,GACA,IAAAd,EAAA,CACAoE,KAAA1D,EACAyD,QAAAxD,EACAuD,SAAApD,GAEA,OAAAC,EAAAwC,MAAAC,IAAA,kBAAAxD,KAAAkF,OAAAnE,EAAAoE,SAAAnF,EAAAoE,KAAApE,EAAAmE,SAAApD,EAAAwC,MAAAC,IAAA,iBAAAxD,GAAAqB,EAAA0D,UAAAhE,EAAAI,KAAAC,OAAApB,EAAAkF,QAAAlF,EAAAkE,WAEAkB,aAAA,SAAA1E,EAAAC,EAAAG,EAAAO,EAAArB,EAAA4C,EAAAC,GACA,IAAAC,EAAA/B,EAAAsE,MAEA,QAAAlF,KAAAW,EACA,GAAAA,EAAAuB,eAAAlC,IAAAW,EAAAX,GAAA,CACA,GAAAA,GAAA0C,EAAA,OACA,IAAA0B,EAAAzD,EAAAX,GACAoE,EAAA,UAAAxD,EAAAI,KAAAG,KAAAiD,KAAA,CAAAA,GAEA,QAAAe,EAAA,EAA2BA,EAAAf,EAAA5B,SAAc2C,EAAA,CACzC,IAAAC,EAAAhB,EAAAe,GACAE,EAAAD,EAAAE,OACAC,IAAAH,EAAAI,WACAC,IAAAL,EAAAM,OACAC,EAAA,EACAC,EAAAR,EAAA/D,MAEA,GAAAoE,IAAAL,EAAAS,QAAA9F,OAAA,CACA,IAAA+F,EAAAV,EAAAS,QAAAnE,WAAAE,MAAA,eACAwD,EAAAS,QAAAE,OAAAX,EAAAS,QAAAG,OAAAF,EAAA,KAGAV,IAAAS,SAAAT,EAEA,QAAAa,EAAA/E,EAAAgF,EAAArG,EAAoCoG,EAAAzF,EAAAgC,OAAc0D,GAAA1F,EAAAyF,GAAAzD,SAAAyD,EAAA,CAClD,IAAAE,EAAA3F,EAAAyF,GACA,GAAAzF,EAAAgC,OAAAjC,EAAAiC,OAAA,OAEA,KAAA2D,aAAAxD,GAAA,CACA,GAAA8C,GAAAQ,GAAAzF,EAAAgC,OAAA,GACA,GAAA4C,EAAAgB,UAAAF,IAAAG,EAAAjB,EAAAkB,KAAA/F,IAAA,MAEA,QAAAgG,EAAAF,EAAAG,OAAAjB,EAAAc,EAAA,GAAA7D,OAAA,GAAAiE,EAAAJ,EAAAG,MAAAH,EAAA,GAAA7D,OAAAkE,EAAAT,EAAAU,EAAAT,EAAAU,EAAApG,EAAAgC,OAAwHkE,EAAAE,IAAAD,EAAAF,IAAAjG,EAAAkG,GAAAvF,OAAAX,EAAAkG,EAAA,GAAAhB,UAAoDgB,EAC5KH,IAAAI,GAAAnG,EAAAkG,GAAAlE,YAAAyD,EAAAC,EAAAS,GAGA,GAAAnG,EAAAyF,aAAAtD,EAAA,SACAkE,EAAAH,EAAAT,EAAAE,EAAA5F,EAAAuG,MAAAZ,EAAAS,GAAAN,EAAAG,OAAAN,MACmB,CACnBd,EAAAgB,UAAA,EACA,IAAAC,EAAAjB,EAAAkB,KAAAH,GACAU,EAAA,EAGA,GAAAR,EAAA,CACAd,IAAAI,EAAAU,EAAA,GAAAA,EAAA,GAAA7D,OAAA,GAAAiE,GAAAF,EAAAF,EAAAG,MAAAb,IAAAU,IAAA,GAAAS,MAAAnB,IAAAnD,OAEA,IAAAuE,EAAAZ,EAAAW,MAAA,EAAAP,GACAS,EAAAb,EAAAW,MAAAL,GACAQ,EAAA,CAAAhB,EAAAY,GAEAE,MAAAd,EAAAC,GAAAa,EAAAvE,OAAAyE,EAAAC,KAAAH,IACA,IAAAI,EAAA,IAAAxE,EAAA3C,EAAAqF,EAAAzE,EAAAoE,SAAAqB,EAAAhB,GAAAgB,EAAAT,EAAAS,EAAAZ,GACA,GAAAwB,EAAAC,KAAAC,GAAAH,GAAAC,EAAAC,KAAAF,GAAAI,MAAA3F,UAAA4F,OAAAC,MAAA9G,EAAAyG,GAAA,GAAAJ,GAAAjG,EAAAqE,aAAA1E,EAAAC,EAAAG,EAAAsF,EAAAC,GAAA,EAAAlG,GAAAyC,EAAA,WACmB,GAAAA,EAAA,WAOnBuC,SAAA,SAAAzE,EAAAC,EAAAG,GACA,IAAAO,EAAA,CAAAX,GACAV,EAAAW,EAAA+G,KAEA,GAAA1H,EAAA,CACA,QAAA4C,KAAA5C,EACAW,EAAAiC,GAAA5C,EAAA4C,UAGAjC,EAAA+G,KAGA,OAAA3G,EAAAqE,aAAA1E,EAAAW,EAAAV,EAAA,QAAAU,GAEAkC,MAAA,CACAoE,IAAA,GACAC,IAAA,SAAAlH,EAAAC,GACA,IAAAG,EAAAC,EAAAwC,MAAAoE,IACA7G,EAAAJ,GAAAI,EAAAJ,IAAA,GAAAI,EAAAJ,GAAA2G,KAAA1G,IAEA6C,IAAA,SAAA9C,EAAAC,GACA,IAAAG,EAAAC,EAAAwC,MAAAoE,IAAAjH,GACA,GAAAI,KAAA6B,OAAA,QAAAtB,EAAArB,EAAA,EAA+CqB,EAAAP,EAAAd,MAC/CqB,EAAAV,MAKAU,EAAAN,EAAAsE,MAAA,SAAA3E,EAAAC,EAAAG,EAAAC,EAAAM,GACA2B,KAAA1B,KAAAZ,EAAAsC,KAAAzB,QAAAZ,EAAAqC,KAAAxB,MAAAV,EAAAkC,KAAAL,OAAA,GAAA5B,GAAA,IAAA4B,OAAAK,KAAA6C,SAAAxE,GAGA,GAAAA,EAAA0D,UAAA,SAAArE,EAAAC,EAAAG,GACA,oBAAAJ,EAAA,OAAAA,EACA,aAAAK,EAAAI,KAAAG,KAAAZ,GAAA,OAAAA,EAAAe,IAAA,SAAAX,GACA,OAAAO,EAAA0D,UAAAjE,EAAAH,EAAAD,KACOmH,KAAA,IACP,IAAA7H,EAAA,CACAsB,KAAAZ,EAAAY,KACAC,QAAAF,EAAA0D,UAAArE,EAAAa,QAAAZ,EAAAG,GACAgH,IAAA,OACAC,QAAA,SAAArH,EAAAY,MACA0G,WAAA,GACA9D,SAAAvD,EACAsH,OAAAnH,GAGA,GAAAJ,EAAAc,MAAA,CACA,IAAAoB,EAAA,UAAA7B,EAAAI,KAAAG,KAAAZ,EAAAc,OAAAd,EAAAc,MAAA,CAAAd,EAAAc,OACA+F,MAAA3F,UAAAyF,KAAAI,MAAAzH,EAAA+H,QAAAnF,GAGA7B,EAAAwC,MAAAC,IAAA,OAAAxD,GACA,IAAA6C,EAAAlB,OAAAuG,KAAAlI,EAAAgI,YAAAvG,IAAA,SAAAf,GACA,OAAAA,EAAA,MAAAV,EAAAgI,WAAAtH,IAAA,IAAAgB,QAAA,eAAuE,MAChEmG,KAAA,KACP,UAAA7H,EAAA8H,IAAA,WAAA9H,EAAA+H,QAAAF,KAAA,UAAAhF,EAAA,IAAAA,EAAA,QAAA7C,EAAAuB,QAAA,KAAAvB,EAAA8H,IAAA,MACKnH,EAAAyC,SAAA,OAAAzC,EAAAwH,kBAAApH,EAAAG,6BAAAP,EAAAwH,iBAAA,mBAAAzH,GACL,IAAAI,EAAAgE,KAAAsD,MAAA1H,EAAAiE,MACAtD,EAAAP,EAAAoD,SACAlE,EAAAc,EAAAkE,eACArE,EAAAkE,YAAA9D,EAAAkE,UAAAnE,EAAAsD,KAAArD,EAAAwB,UAAAlB,OAAArB,GAAAW,EAAA0H,UACK,GAAA1H,EAAAK,OAAAL,EAAAK,MACL,IAAAhB,EAAAoD,SAAAkF,eAAA,GAAArB,MAAAnF,KAAAsB,SAAAmF,qBAAA,WAAAC,MACA,OAAAxI,IAAAe,EAAAyD,SAAAxE,EAAAyI,IAAA1H,EAAAE,QAAAjB,EAAA0I,aAAA,6BAAAtF,SAAAuF,WAAApI,OAAAqI,sBAAArI,OAAAqI,sBAAA7H,EAAAmC,cAAA3C,OAAAsI,WAAA9H,EAAAmC,aAAA,IAAAE,SAAA+E,iBAAA,mBAAApH,EAAAmC,gBAAAvC,EAAAK,MAhQA,GAmQAN,EAAAE,UAAAF,EAAAE,QAAAE,QAAA,IAAAR,MAAAU,MAAAF,KAAAyB,UAAAuG,OAAA,CACAC,QAAA,kBACAC,OAAA,iBACAC,QAAA,sBACAC,MAAA,0BACApB,IAAA,CACA9B,QAAA,yGACAH,QAAA,EACAJ,OAAA,CACAqC,IAAA,CACA9B,QAAA,kBACAP,OAAA,CACA0D,YAAA,QACAC,UAAA,iBAGAC,aAAA,CACArD,QAAA,oDACAP,OAAA,CACA0D,YAAA,OACAnD,QAAA,gBACAL,YAAA,MAIAwD,YAAA,OACAG,YAAA,CACAtD,QAAA,YACAP,OAAA,CACA2D,UAAA,mBAKAG,OAAA,qBACGzI,EAAAyB,UAAAuG,OAAAhB,IAAArC,OAAA,cAAAA,OAAA8D,OAAAzI,EAAAyB,UAAAuG,OAAAS,OAAAzI,EAAAyC,MAAAqE,IAAA,gBAAAlH,GACH,WAAAA,EAAAY,OAAAZ,EAAAsH,WAAAwB,MAAA9I,EAAAa,QAAAG,QAAA,QAAyE,QACtEZ,EAAAyB,UAAAkH,IAAA3I,EAAAyB,UAAAuG,OAAAhI,EAAAyB,UAAAmH,KAAA5I,EAAAyB,UAAAuG,OAAAhI,EAAAyB,UAAAoH,OAAA7I,EAAAyB,UAAAuG,OAAAhI,EAAAyB,UAAAqH,IAAA9I,EAAAyB,UAAAuG,OAAAhI,EAAAyB,UAAAsH,IAAA,CACHd,QAAA,mBACAe,OAAA,CACA9D,QAAA,8BACAP,OAAA,CACAsE,KAAA,YAGAC,IAAA,iEACA1G,SAAA,2BACA2G,OAAA,CACAjE,QAAA,gDACAH,QAAA,GAEAqE,SAAA,+CACAC,UAAA,kBACAC,SAAA,oBACAjB,YAAA,YACGrI,EAAAyB,UAAAsH,IAAAC,OAAArE,OAAAiC,KAAA5G,EAAAyB,UAAAsH,IAAA/I,EAAAyB,UAAAuG,SAAAhI,EAAAyB,UAAAE,aAAA,gBACH4H,MAAA,CACArE,QAAA,0CACAL,YAAA,EACAF,OAAA3E,EAAAyB,UAAAsH,IACArI,MAAA,eACAqE,QAAA,KAEG/E,EAAAyB,UAAAE,aAAA,uBACH6H,aAAA,CACAtE,QAAA,6CACAP,OAAA,CACA6D,YAAA,CACAtD,QAAA,aACAP,OAAA3E,EAAAyB,UAAAuG,OAAAhB,IAAArC,QAEA0D,YAAA,wBACAE,aAAA,CACArD,QAAA,MACAP,OAAA3E,EAAAyB,UAAAsH,MAGArI,MAAA,iBAEGV,EAAAyB,UAAAuG,OAAAhB,MAAAhH,EAAAyB,UAAAgI,MAAA,CACHxB,QAAA,EACA/C,QAAA,kCACAL,YAAA,GACK,CACLK,QAAA,mBACAL,YAAA,EACAE,QAAA,IAEAoE,OAAA,CACAjE,QAAA,iDACAH,QAAA,GAEA2E,aAAA,CACAxE,QAAA,iGACAL,YAAA,EACAF,OAAA,CACA0D,YAAA,UAGAsB,QAAA,6GACAC,QAAA,qBACAN,SAAA,oBACAO,OAAA,wDACAC,SAAA,0DACAzB,YAAA,iBACGrI,EAAAyB,UAAAsI,WAAA/J,EAAAyB,UAAAC,OAAA,SACHiI,QAAA,8TACAE,OAAA,wGACAP,SAAA,gDACAQ,SAAA,mGACG9J,EAAAyB,UAAAE,aAAA,wBACHqI,MAAA,CACA9E,QAAA,iHACAL,YAAA,EACAE,QAAA,GAEAkF,oBAAA,CACA/E,QAAA,wHACAxE,MAAA,YAEAwJ,SAAA,uBACGlK,EAAAyB,UAAAE,aAAA,uBACHwI,kBAAA,CACAjF,QAAA,mCACAH,QAAA,EACAJ,OAAA,CACAyF,cAAA,CACAlF,QAAA,YACAP,OAAA,CACA0F,4BAAA,CACAnF,QAAA,UACAxE,MAAA,eAEAkG,KAAA,OAGAuC,OAAA,cAGGnJ,EAAAyB,UAAAsI,WAAA,mBAAApF,OAAAyF,cAAAzF,OAAAiC,KAAA5G,EAAAyB,UAAAsI,WAAA/J,EAAAyB,UAAAuG,QAAAhI,EAAAyB,UAAAE,aAAA,gBACH2I,OAAA,CACApF,QAAA,4CACAL,YAAA,EACAF,OAAA3E,EAAAyB,UAAAsI,WACArJ,MAAA,sBACAqE,QAAA,KAEG/E,EAAAyB,UAAA8I,GAAAvK,EAAAyB,UAAAsI,WAAA,oBAAArK,WAAAQ,OAAAR,KAAA4C,mBAAAkI,gBAAA9K,KAAAQ,MAAAuK,cAAA,WACH,IAAA7K,EAAA,CACA2K,GAAA,aACAG,GAAA,SACAC,GAAA,OACAC,IAAA,aACAC,KAAA,aACAC,GAAA,OACAC,IAAA,QACA9F,EAAA,IACA+F,IAAA,SAEAvE,MAAA3F,UAAAqF,MAAAnF,KAAAsB,SAAAM,iBAAA,kBAAApB,QAAA,SAAA3B,GACA,QAAAI,EAAAM,EAAAV,EAAAoL,aAAA,YAAA/L,EAAAW,EAAAiC,EAAA,8BAA2F5C,IAAA4C,EAAAgB,KAAA5D,EAAA6D,YAC3F7D,IAAA8D,WAGA,GAAA9D,IAAAe,GAAAJ,EAAAkD,UAAA9B,MAAAa,IAAA,YAAA7B,EAAA,CACA,IAAA8B,GAAAxB,EAAAU,MAAA,uBACAhB,EAAAL,EAAAmC,MAGA,IAAAC,EAAAM,SAAA4I,cAAA,QACAlJ,EAAAe,UAAA,YAAA9C,EAAAJ,EAAA0D,YAAA,GAAAvB,EAAAuB,YAAA,gBAAA1D,EAAAsL,YAAAnJ,GACA,IAAA3C,EAAA,IAAA+L,eACA/L,EAAAgM,KAAA,MAAA9K,GAAA,GAAAlB,EAAAiM,mBAAA,WACA,GAAAjM,EAAAwI,aAAAxI,EAAAkM,OAAA,KAAAlM,EAAAmM,cAAAxJ,EAAAuB,YAAAlE,EAAAmM,aAAAxL,EAAA6C,iBAAAb,MAAAuB,YAAAlE,EAAAkM,QAAA,oBAAAlM,EAAAkM,OAAA,yBAAAlM,EAAAoM,WAAA,kDACOpM,EAAAqM,KAAA,QACF1L,EAAAmC,QAAAwJ,SAAA3L,EAAAmC,QAAAwJ,QAAAC,eAAA,yBAAAhM,GACL,IAAAC,EAAAD,EAAAuD,QAAAH,WAEA,GAAAnD,GAAA,OAAAiD,KAAAjD,EAAAqD,WAAArD,EAAA+H,aAAA,aAAA/H,EAAA+H,aAAA,uBACA,IAAA5H,EAAAH,EAAAoL,aAAA,YACAhL,EAAAqC,SAAA4I,cAAA,KACA,OAAAjL,EAAAsD,YAAA1D,EAAAoL,aAAA,wCAAAhL,EAAA4L,aAAA,eAAA5L,EAAA6L,KAAA9L,EAAAC,MAGGqC,SAAA+E,iBAAA,mBAAA3H,KAAAQ,MAAAuK,kBAEHvK,MAAAuB,UAAAsK,KAAA,CACA9D,QAAA,SACAkB,OAAA,mCACA6C,kBAAA,CACA9G,QAAA,qCACAL,YAAA,EACAnE,MAAA,UAEAuL,cAAA,CACA/G,QAAA,aACAL,YAAA,EACAnE,MAAA,WAEAiJ,QAAA,CACAzE,QAAA,+pOACAL,YAAA,GAEAgF,OAAA,UACAC,SAAA,CACA5E,QAAA,6CACAL,YAAA,GAEAqH,kBAAA,CACAhH,QAAA,gBACAL,YAAA,EACAnE,MAAA,WAEAyL,iBAAA,EACAjH,QAAA,8BACAL,YAAA,EACAnE,MAAA,eACG,CACHwE,QAAA,QACAxE,MAAA,gBAEA2H,YAAA,WACCnI,MAAAuB,UAAA2K,aAAAlM,MAAAuB,UAAAC,OAAA,cACDiI,QAAA,8UACAG,SAAA,8DACC5J,MAAAuB,UAAA2K,aAAA,cAAA1L,MAAA,WAAAR,MAAAuB,UAAAuG,QAAA9H,MAAAuB,UAAAE,aAAA,yBACDgH,IAAA,CACAzD,QAAA,4EACAL,YAAA,EACAF,OAAA,CACAiC,KAAA1G,MAAAuB,UAAAuG,WAGC9H,MAAAuB,UAAA4K,IAAA,CACDpE,QAAA,OACAkB,OAAA,wBACAU,OAAA,EACA3E,QAAA,2FACG,CACHA,QAAA,6DAEAsD,YAAA,UACAmB,QAAA,6cACAC,QAAA,sBACAE,SAAA,qCACAzB,YAAA,gBACAiE,KAAA,MACAC,SAAA,2BACCrM,MAAAuB,UAAA+K,WAAA,CACDvE,QAAA,MACAwE,mBAAA,CACAvH,QAAA,0uSACAL,YAAA,EACAnE,MAAA,YAEAgM,kBAAA,CACAxH,QAAA,kPACAP,OAAA,CACA+H,kBAAA,CACAxH,QAAA,WACAP,OAAA,CACA0D,YAAA,SAEA3H,MAAA,OAEAiM,4BAAA,CACAzH,QAAA,SACAP,OAAA,CACA0D,YAAA,IACAc,OAAA,CACAjE,QAAA,YACAP,OAAA,CACA4H,SAAA,gCAIA7L,MAAA,cAEA2H,YAAA,KAEA3H,MAAA,OAEAkM,kBAAA,CACA1H,QAAA,gBACAxE,MAAA,WAEAyI,OAAA,CACAjE,QAAA,YACAP,OAAA,CACA4H,SAAA,+BAGAA,SAAA,6BACAvC,MAAA,mBACC9J,MAAAuB,UAAAoL,IAAA,CACD5E,QAAA,uBACAkB,OAAA,CACAjE,QAAA,qBACAH,QAAA,GAEA8E,OAAA,wGACAiD,UAAA,yBACAC,kBAAA,CACA7H,QAAA,gBACAxE,MAAA,YAEAwJ,SAAA,8BACAZ,SAAA,sTACA0D,mBAAA,CACA9H,QAAA,4CACAxE,MAAA,YAEAuM,kBAAA,CACA/H,QAAA,2CACAxE,MAAA,YAEAwM,WAAA,CACAhI,QAAA,SACAxE,MAAA,WAEA2H,YAAA,wBACA8E,IAAA,CACAjI,QAAA,4CACAxE,MAAA,YAECR,MAAAuB,UAAA2L,YAAA,CACDnF,QAAA,uDACAkB,OAAA,wBACAU,OAAA,wCACAC,SAAA,2bACAH,QAAA,uiBACA0D,MAAA,CACAnI,QAAA,ihBACAxE,MAAA,WAEA2H,YAAA,oCACCnI,MAAAuB,UAAAgC,EAAAvD,MAAAuB,UAAAC,OAAA,SACDiI,QAAA,sUACAG,SAAA,uDACAD,OAAA,kEACC3J,MAAAuB,UAAAE,aAAA,cACD2L,MAAA,CACApI,QAAA,qDACAL,YAAA,EACAnE,MAAA,WACAiE,OAAA,CACAwE,OAAA,CACAjE,QAAA,8CACAL,YAAA,GAEA0I,UAAA,CACArI,QAAA,4GACAL,YAAA,EACAnE,MAAA,aAIAwJ,SAAA,sIACChK,MAAAuB,UAAAgC,EAAA,qBAAAvD,MAAAuB,UAAAgC,EAAAmG,QAAA1J,MAAAuB,UAAA+L,IAAAtN,MAAAuB,UAAAC,OAAA,KACDiI,QAAA,8lBACAC,QAAA,qBACAE,SAAA,iJACC5J,MAAAuB,UAAAE,aAAA,iBACD+H,aAAA,CACAxE,QAAA,iBACAL,YAAA,KAEC3E,MAAAuB,UAAAE,aAAA,gBACD8L,aAAA,CACAvI,QAAA,oCACAxE,MAAA,SACAqE,QAAA,KAEC7E,MAAAuB,UAAAiM,WAAAxN,MAAAuB,UAAAC,OAAA,KACDiI,QAAA,wYACAR,OAAA,qFACAW,SAAA,0DACC,SAAAlK,GACDA,EAAA6B,UAAAkM,OAAA/N,EAAA6B,UAAAC,OAAA,KACAiI,QAAA,s0BACAiE,yBAAA,CACA1I,QAAA,w0CACAxE,MAAA,YAEAmN,yBAAA,CACA3I,QAAA,oiBACAxE,MAAA,cAGA,IAAAb,EAAA,CACAiO,mBAAA,CACA5I,QAAA,whBACAxE,MAAA,WAEAqN,sBAAA,CACA7I,QAAA,wBACAxE,MAAA,WAEAsN,uBAAA,CACA9I,QAAA,07KACAxE,MAAA,YAEAuN,uBAAA,CACA/I,QAAA,4rCACAxE,MAAA,aAGAd,EAAA6B,UAAAE,aAAA,cAAA9B,KAAA,yBACAqF,QAAA,+ZACAxE,MAAA,WACGd,EAAA6B,UAAAE,aAAA,gBAAA9B,GAjCF,CAkCAK,aAAAuB,UAAAyM,QAAAhO,MAAAuB,UAAAC,OAAA,OACDiI,QAAA,yNACAwE,QAAA,2yGACAjE,SAAA,+NACChK,MAAAuB,UAAA2M,KAAA,CACDnG,QAAA,MACAkB,OAAA,CACAjE,QAAA,mCACAH,QAAA,GAEA4E,QAAA,sCACAE,OAAA,oBACAxB,YAAA,SACC,SAAAzI,GACD,IAAAC,EAAA,CACAqF,QAAA,2FACAL,YAAA,EACAF,OAAA,CACA0J,OAAA,CACAnJ,QAAA,+BACAP,OAAA,CACA0D,YAAA,gBAGAiG,YAAA,CACApJ,QAAA,oBACAP,OAAA,CACA0D,YAAA,UAGAc,OAAA,oBACAoD,SAAA,WACAlE,YAAA,YACAyB,SAAA,IACAvB,aAAA,gBAGA3I,EAAA6B,UAAA8M,SAAA,CACAC,gBAAA,CACAtJ,QAAA,oDACAxE,MAAA,WAEA+N,MAAA,CACAvJ,QAAA,oDACAP,OAAA,CACA+J,WAAA,CACAxJ,QAAA,uFACAxE,MAAA,cAEA2H,YAAA,CACAnD,QAAA,kBACAL,YAAA,KAIA8J,oBAAA,CACAzJ,QAAA,qDACAP,OAAA,CACA0D,YAAA,cAGAuG,gBAAA,CACA1J,QAAA,2DACAP,OAAA,CACA0D,YAAA,4BAGAwG,cAAA,CACA3J,QAAA,oEACAP,OAAA,CACA0D,YAAA,wCAGAyG,mBAAA,CACA5J,QAAA,iEACAL,YAAA,EACAnE,MAAA,eAEAqO,aAAA,CACA7J,QAAA,0CACAL,YAAA,EACAnE,MAAA,UAEAsO,iBAAA,CACA9J,QAAA,6DACAL,YAAA,GAEAoD,QAAA,WACAS,MAAA,CACAxD,QAAA,kFACAxE,MAAA,YACAiE,OAAA,CACA0D,YAAA,qCAGA4G,kBAAA,CACA/J,QAAA,iDACAxE,MAAA,OAEAwG,WAAArH,EACAqP,GAAA,CACAhK,QAAA,WACAxE,MAAA,eAEAyO,aAAA,CACAjK,QAAA,WACAxE,MAAA,eAEA0O,WAAA,CACAlK,QAAA,4CACAxE,MAAA,WAEA2O,QAAA,EACAnK,QAAA,mBACAL,YAAA,EACAnE,MAAA,UACK,CACLwE,QAAA,QACAxE,MAAA,WAEA4M,MAAA,CACApI,QAAA,uFACAP,OAAA,CACA2E,SAAA,kBACAjB,YAAA,OACAnB,WAAA,CACAhC,QAAA,yDACAP,OAAA9E,EAAA8E,UAIA2K,OAAA,CACApK,QAAA,+jBACAL,YAAA,EACAF,OAAA,CACAuC,WAAArH,EACAqJ,IAAA,CACAhE,QAAA,kCACAP,OAAA,CACA0D,YAAA,oCAGAkH,gBAAA,CACArK,QAAA,WACAP,OAAA,CACA4H,SAAA,CACArH,QAAA,oBACAL,YAAA,GAEAiF,SAAA,uBACAzB,YAAA,gBAGAmH,OAAA,CACAtK,QAAA,oBACAP,OAAA,CACA0D,YAAA,8BAGAoH,KAAA,CACAvK,QAAA,gBACAP,OAAA,CACA0D,YAAA,kBAGAA,YAAA,mFAGAqH,YAAA,CACAxK,QAAA,iBACAxE,MAAA,WAEA+H,OAAA,oBACAkH,oBAAA,CACAzK,QAAA,YACAL,YAAA,EACAnE,MAAA,gBAEGb,EAAA8E,OAAA2J,YAAA3J,OAAAiC,KAAA,CACH0G,MAAA1N,EAAA6B,UAAA8M,SAAAjB,MACAgC,OAAA1P,EAAA6B,UAAA8M,SAAAe,OACAI,YAAA9P,EAAA6B,UAAA8M,SAAAmB,YACAjH,OAAA7I,EAAA6B,UAAA8M,SAAA9F,QACG7I,EAAA6B,UAAA8M,SAAA,qBAAA5J,OAAAiC,KAAA,CACH0G,MAAA1N,EAAA6B,UAAA8M,SAAAjB,OACG1N,EAAA6B,UAAA8M,SAAA,iBAAA5J,OAAAiC,KAAA,CACHyI,QAAAzP,EAAA6B,UAAA8M,SAAAc,SACGzP,EAAA6B,UAAA8M,SAAAE,MAAA9J,OAAAiC,KAAA,CACH4H,gBAAA5O,EAAA6B,UAAA8M,SAAA,iBACAI,oBAAA/O,EAAA6B,UAAA8M,SAAA,qBACAK,gBAAAhP,EAAA6B,UAAA8M,SAAA,iBACAM,cAAAjP,EAAA6B,UAAA8M,SAAA,eACAO,mBAAAlP,EAAA6B,UAAA8M,SAAA,oBACAS,iBAAApP,EAAA6B,UAAA8M,SAAA,kBACAtG,QAAArI,EAAA6B,UAAA8M,SAAAtG,QACAS,MAAA9I,EAAA6B,UAAA8M,SAAA7F,MACAuG,kBAAArP,EAAA6B,UAAA8M,SAAA,mBACArH,WAAAtH,EAAA6B,UAAA8M,SAAArH,WACAgI,GAAAtP,EAAA6B,UAAA8M,SAAAW,GACAC,aAAAvP,EAAA6B,UAAA8M,SAAA,cACAa,WAAAxP,EAAA6B,UAAA8M,SAAAa,WACAL,aAAAnP,EAAA6B,UAAA8M,SAAA,cACAc,QAAAzP,EAAA6B,UAAA8M,SAAAc,QACA/B,MAAA1N,EAAA6B,UAAA8M,SAAAjB,MACAgC,OAAA1P,EAAA6B,UAAA8M,SAAAe,OACAI,YAAA9P,EAAA6B,UAAA8M,SAAAmB,YACAjH,OAAA7I,EAAA6B,UAAA8M,SAAA9F,OACAkH,oBAAA/P,EAAA6B,UAAA8M,SAAA,sBACG3O,EAAA6B,UAAA8M,SAAA,eAAA5J,OAAAiC,KAAA,CACH6H,MAAA7O,EAAA6B,UAAA8M,SAAAE,MACAK,mBAAAlP,EAAA6B,UAAA8M,SAAA,oBACAS,iBAAApP,EAAA6B,UAAA8M,SAAA,kBACAtG,QAAArI,EAAA6B,UAAA8M,SAAAtG,QACAgH,kBAAArP,EAAA6B,UAAA8M,SAAA,mBACArH,WAAAtH,EAAA6B,UAAA8M,SAAArH,WACAgI,GAAAtP,EAAA6B,UAAA8M,SAAAW,GACAC,aAAAvP,EAAA6B,UAAA8M,SAAA,cACAa,WAAAxP,EAAA6B,UAAA8M,SAAAa,WACAL,aAAAnP,EAAA6B,UAAA8M,SAAA,cACAjB,MAAA1N,EAAA6B,UAAA8M,SAAAjB,MACAgC,OAAA1P,EAAA6B,UAAA8M,SAAAe,OACAI,YAAA9P,EAAA6B,UAAA8M,SAAAmB,YACAjH,OAAA7I,EAAA6B,UAAA8M,SAAA9F,OACAkH,oBAAA/P,EAAA6B,UAAA8M,SAAA,sBACG3O,EAAA6B,UAAA8M,SAAA7F,MAAA/D,OAAAiC,KAAA,CACH0G,MAAA1N,EAAA6B,UAAA8M,SAAAjB,MACAgC,OAAA1P,EAAA6B,UAAA8M,SAAAe,OACAI,YAAA9P,EAAA6B,UAAA8M,SAAAmB,YACAjH,OAAA7I,EAAA6B,UAAA8M,SAAA9F,QACG7I,EAAA6C,MAAAqE,IAAA,gBAAAlH,GACH,WAAAA,EAAAY,OAAAZ,EAAAsH,WAAAwB,MAAA9I,EAAAa,QAAAG,QAAA,QAAyE,QAzNxE,CA2NAV,aAAAuB,UAAAmO,QAAA,CACD3H,QAAA,MACAsF,UAAA,CACArI,QAAA,aACAxE,MAAA,WAEAyI,OAAA,oCACA0G,OAAA,CACA3K,QAAA,0cACAxE,MAAA,YAEAoP,UAAA,CACA5K,QAAA,oBACAxE,MAAA,UAEAqP,aAAA,CACA7K,QAAA,WACAxE,MAAA,UAEAsP,cAAA,CACA9K,QAAA,QACAxE,MAAA,UAEAuP,SAAA,CACA/K,QAAA,aACAxE,MAAA,aAECR,MAAAuB,UAAAyO,OAAAhQ,MAAAuB,UAAAC,OAAA,UACDyO,qBAAA,CACAjL,QAAA,cACAP,OAAA,CACAwL,qBAAA,4HACAvJ,KAAA1G,MAAAuB,UAAAuG,OAAAhB,IAAArC,SAGAyL,gBAAA,CACAlL,QAAA,UACAP,OAAA,CACAyL,gBAAA,yBACAxJ,KAAA1G,MAAAuB,UAAA4O,WAGCnQ,MAAAuB,UAAAyO,OAAAlJ,IAAA9B,QAAA,oGAAAhF,MAAAuB,UAAAE,aAAA,wBACDyO,gBAAAlQ,MAAAuB,UAAAyO,OAAA,kBACChQ,MAAAuB,UAAAyO,OAAAlJ,IAAArC,OAAA,eAAAzE,MAAAuB,UAAAE,aAAA,oBACD2O,cAAA,qBACCpQ,MAAAuB,UAAAE,aAAA,SAAAzB,MAAAuB,UAAAsI,WAAA,gBACDwG,aAAA,CACArL,QAAA,wEACAL,YAAA,EACAF,OAAAzE,MAAAuB,UAAA4O,QAAA,MAECnQ,MAAAuB,UAAA+O,WAAA,CACDvI,QAAA,CACA/C,QAAA,kEACAL,YAAA,GAEAsE,OAAA,sBACAG,SAAA,2CACAtC,IAAA,kCACAuF,SAAA,QACA1C,OAAA,0DACAC,SAAA,uGACAzB,YAAA,cACAuB,QAAA,qBACApH,SAAA,ijEACA0H,SAAA,+pDACAiE,QAAA,6lBACAsC,OAAA,iuCACApH,UAAA,kZACAM,QAAA,klEACCzJ,MAAAuB,UAAAiP,OAAA,CACDzI,QAAA,OAAc,CACd/C,QAAA,gEACAL,YAAA,IAEAqE,IAAA,CACAhE,QAAA,gDACAL,YAAA,GAEAsE,OAAA,CACAjE,QAAA,kCACAH,QAAA,EACAJ,OAAA,CACA4H,SAAA,iBAGAgB,UAAA,CACArI,QAAA,cACAL,YAAA,EACAnE,MAAA,WAEA4I,SAAA,cACAiD,SAAA,UACA5C,QAAA,yOACAE,OAAA,kDACAD,QAAA,sBACAE,SAAA,+CACAzB,YAAA,eACC,SAAAzI,GACD,IAAAC,EAAA,CACA0M,SAAA,EACArH,QAAA,sBACAP,OAAA,CACA4H,SAAA,EACArH,QAAA,uBACAL,YAAA,GACS,WACTgF,OAAA,0DACAC,SAAA,6FACAzB,YAAA,oBAEK,CACLnD,QAAA,sBACAH,QAAA,EACAJ,OAAA,CACA4H,SAAA,oBAEK,gCAEL3M,EAAA6B,UAAAkP,KAAA,CACAC,QAAA,CACA1L,QAAA,oCACAxE,MAAA,aAEAuH,QAAA,CACA/C,QAAA,iBACAL,YAAA,GAEAsE,OAAA,EACAjE,QAAA,+DACAL,YAAA,EACAE,QAAA,EACAJ,OAAA9E,GACK,CACLqF,QAAA,wDACAH,QAAA,EACAJ,OAAA9E,IAEA0M,SAAA1M,EAAA0M,SACAjD,SAAA,CACApE,QAAA,s5CACAL,YAAA,GAEA8E,QAAA,CACAzE,QAAA,wJACAL,YAAA,GAEA+E,QAAA,CACA1E,QAAA,yCACAL,YAAA,GAEAiF,SAAA,uCACAzB,YAAA,gCAEA,IAAArI,EAAAH,EAAA0M,SAAA,GAAA5H,OACA3E,EAAAmJ,OAAAvJ,EAAA6B,UAAAkP,KAAAxH,OAAAnJ,EAAAsJ,SAAA1J,EAAA6B,UAAAkP,KAAArH,SAAAtJ,EAAA2J,QAAA/J,EAAA6B,UAAAkP,KAAAhH,QAAA3J,EAAA4J,QAAAhK,EAAA6B,UAAAkP,KAAA/G,QAAA5J,EAAA8J,SAAAlK,EAAA6B,UAAAkP,KAAA7G,SAAA9J,EAAAqI,YAAAzI,EAAA6B,UAAAkP,KAAAtI,YAAAzI,EAAA6B,UAAAoP,MAAAjR,EAAA6B,UAAAkP,KAzDC,CA0DAzQ,aAAAuB,UAAAqP,MAAA,CACD7I,QAAA,CACA/C,QAAA,iBACAP,OAAA,CACAgF,QAAA,UAGAR,OAAA,CACAjE,QAAA,8CACAH,QAAA,GAEA8E,OAAA,yCACAF,QAAA,smBACAL,SAAA,44BACAQ,SAAA,yDACAzB,YAAA,WACCnI,MAAAuB,UAAAsP,MAAA7Q,MAAAuB,UAAAC,OAAA,SACDiI,QAAA,86CACA1B,QAAA,EACA/C,QAAA,iBACAP,OAAA,CACAgF,QAAA,UAEG,CACHzE,QAAA,gBACAL,YAAA,MAEC,SAAAjF,GACD,IAAAC,EAAA,qBACAG,EAAA,CACAkF,QAAA,+CACAxE,MAAA,YACAiE,OAAA,CACA0D,YAAA,MAGApI,EAAA,UACAM,EAAA,gBAsECL,MArEDuB,UAAAuP,MAAA,CACA/I,QAAA,WACA/C,QAAA,6DACAL,YAAA,IAEAoM,MAAA,CACA/L,QAAA,QACAxE,MAAA,YAEAwQ,QAAA,EACAhM,QAAA,qFACAL,YAAA,EACAF,OAAA,CACAgF,QAAA,wBACAR,OAAAlJ,EACAkR,UAAAnR,EACAuM,SAAA1M,EACAgK,OAAAtJ,EACA8H,YAAA,WAEK,CACLnD,QAAA,wMACAL,YAAA,EACAF,OAAA,CACAgF,QAAA,4DACAR,OAAAlJ,EACAkR,UAAAnR,EACAuM,SAAA1M,EACAgK,OAAAtJ,EACAuJ,SAAA,2CAEK,CACL5E,QAAA,8BACAL,YAAA,EACAF,OAAA,CACAgF,QAAA,aAEK,CACLzE,QAAA,kGACAL,YAAA,EACAF,OAAA,CACAgF,QAAA,UACAR,OAAAlJ,EACAkR,UAAAnR,EACAuM,SAAA,CAAA1M,EAAA,mCACAgK,OAAAtJ,EACAuJ,SAAA,kCACAzB,YAAA,WAEK,CACLnD,QAAA,+DACAL,YAAA,EACAF,OAAA,CACAgF,QAAA,UACAR,OAAAlJ,EACAkR,UAAAnR,EACAiR,MAAA,CACA/L,QAAA,cACAL,YAAA,EACAnE,MAAA,YAEA6L,SAAA1M,EACAgK,OAAAtJ,EACAuJ,SAAA,QAGAA,SAAA,OACAzB,YAAA,SA9EC,GAgFAnI,MAAAuB,UAAA2P,MAAAlR,MAAAuB,UAAAC,OAAA,QAA+DxB,MAAAuB,UAAAE,aAAA,mBAChEyP,MAAA,CACAlM,QAAA,wBACAP,OAAA,CACAlB,EAAA,CACAyB,QAAA,0CACAP,OAAA,CACA0M,UAAA,CACAnM,QAAA,cACAxE,MAAA,eAEA4Q,iBAAA,CACApM,QAAA,2BACAxE,MAAA,WACAiE,OAAA,CACA0D,YAAA,QAGAzB,KAAA1G,MAAAuB,UAAAgC,IAGAwE,QAAA/H,MAAAuB,UAAAgC,EAAAwE,QACAkB,OAAAjJ,MAAAuB,UAAAgC,EAAA0F,OACAC,SAAA,WACAO,QAAA,OACAE,OAAA,CACA3E,QAAA,gCACAL,YAAA,GAEAwD,YAAA,wBAGCnI,MAAAuB,UAAA8P,UAAA,CACDC,QAAA,CACAtM,QAAA,MACAxE,MAAA,WAEA+Q,UAAA,CACAvM,QAAA,KACAxE,MAAA,YAEAgR,UAAA,CACAxM,QAAA,IACAxE,MAAA,WAEAiR,UAAA,CACAzM,QAAA,QACAxE,MAAA,aAEAoJ,SAAA,OACA7B,QAAA,OACC/H,MAAAuB,UAAAmQ,IAAA,CACD3J,QAAA,CACA/C,QAAA,gBACAL,YAAA,EACAF,OAAA,CACA6K,OAAA,2BAGArG,OAAA,CACAjE,QAAA,iDACAH,QAAA,GAEA6E,QAAA,WACAN,SAAA,CACApE,QAAA,wCACAP,OAAA,CACAgF,QAAA,6BAGA4C,SAAA,CACArH,QAAA,wBACAP,OAAA,CACAgF,QAAA,qBAGAwE,QAAA,iUACAjE,SAAA,CACAhF,QAAA,aACAP,OAAA,CACAgF,QAAA,UAGAA,QAAA,kPACAG,SAAA,yDACAD,OAAA,wDACAxB,YAAA,iBACCnI,MAAAuB,UAAAoQ,QAAA,CACD5J,QAAA,OACAkB,OAAA,wBACAW,SAAA,mCACAH,QAAA,CACAzE,QAAA,qgFACAL,YAAA,GAEA+E,QAAA,yBACAC,OAAA,mBACAxB,YAAA,eACC,SAAAzI,GACD,IAAAC,EAAA,YACAG,EAAA,CACAkF,QAAA,aACAxE,MAAA,YAEAd,EAAA6B,UAAAqQ,aAAAlS,EAAA6B,UAAAC,OAAA,cACAuG,QAAApI,EACAsJ,OAAA,EACAjE,QAAA,yBACAH,QAAA,GACK,CACLG,QAAA,yBACAH,QAAA,EACAJ,OAAA,CACAyF,cAAApK,KAGA2J,QAAA,mSACAoI,eAAA,CACA7M,QAAA,aACAxE,MAAA,cAEGd,EAAA6B,UAAAE,aAAA,0BACHqQ,oBAAA,CACA9M,QAAA,iBACAxE,MAAA,WAEAuR,cAAA,CACA/M,QAAA,qBACAxE,MAAA,QACAiE,OAAA,CACAsD,QAAApI,EACAuK,cAAApK,MAGGJ,EAAA6B,UAAAE,aAAA,yBACHuQ,oBAAA,CACAhN,QAAA,yBACAP,OAAA,CACA0M,UAAA,CACAnM,QAAA,QACAxE,MAAA,eAEAkG,KAAAhH,EAAA6B,UAAAsI,aAGAoI,mBAAA,EACAjN,QAAA,iBACAH,QAAA,EACArE,MAAA,UACK,CACLwE,QAAA,iBACAH,QAAA,EACArE,MAAA,SACAiE,OAAA,CACAyF,cAAApK,OAGGJ,EAAA6B,UAAAE,aAAA,0BACHyH,SAAA,kCACGxJ,EAAA6B,UAAAqQ,aAAA,mBA7DF,CA8DA5R,OACD,IAoYCN,EApYDD,EAAA,SAAAC,GACA,IAAAC,EAAA,oBAAAJ,cAAA,oBAAAM,mBAAAL,gBAAAK,kBAAAL,KAAA,GACAM,EAAA,WACA,IAAAJ,EAAA,8BACAI,EAAA,EACAC,EAAAJ,EAAAK,MAAA,CACAC,OAAAN,EAAAK,OAAAL,EAAAK,MAAAC,OACAC,4BAAAP,EAAAK,OAAAL,EAAAK,MAAAE,4BACAC,KAAA,CACAC,OAAA,SAAAV,GACA,OAAAA,aAAAW,EAAA,IAAAA,EAAAX,EAAAY,KAAAP,EAAAI,KAAAC,OAAAV,EAAAa,SAAAb,EAAAc,OAAA,UAAAT,EAAAI,KAAAG,KAAAZ,KAAAe,IAAAV,EAAAI,KAAAC,QAAAV,EAAAgB,QAAA,cAA+JA,QAAA,aAAsBA,QAAA,gBAErLJ,KAAA,SAAAZ,GACA,OAAAiB,OAAAC,UAAAC,SAAAC,KAAApB,GAAAqB,MAAA,wBAEAC,MAAA,SAAAtB,GACA,OAAAA,EAAAuB,MAAAN,OAAAO,eAAAxB,EAAA,QACAyB,QAAArB,IACWJ,EAAAuB,MAEXG,MAAA,SAAA1B,EAAAC,GACA,IAAAG,EAAAC,EAAAI,KAAAG,KAAAZ,GAEA,OAAAC,KAAA,GAA6BG,GAC7B,aACA,GAAAH,EAAAI,EAAAI,KAAAa,MAAAtB,IAAA,OAAAC,EAAAI,EAAAI,KAAAa,MAAAtB,IACA,IAAAW,EAAA,GAEA,QAAArB,KAAAW,EAAAI,EAAAI,KAAAa,MAAAtB,IAAAW,EAAAX,EACAA,EAAA2B,eAAArC,KAAAqB,EAAArB,GAAAe,EAAAI,KAAAiB,MAAA1B,EAAAV,GAAAW,IAGA,OAAAU,EAEA,YACA,OAAAV,EAAAI,EAAAI,KAAAa,MAAAtB,IAAAC,EAAAI,EAAAI,KAAAa,MAAAtB,KAAAW,EAAA,GAAAV,EAAAI,EAAAI,KAAAa,MAAAtB,IAAAW,EAAAX,EAAA4B,QAAA,SAAA5B,EAAAI,GACAO,EAAAP,GAAAC,EAAAI,KAAAiB,MAAA1B,EAAAC,KACeU,GAGf,OAAAX,IAGA6B,UAAA,CACAC,OAAA,SAAA9B,EAAAC,GACA,IAAAG,EAAAC,EAAAI,KAAAiB,MAAArB,EAAAwB,UAAA7B,IAEA,QAAAW,KAAAV,EACAG,EAAAO,GAAAV,EAAAU,GAGA,OAAAP,GAEA2B,aAAA,SAAA/B,EAAAC,EAAAG,EAAAO,GACA,IAAArB,GAAAqB,KAAAN,EAAAwB,WAAA7B,GAEA,MAAAgC,UAAAC,OAAA,CACA,QAAAC,KAAA9B,EAAA4B,UAAA,GACA5B,EAAAuB,eAAAO,KAAA5C,EAAA4C,GAAA9B,EAAA8B,IAGA,OAAA5C,EAGA,IAAA6C,EAAA,GAEA,QAAAC,KAAA9C,EACA,GAAAA,EAAAqC,eAAAS,GAAA,CACA,GAAAA,GAAAnC,EAAA,QAAAiC,KAAA9B,EACAA,EAAAuB,eAAAO,KAAAC,EAAAD,GAAA9B,EAAA8B,IAEAC,EAAAC,GAAA9C,EAAA8C,GAIA,OAAA/B,EAAAwB,UAAAQ,IAAAhC,EAAAwB,UAAA,SAAA5B,EAAAG,GACAA,IAAAO,EAAAX,IAAAC,GAAAD,IAAAsC,KAAArC,GAAAkC,KACWxB,EAAAX,GAAAmC,GAEXE,IAAA,SAAArC,EAAAC,EAAAG,EAAAO,GACA,QAAArB,KAAAqB,KAAA,GAAmCX,EACnCA,EAAA2B,eAAArC,KAAAW,EAAAmB,KAAApB,EAAAV,EAAAU,EAAAV,GAAAc,GAAAd,GAAA,WAAAe,EAAAI,KAAAG,KAAAZ,EAAAV,KAAAqB,EAAAN,EAAAI,KAAAa,MAAAtB,EAAAV,KAAA,UAAAe,EAAAI,KAAAG,KAAAZ,EAAAV,KAAAqB,EAAAN,EAAAI,KAAAa,MAAAtB,EAAAV,OAAAqB,EAAAN,EAAAI,KAAAa,MAAAtB,EAAAV,MAAA,EAAAe,EAAAwB,UAAAQ,IAAArC,EAAAV,GAAAW,EAAAX,EAAAqB,OAAAN,EAAAI,KAAAa,MAAAtB,EAAAV,MAAA,EAAAe,EAAAwB,UAAAQ,IAAArC,EAAAV,GAAAW,EAAA,KAAAU,OAIA4B,QAAA,GACAC,aAAA,SAAAxC,EAAAC,GACAI,EAAAoC,kBAAAC,SAAA1C,EAAAC,IAEAwC,kBAAA,SAAAzC,EAAAC,EAAAG,GACA,IAAAO,EAAA,CACAgC,SAAAvC,EACAwC,SAAA,oGAEAvC,EAAAwC,MAAAC,IAAA,sBAAAnC,GAEA,QAAArB,EAAA4C,EAAAvB,EAAAoC,UAAA/C,EAAAgD,iBAAArC,EAAAiC,UAAAT,EAAA,EAA4E7C,EAAA4C,EAAAC,MAC5E9B,EAAA4C,iBAAA3D,GAAA,IAAAW,EAAAU,EAAAgC,WAGAM,iBAAA,SAAA7C,EAAAO,EAAArB,GACA,QAAA4C,EAAAC,EAAAC,EAAAhC,EAA6BgC,IAAApC,EAAAkD,KAAAd,EAAAe,YAC7Bf,IAAAgB,WAGAhB,IAAAF,GAAAE,EAAAe,UAAA9B,MAAArB,IAAA,UAAAqD,cAAAlB,EAAA9B,EAAAwB,UAAAK,IAAA9B,EAAA+C,UAAA/C,EAAA+C,UAAAnC,QAAAhB,EAAA,IAAAgB,QAAA,yBAAAkB,EAAA9B,EAAAgD,YAAA,OAAAF,MAAAd,EAAAhC,EAAAgD,YAAAE,YAAAlB,EAAAe,UAAAf,EAAAe,UAAAnC,QAAAhB,EAAA,IAAAgB,QAAA,yBAAAkB,GACA,IAAAzC,EAAA,CACA8D,QAAAnD,EACAoD,SAAAtB,EACAuB,QAAAtB,EACAuB,KAAAtD,EAAAuD,aAEA,GAAAtD,EAAAwC,MAAAC,IAAA,sBAAArD,MAAAiE,OAAAjE,EAAAgE,QAAA,OAAAhE,EAAAiE,OAAArD,EAAAwC,MAAAC,IAAA,mBAAArD,KAAA8D,QAAAI,YAAAlE,EAAAiE,KAAArD,EAAAwC,MAAAC,IAAA,kBAAArD,SAAAY,EAAAwC,MAAAC,IAAA,WAAArD,GAEA,GAAAY,EAAAwC,MAAAC,IAAA,mBAAArD,GAAAkB,GAAAV,EAAA2D,OAAA,CACA,IAAAC,EAAA,IAAAD,OAAAvD,EAAAyD,UACAD,EAAAE,UAAA,SAAA/D,GACAP,EAAAuE,gBAAAhE,EAAAiE,KAAA5D,EAAAwC,MAAAC,IAAA,gBAAArD,KAAA8D,QAAAW,UAAAzE,EAAAuE,gBAAA1E,KAAA8B,KAAA3B,EAAA8D,SAAAlD,EAAAwC,MAAAC,IAAA,kBAAArD,GAAAY,EAAAwC,MAAAC,IAAA,WAAArD,IACWoE,EAAAM,YAAAC,KAAAC,UAAA,CACXb,SAAA/D,EAAA+D,SACAE,KAAAjE,EAAAiE,KACAY,gBAAA,UAES7E,EAAAuE,gBAAA3D,EAAAkE,UAAA9E,EAAAiE,KAAAjE,EAAAgE,QAAAhE,EAAA+D,UAAAnD,EAAAwC,MAAAC,IAAA,gBAAArD,KAAA8D,QAAAW,UAAAzE,EAAAuE,gBAAA1E,KAAA8B,KAAAhB,GAAAC,EAAAwC,MAAAC,IAAA,kBAAArD,GAAAY,EAAAwC,MAAAC,IAAA,WAAArD,IAET8E,UAAA,SAAAvE,EAAAC,EAAAG,GACA,IAAAd,EAAA,CACAoE,KAAA1D,EACAyD,QAAAxD,EACAuD,SAAApD,GAEA,OAAAC,EAAAwC,MAAAC,IAAA,kBAAAxD,KAAAkF,OAAAnE,EAAAoE,SAAAnF,EAAAoE,KAAApE,EAAAmE,SAAApD,EAAAwC,MAAAC,IAAA,iBAAAxD,GAAAqB,EAAA0D,UAAAhE,EAAAI,KAAAC,OAAApB,EAAAkF,QAAAlF,EAAAkE,WAEAkB,aAAA,SAAA1E,EAAAC,EAAAG,EAAAO,EAAArB,EAAA4C,EAAAC,GACA,IAAAC,EAAA/B,EAAAsE,MAEA,QAAAlF,KAAAW,EACA,GAAAA,EAAAuB,eAAAlC,IAAAW,EAAAX,GAAA,CACA,GAAAA,GAAA0C,EAAA,OACA,IAAA0B,EAAAzD,EAAAX,GACAoE,EAAA,UAAAxD,EAAAI,KAAAG,KAAAiD,KAAA,CAAAA,GAEA,QAAAe,EAAA,EAA2BA,EAAAf,EAAA5B,SAAc2C,EAAA,CACzC,IAAAC,EAAAhB,EAAAe,GACAE,EAAAD,EAAAE,OACAC,IAAAH,EAAAI,WACAC,IAAAL,EAAAM,OACAC,EAAA,EACAC,EAAAR,EAAA/D,MAEA,GAAAoE,IAAAL,EAAAS,QAAA9F,OAAA,CACA,IAAA+F,EAAAV,EAAAS,QAAAnE,WAAAE,MAAA,eACAwD,EAAAS,QAAAE,OAAAX,EAAAS,QAAAG,OAAAF,EAAA,KAGAV,IAAAS,SAAAT,EAEA,QAAAa,EAAA/E,EAAAgF,EAAArG,EAAoCoG,EAAAzF,EAAAgC,OAAc0D,GAAA1F,EAAAyF,GAAAzD,SAAAyD,EAAA,CAClD,IAAAE,EAAA3F,EAAAyF,GACA,GAAAzF,EAAAgC,OAAAjC,EAAAiC,OAAA,OAEA,KAAA2D,aAAAxD,GAAA,CACA,GAAA8C,GAAAQ,GAAAzF,EAAAgC,OAAA,GACA,GAAA4C,EAAAgB,UAAAF,IAAAG,EAAAjB,EAAAkB,KAAA/F,IAAA,MAEA,QAAAgG,EAAAF,EAAAG,OAAAjB,EAAAc,EAAA,GAAA7D,OAAA,GAAAiE,EAAAJ,EAAAG,MAAAH,EAAA,GAAA7D,OAAAkE,EAAAT,EAAAU,EAAAT,EAAAU,EAAApG,EAAAgC,OAAwHkE,EAAAE,IAAAD,EAAAF,IAAAjG,EAAAkG,GAAAvF,OAAAX,EAAAkG,EAAA,GAAAhB,UAAoDgB,EAC5KH,IAAAI,GAAAnG,EAAAkG,GAAAlE,YAAAyD,EAAAC,EAAAS,GAGA,GAAAnG,EAAAyF,aAAAtD,EAAA,SACAkE,EAAAH,EAAAT,EAAAE,EAAA5F,EAAAuG,MAAAZ,EAAAS,GAAAN,EAAAG,OAAAN,MACmB,CACnBd,EAAAgB,UAAA,EACA,IAAAC,EAAAjB,EAAAkB,KAAAH,GACAU,EAAA,EAGA,GAAAR,EAAA,CACAd,IAAAI,EAAAU,EAAA,GAAAA,EAAA,GAAA7D,OAAA,GAAAiE,GAAAF,EAAAF,EAAAG,MAAAb,IAAAU,IAAA,GAAAS,MAAAnB,IAAAnD,OAEA,IAAAuE,EAAAZ,EAAAW,MAAA,EAAAP,GACAS,EAAAb,EAAAW,MAAAL,GACAQ,EAAA,CAAAhB,EAAAY,GAEAE,MAAAd,EAAAC,GAAAa,EAAAvE,OAAAyE,EAAAC,KAAAH,IACA,IAAAI,EAAA,IAAAxE,EAAA3C,EAAAqF,EAAAzE,EAAAoE,SAAAqB,EAAAhB,GAAAgB,EAAAT,EAAAS,EAAAZ,GACA,GAAAwB,EAAAC,KAAAC,GAAAH,GAAAC,EAAAC,KAAAF,GAAAI,MAAA3F,UAAA4F,OAAAC,MAAA9G,EAAAyG,GAAA,GAAAJ,GAAAjG,EAAAqE,aAAA1E,EAAAC,EAAAG,EAAAsF,EAAAC,GAAA,EAAAlG,GAAAyC,EAAA,WACmB,GAAAA,EAAA,WAOnBuC,SAAA,SAAAzE,EAAAC,EAAAG,GACA,IAAAO,EAAA,CAAAX,GACAV,EAAAW,EAAA+G,KAEA,GAAA1H,EAAA,CACA,QAAA4C,KAAA5C,EACAW,EAAAiC,GAAA5C,EAAA4C,UAGAjC,EAAA+G,KAGA,OAAA3G,EAAAqE,aAAA1E,EAAAW,EAAAV,EAAA,QAAAU,GAEAkC,MAAA,CACAoE,IAAA,GACAC,IAAA,SAAAlH,EAAAC,GACA,IAAAG,EAAAC,EAAAwC,MAAAoE,IACA7G,EAAAJ,GAAAI,EAAAJ,IAAA,GAAAI,EAAAJ,GAAA2G,KAAA1G,IAEA6C,IAAA,SAAA9C,EAAAC,GACA,IAAAG,EAAAC,EAAAwC,MAAAoE,IAAAjH,GACA,GAAAI,KAAA6B,OAAA,QAAAtB,EAAArB,EAAA,EAA+CqB,EAAAP,EAAAd,MAC/CqB,EAAAV,MAKAU,EAAAN,EAAAsE,MAAA,SAAA3E,EAAAC,EAAAG,EAAAC,EAAAM,GACA2B,KAAA1B,KAAAZ,EAAAsC,KAAAzB,QAAAZ,EAAAqC,KAAAxB,MAAAV,EAAAkC,KAAAL,OAAA,GAAA5B,GAAA,IAAA4B,OAAAK,KAAA6C,SAAAxE,GAGA,GAAAA,EAAA0D,UAAA,SAAArE,EAAAC,EAAAG,GACA,oBAAAJ,EAAA,OAAAA,EACA,aAAAK,EAAAI,KAAAG,KAAAZ,GAAA,OAAAA,EAAAe,IAAA,SAAAX,GACA,OAAAO,EAAA0D,UAAAjE,EAAAH,EAAAD,KACOmH,KAAA,IACP,IAAA7H,EAAA,CACAsB,KAAAZ,EAAAY,KACAC,QAAAF,EAAA0D,UAAArE,EAAAa,QAAAZ,EAAAG,GACAgH,IAAA,OACAC,QAAA,SAAArH,EAAAY,MACA0G,WAAA,GACA9D,SAAAvD,EACAsH,OAAAnH,GAGA,GAAAJ,EAAAc,MAAA,CACA,IAAAoB,EAAA,UAAA7B,EAAAI,KAAAG,KAAAZ,EAAAc,OAAAd,EAAAc,MAAA,CAAAd,EAAAc,OACA+F,MAAA3F,UAAAyF,KAAAI,MAAAzH,EAAA+H,QAAAnF,GAGA7B,EAAAwC,MAAAC,IAAA,OAAAxD,GACA,IAAA6C,EAAAlB,OAAAuG,KAAAlI,EAAAgI,YAAAvG,IAAA,SAAAf,GACA,OAAAA,EAAA,MAAAV,EAAAgI,WAAAtH,IAAA,IAAAgB,QAAA,eAAuE,MAChEmG,KAAA,KACP,UAAA7H,EAAA8H,IAAA,WAAA9H,EAAA+H,QAAAF,KAAA,UAAAhF,EAAA,IAAAA,EAAA,QAAA7C,EAAAuB,QAAA,KAAAvB,EAAA8H,IAAA,MACKnH,EAAAyC,SAAA,OAAAzC,EAAAwH,kBAAApH,EAAAG,6BAAAP,EAAAwH,iBAAA,mBAAAzH,GACL,IAAAI,EAAAgE,KAAAsD,MAAA1H,EAAAiE,MACAtD,EAAAP,EAAAoD,SACAlE,EAAAc,EAAAkE,eACArE,EAAAkE,YAAA9D,EAAAkE,UAAAnE,EAAAsD,KAAArD,EAAAwB,UAAAlB,OAAArB,GAAAW,EAAA0H,UACK,GAAA1H,EAAAK,OAAAL,EAAAK,MACL,IAAAhB,EAAAoD,SAAAkF,eAAA,GAAArB,MAAAnF,KAAAsB,SAAAmF,qBAAA,WAAAC,MACA,OAAAxI,IAAAe,EAAAyD,SAAAxE,EAAAyI,IAAA1H,EAAAE,QAAAjB,EAAA0I,aAAA,6BAAAtF,SAAAuF,WAAApI,OAAAqI,sBAAArI,OAAAqI,sBAAA7H,EAAAmC,cAAA3C,OAAAsI,WAAA9H,EAAAmC,aAAA,IAAAE,SAAA+E,iBAAA,mBAAApH,EAAAmC,gBAAAvC,EAAAK,MAhQA,GAmQAN,EAAAE,UAAAF,EAAAE,QAAAE,QAAA,IAAAR,MAAAU,MAAAF,KAEAE,MAAAuB,UAAAgI,MAAA,CACAxB,QAAA,EACA/C,QAAA,kCACAL,YAAA,GACG,CACHK,QAAA,mBACAL,YAAA,EACAE,QAAA,IAEAoE,OAAA,CACAjE,QAAA,iDACAH,QAAA,GAEA2E,aAAA,CACAxE,QAAA,iGACAL,YAAA,EACAF,OAAA,CACA0D,YAAA,UAGAsB,QAAA,6GACAC,QAAA,qBACAN,SAAA,oBACAO,OAAA,wDACAC,SAAA,0DACAzB,YAAA,iBACC,SAAAzI,GACDA,EAAA6B,UAAA2Q,KAAAxS,EAAA6B,UAAAC,OAAA,SACAuG,QAAA,QACA/C,QAAA,+CACAH,QAAA,IAEA4E,QAAA,yRAEA,IAAA9J,EAAA,CACAqF,QAAA,aACAP,OAAA,CACA0M,UAAA,CACAnM,QAAA,WACAxE,MAAA,OAEAkG,KAAAhH,EAAA6B,UAAA2Q,OAGAxS,EAAA6B,UAAAE,aAAA,kBACAqI,MAAA,EACA9E,QAAA,+DACAH,QAAA,EACAJ,OAAA,CACAyF,cAAAvK,IAEK,CACLqF,QAAA,wCACAH,QAAA,EACAJ,OAAA,CACAyF,cAAAvK,IAEK,CACLqF,QAAA,yDACAH,QAAA,EACAJ,OAAA,CACAyF,cAAAvK,IAEK,CACLqF,QAAA,0CACAH,QAAA,EACAJ,OAAA,CACAyF,cAAAvK,IAEK,CACLqF,QAAA,sCACAH,QAAA,EACAJ,OAAA,CACAyF,cAAAvK,IAEK,CACLqF,QAAA,+EACAL,YAAA,EACAE,QAAA,IAEAwH,SAAA,+BACAkE,OAAA,CACAvL,QAAA,mCACAL,YAAA,KAEGjF,EAAA6B,UAAAE,aAAA,iBACHwM,QAAA,+OACAjE,SAAA,0BACGtK,EAAA6B,UAAA2Q,KAAAjJ,OAAA,EACHjE,QAAA,+DACAH,QAAA,EACAJ,OAAA,CACAyF,cAAAvK,IAEG,CACHqF,QAAA,wCACAH,QAAA,EACAJ,OAAA,CACAyF,cAAAvK,IAEG,CACHqF,QAAA,yDACAH,QAAA,EACAJ,OAAA,CACAyF,cAAAvK,IAEG,CACHqF,QAAA,0CACAH,QAAA,EACAJ,OAAA,CACAyF,cAAAvK,IAEG,CACHqF,QAAA,sCACAH,QAAA,EACAJ,OAAA,CACAyF,cAAAvK,IAEG,CACHqF,QAAA,2DACAH,QAAA,EACAJ,OAAA,CACAyF,cAAAvK,KAhGC,CAmGAK,QAAAN,EAuCAM,OAtCDuB,UAAA4Q,QAAAzS,EAAA6B,UAAAC,OAAA,QACAiI,QAAA,mWACAzE,QAAA,gCACAL,YAAA,IAEAgF,OAAA,wJACGjK,EAAA6B,UAAAE,aAAA,oBACH2Q,UAAA,CACApN,QAAA,WACAxE,MAAA,YACAiE,OAAA,CACA0M,UAAA,CACAnM,QAAA,WACAxE,MAAA,OAEAkG,KAAAhH,EAAA6B,UAAA4Q,UAGAE,UAAA,EACArN,QAAA,cACAP,OAAA,CACA0M,UAAA,CACAnM,QAAA,cACAxE,MAAA,OAEAkG,KAAAhH,EAAA6B,UAAA4Q,UAEK,CACLnN,QAAA,YACAP,OAAA,CACA0M,UAAA,CACAnM,QAAA,YACAxE,MAAA,OAEAkG,KAAAhH,EAAA6B,UAAA4Q,aAICnS,MAAAuB,UAAA4O,OAAAnQ,MAAAuB,UAAAC,OAAA,SACDiI,QAAA,6oBACAR,OAAA,EACAjE,QAAA,yCACAH,QAAA,GACG,CACHG,QAAA,mCACAH,QAAA,IAEA2E,aAAA,EACAxE,QAAA,mCACAP,OAAA,CACA0D,YAAA,OAEG,CACHnD,QAAA,2BACAL,YAAA,EACAF,OAAA,CACA0D,YAAA,OAEG,CACHnD,QAAA,0EACAL,YAAA,EACAF,OAAA,CACA0D,YAAA,OAEG,CACHnD,QAAA,wEACAL,YAAA,EACAF,OAAA,CACA0D,YAAA,QAGAwB,OAAA,8CACC3J,MAAAuB,UAAAE,aAAA,uBACD6Q,iBAAA,CACAtN,QAAA,8BACAP,OAAA,CACA2E,SAAA,OACAI,aAAA,CACAxE,QAAA,yBACAP,OAAA,CACA0D,YAAA,OAGAsB,QAAAzJ,MAAAuB,UAAA4O,OAAA1G,QACAtB,YAAA,cAGAoK,aAAA,CACAvN,QAAA,aACAL,YAAA,EACAnE,MAAA,WACAiE,OAAA,CACA4I,UAAA,CACArI,QAAA,2FACAL,YAAA,EACAnE,MAAA,eAICR,MAAAuB,UAAAiR,OAAAxS,MAAAuB,UAAA4O,OAAAnQ,MAAAuB,UAAA,wBAA6FZ,OAAA8R,iBAAAzS,MAAAuB,UAAA,sBAC9FmR,kBAAA,CACAvR,MAAA,SAAAzB,EAAAC,EAAAG,EAAAC,GACAL,EAAAwD,WAAAvD,IAAAD,EAAAiT,WAAA,GAAAjT,EAAA0D,KAAA1D,EAAA0D,KAAA1C,QAAAZ,EAAA,SAAAA,GACA,sBAAAC,MAAAD,GAAA,OAAAA,EAEA,QAAAO,EAAAX,EAAAiT,WAAAhR,QAAyC,IAAAjC,EAAA0D,KAAAwP,QAAA,MAAAjT,EAAAkT,cAAAxS,EAAA,UACzCA,EAGA,OAAAX,EAAAiT,WAAAtS,GAAAP,EAAA,MAAAH,EAAAkT,cAAAxS,EAAA,QACOX,EAAAyD,QAAAnD,MAAAuB,UAAAuG,UAGPgL,qBAAA,CACA3R,MAAA,SAAAzB,EAAAC,GACA,GAAAD,EAAAwD,WAAAvD,GAAAD,EAAAiT,WAAA,CACAjT,EAAAyD,QAAAnD,MAAAuB,UAAA5B,GAEA,IAAAG,EAAA,EACAC,EAAAY,OAAAuG,KAAAxH,EAAAiT,aACA,SAAAtS,EAAArB,GACA,KAAAc,GAAAC,EAAA4B,QAAA,QAAAC,EAAA,EAA+CA,EAAA5C,EAAA2C,OAAcC,IAAA,CAC7D,IAAAC,EAAA7C,EAAA4C,GAEA,oBAAAC,KAAAtB,SAAA,iBAAAsB,EAAAtB,QAAA,CACA,IAAAuB,EAAA/B,EAAAD,GACAX,EAAAO,EAAAiT,WAAA7Q,GACAyB,EAAA,iBAAA1B,MAAAtB,QACA+D,EAAAf,EAAAqP,QAAA,MAAAjT,EAAAkT,cAAA/Q,EAAA,OAEA,GAAAwC,GAAA,KACAxE,EACA,IAAAyE,EACAC,EAAAjB,EAAAwP,UAAA,EAAAzO,GACAI,EAAA,IAAA1E,MAAAqE,MAAA1E,EAAAK,MAAAmE,SAAAhF,EAAAO,EAAAyD,QAAAxD,GAAA,YAAAA,EAAAR,GACAyF,EAAArB,EAAAwP,UAAAzO,GAAA,MAAA3E,EAAAkT,cAAA/Q,EAAA,OAAAH,QACA,GAAA6C,GAAAI,EAEiBvE,EAFjBkE,EAAA,CAAAC,EAAAE,EAAAE,GAAAoO,OAAA,SAAAtT,GACA,QAAAA,KACiB6E,EAAAG,EAAA,iBAAA7C,EAAA0E,MAAA3F,UAAA4F,OAAAC,MAAAzH,EAAA,CAAA4C,EAAA,GAAAqR,OAAA1O,IAAA1C,EAAAtB,QAAAgE,EAAAzE,GAAAC,EAAA4B,OAAA,YAEJE,EAAAtB,SAAA,iBAAAsB,EAAAtB,SAAAF,EAAAwB,EAAAtB,UAIbF,CAAAX,EAAAwE,aAIClE,MAAAuB,UAAAuG,OAAA,CACDC,QAAA,kBACAC,OAAA,iBACAC,QAAA,sBACAC,MAAA,0BACApB,IAAA,CACA9B,QAAA,yGACAH,QAAA,EACAJ,OAAA,CACAqC,IAAA,CACA9B,QAAA,kBACAP,OAAA,CACA0D,YAAA,QACAC,UAAA,iBAGAC,aAAA,CACArD,QAAA,oDACAP,OAAA,CACA0D,YAAA,OACAnD,QAAA,gBACAL,YAAA,MAIAwD,YAAA,OACAG,YAAA,CACAtD,QAAA,YACAP,OAAA,CACA2D,UAAA,mBAKAG,OAAA,qBACCvI,MAAAuB,UAAAuG,OAAAhB,IAAArC,OAAA,cAAAA,OAAA8D,OAAAvI,MAAAuB,UAAAuG,OAAAS,OAAAvI,MAAAuC,MAAAqE,IAAA,gBAAAlH,GACD,WAAAA,EAAAY,OAAAZ,EAAAsH,WAAAwB,MAAA9I,EAAAa,QAAAG,QAAA,QAAuE,QACtEV,MAAAuB,UAAAkH,IAAAzI,MAAAuB,UAAAuG,OAAA9H,MAAAuB,UAAAmH,KAAA1I,MAAAuB,UAAAuG,OAAA9H,MAAAuB,UAAAoH,OAAA3I,MAAAuB,UAAAuG,OAAA9H,MAAAuB,UAAAqH,IAAA5I,MAAAuB,UAAAuG,OACD,IAAAoL,EAAA,CACAhK,SAAA,CACAlE,QAAA,8BACAH,QAAA,EACAJ,OAAA,CACAwE,OAAA,CACAjE,QAAA,kCACAH,QAAA,GAEA4E,QAAA,6XACAG,SAAA,sEACAR,SAAA,m0BACAD,UAAA,sBACAkD,SAAA,WACAlE,YAAA,iBAIAnI,MAAAuB,UAAA4R,OAAAnT,MAAAuB,UAAAC,OAAA,UACAuG,QAAA,kCACC/H,MAAAuB,UAAA4R,OAAArM,IAAA9B,QAAA,oGAAAhF,MAAAuB,UAAAE,aAAA,kBAAAyR,GAAAlT,MAAAuB,UAAAE,aAAA,eAAAyR,EAAAlT,MAAAuB,UAAA4R,OAAArM,KAAA9G,MAAAuB,UAAAsI,aAAA7J,MAAAuB,UAAAE,aAAA,kBAAAyR,EAAAlT,MAAAuB,UAAA4R,OAAA/I,QAAApK,MAAAuB,UAAA4R,OAAA/I,OAAA3F,OAAAwE,OAAAxE,OAAAyO,GAAAlT,MAAAuB,UAAAsH,MAAA7I,MAAAuB,UAAAE,aAAA,mBACDqF,IAAAoM,EAAAhK,UACClJ,MAAAuB,UAAA4R,OAAA9J,OAAArJ,MAAAuB,UAAA4R,OAAA9J,MAAA5E,OAAAwE,OAAAxE,OAAAyO,GAAAlT,MAAAuB,UAAA6R,OAAApT,MAAAuB,UAAA4R,OAAAnT,MAAAuB,UAAAsI,WAAA7J,MAAAuB,UAAAC,OAAA,SACDiI,QAAA,8TACAE,OAAA,wGACAP,SAAA,gDACAQ,SAAA,mGACC5J,MAAAuB,UAAAE,aAAA,wBACDqI,MAAA,CACA9E,QAAA,iHACAL,YAAA,EACAE,QAAA,GAEAkF,oBAAA,CACA/E,QAAA,wHACAxE,MAAA,YAEAwJ,SAAA,uBACChK,MAAAuB,UAAAE,aAAA,uBACDwI,kBAAA,CACAjF,QAAA,mCACAH,QAAA,EACAJ,OAAA,CACAyF,cAAA,CACAlF,QAAA,YACAP,OAAA,CACA0F,4BAAA,CACAnF,QAAA,UACAxE,MAAA,eAEAkG,KAAA,OAGAuC,OAAA,cAGCjJ,MAAAuB,UAAAsI,WAAA,mBAAApF,OAAAyF,cAAAzF,OAAAiC,KAAA1G,MAAAuB,UAAAsI,WAAA7J,MAAAuB,UAAAuG,QAAA9H,MAAAuB,UAAAE,aAAA,gBACD2I,OAAA,CACApF,QAAA,4CACAL,YAAA,EACAF,OAAAzE,MAAAuB,UAAAsI,WACArJ,MAAA,sBACAqE,QAAA,KAEC7E,MAAAuB,UAAA8I,GAAArK,MAAAuB,UAAAsI,WAAA7J,MAAAuB,UAAA8R,IAAA,CACDhG,UAAA,CACArI,QAAA,uSACAxE,MAAA,WAEA8S,KAAA,CACAtO,QAAA,+EACAxE,MAAA,YAEA+S,OAAA,CACAvO,QAAA,kEACAxE,MAAA,aAECR,MAAAuB,UAAAsH,IAAA,CACDd,QAAA,mBACAe,OAAA,CACA9D,QAAA,8BACAP,OAAA,CACAsE,KAAA,YAGAC,IAAA,iEACA1G,SAAA,2BACA2G,OAAA,CACAjE,QAAA,gDACAH,QAAA,GAEAqE,SAAA,+CACAC,UAAA,kBACAC,SAAA,oBACAjB,YAAA,YACCnI,MAAAuB,UAAAsH,IAAAC,OAAArE,OAAAiC,KAAA1G,MAAAuB,UAAAsH,IAAA7I,MAAAuB,UAAAuG,SAAA9H,MAAAuB,UAAAE,aAAA,gBACD4H,MAAA,CACArE,QAAA,0CACAL,YAAA,EACAF,OAAAzE,MAAAuB,UAAAsH,IACArI,MAAA,eACAqE,QAAA,KAEC7E,MAAAuB,UAAAE,aAAA,uBACD6H,aAAA,CACAtE,QAAA,6CACAP,OAAA,CACA6D,YAAA,CACAtD,QAAA,aACAP,OAAAzE,MAAAuB,UAAAuG,OAAAhB,IAAArC,QAEA0D,YAAA,wBACAE,aAAA,CACArD,QAAA,MACAP,OAAAzE,MAAAuB,UAAAsH,MAGArI,MAAA,iBAECR,MAAAuB,UAAAuG,OAAAhB,MAAA9G,MAAAuB,UAAAsH,IAAAvG,SAAA,CACD0C,QAAA,yBACAP,OAAA,CACA+O,iBAAA,+DACAC,eAAA,qBACAtG,MAAA,aACAuG,GAAA,YACAtB,UAAA,eAECpS,MAAAuB,UAAAE,aAAA,kBACDkS,QAAA,iBACApL,OAAA,kBACAoB,OAAA,YACC3J,MAAAuB,UAAApC,EAAAa,MAAAuB,UAAAC,OAAA,SACDyH,OAAA,mGAA0G,sJAC1GU,OAAA,yEACA3E,QAAA,uFACAL,YAAA,IAEA8E,QAAA,u0BACAG,SAAA,sHACC5J,MAAAuB,UAAApC,EAAA4I,QAAA,aACD/C,QAAA,iDACAL,YAAA,IACCsO,OAAAjT,MAAAuB,UAAApC,EAAA4I,SAAA/H,MAAAuB,UAAAE,aAAA,eACDmS,eAAA,CACA5O,QAAA,6BACAxE,MAAA,YAECR,MAAAuB,UAAAE,aAAA,eACDyH,SAAA,WACClJ,MAAAuB,UAAAE,aAAA,gBACDsO,SAAA,CACA/K,QAAA,sNACAxE,MAAA,cAECR,MAAAuB,UAAAsS,KAAA7T,MAAAuB,UAAAC,OAAA,SACDyH,OAAA,EACAjE,QAAA,wBACAH,QAAA,GACG,CACHG,QAAA,oCACAH,QAAA,IAEA4E,QAAA,oVACAG,SAAA,mFACC5J,MAAAuB,UAAAE,aAAA,mBACDqS,SAAA,CACA9O,QAAA,OACAxE,MAAA,YAECR,MAAAuB,UAAAwS,KAAA,CACDC,MAAA,6BAA+B,wBAC/BC,QAAA,YACAC,SAAA,YACAH,KAAA,CACA/O,QAAA,cACAxE,MAAA,cAECR,MAAAuB,UAAA4S,OAAA,CACD1K,QAAA,CACAzE,QAAA,8IACAL,YAAA,GAEAsE,OAAA,gDACAlB,QAAA,MACAI,YAAA,6BACCnI,MAAAuB,UAAA6S,WAAApU,MAAAuB,UAAA4S,OAAAnU,MAAAuB,UAAA8S,OAAA,CACDtM,QAAA,OACAkB,OAAA,EACAjE,QAAA,0BACAH,QAAA,GACG,CACHG,QAAA,0BACAH,QAAA,GACG,CACHG,QAAA,4BACAH,QAAA,IAEAuH,KAAA,sBACA3C,QAAA,+YACAC,QAAA,sBACAF,aAAA,CACAxE,QAAA,qBACAxE,MAAA,WAEAmJ,OAAA,gHACAxB,YAAA,+CACAyB,SAAA,gDACC5J,MAAAuB,UAAA+S,OAAA,CACDvM,QAAA,CACA/C,QAAA,OACAL,YAAA,GAEAmF,MAAA,CACA9E,QAAA,6LACAH,QAAA,GAEAoE,OAAA,EACAjE,QAAA,wMACAH,QAAA,EACAJ,OAAA,IACG,CACHO,QAAA,sBACAH,QAAA,EACAJ,OAAA,IACG,CACHO,QAAA,gDACAH,QAAA,EACAJ,OAAA,KAEA8P,KAAA,CACAvP,QAAA,eACAL,YAAA,EACAnE,MAAA,UAEA8H,YAAA,YACAkM,QAAA,CACAxP,QAAA,yCACAL,YAAA,EACAnE,MAAA,YAEAiU,SAAA,CACAzP,QAAA,eACAL,YAAA,EACAnE,MAAA,YAEA4R,UAAA,CACApN,QAAA,OACAxE,MAAA,YAEAmJ,OAAA,kEACAF,QAAA,0KACAC,QAAA,yBACAE,SAAA,6FACA5E,QAAA,eACAL,YAAA,GACG,CACHK,QAAA,eACAL,YAAA,IAEAwD,YAAA,uBACCnI,MAAAuB,UAAA+S,OAAArL,OAAA3H,QAAA,SAAA5B,GACDA,EAAA+E,OAAA,CACAyF,cAAA,CACAlF,QAAA,aACAP,OAAA,CACA0M,UAAA,CACAnM,QAAA,WACAxE,MAAA,eAEAkG,KAAA1G,MAAAuB,UAAA+S,YAICtU,MAAAuB,UAAAmT,IAAA,CACD3M,QAAA,oBACAqE,KAAA,CACApH,QAAA,wDACAH,QAAA,GAEAoE,OAAA,EACAjE,QAAA,iBACAH,QAAA,GACG,CACHG,QAAA,yDACAH,QAAA,IAEA8P,iBAAA,CACA3P,QAAA,iGACAP,OAAA,CACAgF,QAAA,+BAGAA,QAAA,kFACAwE,QAAA,0PACAtE,OAAA,mDACAC,SAAA,4DACAgL,UAAA,8BACA5K,SAAA,8BACA7B,YAAA,iBACC,SAAAzI,GACDA,EAAA6B,UAAAsT,IAAAnV,EAAA6B,UAAAC,OAAA,WAAiD9B,EAAA6B,UAAAE,aAAA,iBACjD0P,UAAA,CACAnM,QAAA,YACAxE,MAAA,iBAEGd,EAAA6C,MAAAqE,IAAA,2BAAAjH,GACHD,EAAA6B,UAAA,qBAAAmR,kBAAA/S,EAAA,2BACGD,EAAA6C,MAAAqE,IAAA,0BAAAjH,GACHD,EAAA6B,UAAA,qBAAAuR,qBAAAnT,EAAA,SATC,CAWAK,aAAAuB,UAAAuT,OAAA,CACD/M,QAAA,MACAkB,OAAA,CACAjE,QAAA,wBACAH,QAAA,GAEAkQ,kBAAA,CACA/P,QAAA,8BACAxE,MAAA,YAEAwU,cAAA,CACAhQ,QAAA,wBACAxE,MAAA,QAEAkJ,QAAA,qBACAD,QAAA,0DACAE,OAAA,qEACAP,SAAA,sBACAiD,SAAA,CACArH,QAAA,gCACAL,YAAA,GAEAiF,SAAA,iHACA5E,QAAA,iBACAL,YAAA,GACG,CACHK,QAAA,iBACAL,YAAA,IAEA4P,KAAA,gBACApM,YAAA,yBACC,SAAAzI,GACDA,EAAA6B,UAAA0T,KAAAvV,EAAA6B,UAAAC,OAAA,iBAAwD9B,EAAA6B,UAAAE,aAAA,kBACxDnB,KAAA,EACA0E,QAAA,sEACAxE,MAAA,UAEGd,EAAA6B,UAAA0T,KAAA,qBAAAjQ,QAAA,uIAAAtF,EAAA6B,UAAAE,aAAA,mBACHyT,mBAAA,CACAlQ,QAAA,YACAxE,MAAA,iBAEG,UAAAd,EAAAS,KAAAG,KAAAZ,EAAA6B,UAAA0T,KAAAxL,WAAA/J,EAAA6B,UAAA0T,KAAAxL,QAAA,CAAA/J,EAAA6B,UAAA0T,KAAAxL,UAAA/J,EAAA6B,UAAA0T,KAAAxL,QAAA0L,QAAA,CACHnQ,QAAA,kDACAL,YAAA,GACG,CACHK,QAAA,wGACAL,YAAA,IAhBC,CAkBA3E,aAAAuB,UAAA6T,QAAA,CACDC,gBAAA,CACArQ,QAAA,0BACAxE,MAAA,UAEAyI,OAAA,CACAjE,QAAA,gFACAP,OAAA,CACAsD,QAAA,CACA/C,QAAA,wBACAL,YAAA,KAIAoD,QAAA,CACA/C,QAAA,MACAH,QAAA,GAEA6E,QAAA,+BACAC,OAAA,yDACAF,QAAA,gsBACAG,SAAA,qGACA5E,QAAA,sBACAL,YAAA,IAEAwD,YAAA,sBACCnI,MAAAuB,UAAA+T,OAAAtV,MAAAuB,UAAAC,OAAA,SACDuG,QAAA,EACA/C,QAAA,4BACAL,YAAA,GACG,CACHK,QAAA,mBACAL,YAAA,IAEA8E,QAAA,koBACAR,OAAA,CACAjE,QAAA,wEACAH,QAAA,GAEA8E,OAAA,6IACC3J,MAAAuB,UAAAE,aAAA,oBACD8Q,aAAA,CACAvN,QAAA,kBACAxE,MAAA,WACAiE,OAAA,CACA4I,UAAA,CACArI,QAAA,gDACAL,YAAA,EACAnE,MAAA,eAICR,MAAAuB,UAAAgU,OAAA,CACDC,aAAA,CACAxQ,QAAA,kFACAL,YAAA,EACAF,OAAA,CACA6M,QAAA,CACAtM,QAAA,0DACAxE,MAAA,cAIAsG,IAAA,CACA9B,QAAA,8EACAL,YAAA,EACAnE,MAAA,UAEAiV,MAAA,CACAzQ,QAAA,aACAL,YAAA,EACAnE,MAAA,UAEA8Q,QAAA,CACAtM,QAAA,wDACAxE,MAAA,aAECR,MAAAuB,UAAAmU,QAAA,CACDC,SAAA,CACA3Q,QAAA,sBACAxE,MAAA,UAEAuH,QAAA,CACA/C,QAAA,4BACAL,YAAA,GAEAmC,IAAA,CACA9B,QAAA,6BACAL,YAAA,GAEAiR,QAAA,CACA5Q,QAAA,yvEACAL,YAAA,EACAF,OAAA,CACA0E,UAAA,CACAnE,QAAA,cACAL,YAAA,GAEA8E,QAAA,eAGAoM,SAAA,CACA7Q,QAAA,4+NACAL,YAAA,EACAF,OAAA,CACA0E,UAAA,CACAnE,QAAA,cACAL,YAAA,GAEA8E,QAAA,eAGAqM,aAAA,CACA9Q,QAAA,sCACAL,YAAA,EACAF,OAAA,CACAsR,QAAA,CACA/Q,QAAA,WACAxE,MAAA,YAEAwV,GAAA,CACAhR,QAAA,iBACAxE,MAAA,UAEA2H,YAAA,OAGA8N,aAAA,CACAjR,QAAA,mCACAP,OAAA,CACAyR,GAAA,CACAlR,QAAA,iBACAxE,MAAA,YAEA2H,YAAA,OAGAW,OAAA,CACA9D,QAAA,8tKACAL,YAAA,GAEAsE,OAAA,CACAjE,QAAA,8CACAP,OAAA,CACAsR,QAAA,CACA/Q,QAAA,WACAxE,MAAA,cAIAuV,QAAA,CACA/Q,QAAA,WACAxE,MAAA,aAECR,MAAAuB,UAAA4U,IAAA,CACDpO,QAAA,QACAkM,QAAA,gBACAC,SAAA,SACAjL,OAAA,mCACA+H,QAAA,CACAhM,QAAA,iBACAP,OAAA,CACAwM,UAAA,cAGA+C,MAAA,YACAoC,YAAA,oBACCpW,MAAAuB,UAAA8U,KAAArW,MAAAuB,UAAAC,OAAA,SACDuG,QAAA,4DACA4B,OAAA,gEACAF,QAAA,ghCACCzJ,MAAAuB,UAAAE,aAAA,kBACD8Q,aAAA,CACAvN,QAAA,yGACAL,YAAA,EACAnE,MAAA,aAECR,MAAAuB,UAAA+U,GAAAtW,MAAAuB,UAAAC,OAAA,SACDiI,QAAA,sKACAwE,QAAA,2LACAvE,QAAA,gCACAE,SAAA,wFACAD,OAAA,4DACAV,OAAA,CACAjE,QAAA,mCACAH,QAAA,YAEC7E,MAAAuB,UAAA+U,GAAA,cAAAtW,MAAAuB,UAAAgV,QAAA,CACDxO,QAAA,MACAkB,OAAA,CACAjE,QAAA,wBACAH,QAAA,GAEA8E,OAAA,2CACAD,QAAA,qBACA2C,SAAA,eACAgB,UAAA,CACArI,QAAA,cACAxE,MAAA,YAEA8H,YAAA,qBACAmB,QAAA,EACAzE,QAAA,+CACAL,YAAA,GACG,mCACHiF,SAAA,YACAzB,YAAA,kBACCnI,MAAAuB,UAAAiV,OAAAxW,MAAAuB,UAAAC,OAAA,SACDiI,QAAA,6WACAR,OAAA,EACAjE,QAAA,sDACAH,QAAA,GACG,CACHG,QAAA,qCACAH,QAAA,IAEA8E,OAAA,+FACAC,SAAA,CACA5E,QAAA,uJACAL,YAAA,GAEAwD,YAAA,sBACCnI,MAAAuB,UAAAE,aAAA,mBACDiP,QAAA,CACA1L,QAAA,OACAxE,MAAA,aAECR,MAAAuB,UAAAE,aAAA,wBACDgV,cAAA,0DACCzW,MAAAuB,UAAAE,aAAA,qBACDiV,WAAA,CACAlW,MAAA,cACAwE,QAAA,eACAL,YAAA,KAEC3E,MAAAuC,MAAAqE,IAAA,gBAAAlH,GACD,cAAAA,EAAAwD,UAAA,WAAAxD,EAAAY,KAAA,CACA,IAAAX,EAAAD,EAAAa,QAAA,GAEA,QAAAZ,EAAA,CACA,IAAAG,EAAA,kCACA,MAAAH,IAAAG,EAAA,mCAA+CJ,EAAAa,QAAAb,EAAAa,QAAAG,QAAA,QAAgD,KAAAA,QAAA,SAAuB,KAAAhB,EAAAa,QAAAP,MAAAiE,UAAAvE,EAAAa,QAAA,CACtHoW,WAAA,CACA3R,QAAAlF,EACA6E,YAAA,EACAF,OAAAzE,MAAAuB,UAAAiV,UAEO9W,EAAAqH,QAAAV,KAAA,MAAA1G,EAAA,uBAGN,SAAAD,GACDA,EAAA6B,UAAAqV,KAAA,CACA9E,oBAAA,CACA9M,QAAA,iEACAL,YAAA,EACAnE,MAAA,WAEAqW,iBAAA,EACA7R,QAAA,+GACAL,YAAA,EACAF,OAAA,CACAiC,KAAAhH,EAAA6B,UAAA2Q,OAEK,CACLlN,QAAA,uFACAL,YAAA,EACAF,OAAA,CACAiC,KAAAhH,EAAA6B,UAAA2Q,QAGAc,OAAA,CACAhO,QAAA,kFACAL,YAAA,EACAF,OAAA,CACAqS,cAAA,CACA9R,QAAA,WACAxE,MAAA,cAIAsH,OAAA,CACA9C,QAAA,4BACAL,YAAA,EACAF,OAAA,CACAiC,KAAAhH,EAAA6B,UAAAuG,SAGAG,QAAA,CACAjD,QAAA,oCACAL,YAAA,GAEAmC,IAAA,CACA9B,QAAA,qGACAL,YAAA,EACAF,OAAA,CACAuC,WAAA,EACAhC,QAAA,kCACAL,YAAA,EACAF,OAAA,CACAiC,KAAAhH,EAAA6B,UAAA2Q,OAES,CACTlN,QAAA,YACAP,OAAA,CACA4D,aAAA,CACArD,QAAA,0CACAL,YAAA,GAEA2D,YAAA,4BACAH,YAAA,WAES,CACTnD,QAAA,aACAP,OAAA,CACAiC,KAAAhH,EAAA6B,UAAA2Q,QAGA/J,YAAA,SAGA/E,KAAA,CACA4B,QAAA,0CACAL,YAAA,EACAF,OAAA,CACAiC,KAAAhH,EAAA6B,UAAA2Q,OAGAhI,cAAA,CACAlF,QAAA,aACAP,OAAA,CACA0M,UAAA,CACAnM,QAAA,WACAxE,MAAA,eAEAkG,KAAAhH,EAAA6B,UAAA2Q,OAGA/J,YAAA,CACAnD,QAAA,kCACAL,YAAA,IAIA,QAAAhF,EAAA,QACAqT,OAAA,SACA9P,SAAA,gBACG,8DAAApD,EAAA,GAA6EC,EAAA,EAAAM,EAAAV,EAAAgC,OAAsB5B,EAAAM,EAAON,IAAA,CAC7G,IAAAf,EAAAW,EAAAI,GACAL,EAAA6B,WAAAvC,EAAA,iBAAAA,EAAA,CACAgU,OAAAhU,EACAkE,SAAAlE,GACKA,GAAAkE,YAAApD,EAAA,UAAAd,EAAAgU,QAAA,CACLhO,QAAAE,OAAA,wGAAmExE,QAAA,kBAAmF1B,EAAAgU,SACtJrO,YAAA,EACAF,OAAA,CACAqS,cAAA,CACA9R,QAAA,WACAxE,MAAA,YAEAkG,KAAAhH,EAAA6B,UAAAvC,EAAAkE,aAKAxD,EAAA6B,UAAAE,aAAA,gBAAA3B,GAlHC,CAmHAE,OAAA,SAAAN,GACDA,EAAA6B,UAAAwV,WAAA,CACAhP,QAAA,oBACAoJ,UAAA,CACAnM,QAAA,qBACAxE,MAAA,eAEAyI,OAAA,mCACAU,OAAA,6DACAD,QAAA,qBACAsN,MAAA,CACAhS,QAAA,wCACAL,YAAA,EACAnE,MAAA,WAEAyW,SAAA,CACAjS,QAAA,aACAP,OAAA,CACA0D,YAAA,QACAkE,SAAA,YAGAlE,YAAA,oCACAkE,SAAA,yCACG3M,EAAA6C,MAAAqE,IAAA,2BAAAjH,GACHD,EAAA6B,UAAA,qBAAAmR,kBAAA/S,EAAA,yDACGD,EAAA6C,MAAAqE,IAAA,0BAAAjH,GACHD,EAAA6B,UAAA,qBAAAuR,qBAAAnT,EAAA,gBA3BC,CA6BAK,aAAAuB,UAAA2V,QAAA,CACDnP,QAAA,CACA/C,QAAA,+EACAL,YAAA,GAEAyH,KAAA,sMACAnD,OAAA,CACAjE,QAAA,+MACAH,QAAA,GAEA4E,QAAA,wHACAkL,iBAAA,CACA3P,QAAA,wJACAL,YAAA,EACAF,OAAA,CACAgF,QAAA,uCAGAwE,QAAA,yoDACAtE,OAAA,4DACAC,SAAA,2KACAgL,UAAA,qCACA5K,SAAA,oCACA7B,YAAA,iBACCnI,MAAAuB,UAAA4V,KAAAnX,MAAAuB,UAAAC,OAAA,SACDyH,OAAA,CACAjE,QAAA,oCACAH,QAAA,EACAJ,OAAA,CACAyF,cAAA,CACAlF,QAAA,+BACAL,YAAA,EACAF,OAAA,CACAyF,cAAA,CACAlF,QAAA,SACAxE,MAAA,gBAMAiJ,QAAA,wRACAG,SAAA,+DACC5J,MAAAuB,UAAAE,aAAA,qBACDqI,MAAA,CACA9E,QAAA,oCACAH,QAAA,KAEC7E,MAAAuB,UAAAE,aAAA,kBACD8Q,aAAA,CACAvN,QAAA,OACAxE,MAAA,WAEAsT,SAAA,CACA9O,QAAA,SACAxE,MAAA,UAEA4W,YAAA,CACApS,QAAA,mBACAxE,MAAA,cAECR,MAAAuB,UAAA4V,KAAAlO,OAAAxE,OAAAyF,cAAAzF,OAAAiC,KAAA1G,MAAAuB,UAAA4V,YAAAnX,MAAAuB,UAAA4V,KAAA,cAAAnX,MAAAuB,UAAA8V,KAAA,CACDhK,UAAA,CACArI,QAAA,oHACAxE,MAAA,WAEA8S,KAAA,CACAtO,QAAA,SACAxE,MAAA,YAEA+S,OAAA,CACAvO,QAAA,UACAxE,MAAA,aAECR,MAAAuB,UAAA+V,KAAA,CACDjK,UAAA,CACArI,QAAA,2CACAxE,MAAA,WAEA8S,KAAA,CACAtO,QAAA,SACAxE,MAAA,YAEA+S,OAAA,CACAvO,QAAA,UACAxE,MAAA,aAECR,MAAAuB,UAAAgW,KAAA,CACDC,eAAA,CACAxS,QAAA,8FACAP,OAAA,CACAyE,SAAA,yDACAZ,YAAA,SAGAmP,kBAAA,CACAzS,QAAA,uBACAP,OAAA,CACAyE,SAAA,CACAlE,QAAA,yBACAL,YAAA,KAIA+S,cAAA,CACA1S,QAAA,iBACAxE,MAAA,YAGA,IAAAmX,EAAA,CACAC,mBAAA5X,MAAAuB,UAAAsI,WACAgO,kBAAA7X,MAAAuB,UAAAuG,OACAgQ,WAAA9X,MAAAuB,UAAAuG,OACAiQ,YAAA/X,MAAAuB,UAAAuG,QAGA,QAAAkQ,KAAAL,EACA,GAAAA,EAAAK,GAAA,CACA,IAAAC,EAAA,GACAA,EAAAD,GAAA,CACAhT,QAAA,IAAAE,OAAA,qBAAA8S,EAAA,yCAA6F,KAC7FrT,YAAA,EACAF,OAAA,CACAiC,KAAAiR,EAAAK,KAEKhY,MAAAuB,UAAAE,aAAA,qBAAAwW,GAILjY,MAAAuB,UAAA2W,UAAA,CACAnQ,QAAA,2BACAkB,OAAA,CACAjE,QAAA,8CACAH,QAAA,GAEA8E,OAAA,+DACAF,QAAA,mSACAL,SAAA,sIACA2H,MAAA,iBACAnH,SAAA,wDACAzB,YAAA,eACCnI,MAAAuB,UAAA4W,KAAA,CACDpQ,QAAA,MACAkB,OAAA,CACAjE,QAAA,2DACAH,QAAA,GAEA8E,OAAA,4DACAyO,kBAAA,CACApT,QAAA,kRACAxE,MAAA,YAEA6M,UAAA,CACArI,QAAA,QACAxE,MAAA,WAEAiJ,QAAA,mLACAL,SAAA,iCACAQ,SAAA,8GACAzB,YAAA,gBACCnI,MAAAuB,UAAA8W,QAAA,CACDpP,OAAA,CACAjE,QAAA,UACAP,OAAA,CACA6T,aAAA,CACAtT,QAAA,aACAP,OAAA,CACA0M,UAAA,CACAnM,QAAA,QACAxE,MAAA,mBAMAuH,QAAA,CACA/C,QAAA,aACAH,QAAA,GAEA2D,MAAA,CACAxD,QAAA,iEACAxE,MAAA,aAEAmJ,OAAA,CACA3E,QAAA,wHACAL,YAAA,GAEA4T,KAAA,CACAvT,QAAA,ovBACAL,YAAA,EACAnE,MAAA,YAEAiJ,QAAA,CACAzE,QAAA,iVACAL,YAAA,GAEAuE,SAAA,CACAlE,QAAA,4tBACAL,YAAA,EACAnE,MAAA,UAEAgY,SAAA,CACAxT,QAAA,yQACAL,YAAA,EACAnE,MAAA,WAEAF,KAAA,CACA0E,QAAA,kWACAL,YAAA,EACAnE,MAAA,YAEA2H,YAAA,cACCnI,MAAAuB,UAAA8W,QAAApP,OAAAxE,OAAA6T,aAAA7T,OAAAiC,KAAA1G,MAAAuB,UAAA8W,QAAArY,MAAAuB,UAAA8W,QAAApP,OAAAxE,OAAA6T,aAAA7T,OAAAiC,KAAA+R,KAAA,CACDzT,QAAA,eACAxE,MAAA,WACCR,MAAAuB,UAAAmX,IAAA,CACD3Q,QAAA,eACAzF,SAAA,kBACA0H,SAAA,8BACA3B,aAAA,CACArD,QAAA,MACAP,OAAA,CACA0D,YAAA,UAGCnI,MAAAuB,UAAAoX,GAAA,CACD5Q,QAAA,EACA/C,QAAA,kCACAL,YAAA,GACG,CACHK,QAAA,kBACAL,YAAA,GACG,CACHK,QAAA,eACAL,YAAA,IAEAiU,uBAAA,CACA5T,QAAA,mCACAH,QAAA,EACArE,MAAA,UAEAyI,OAAA,CACAjE,QAAA,wBACAH,QAAA,GAEA4E,QAAA,6kBACAwE,QAAA,0mBACAvE,QAAA,yBACAC,OAAA,qDACAC,SAAA,gHACAzB,YAAA,iBACCnI,MAAAuB,UAAAsX,EAAA,CACD9Q,QAAA,WACAkB,OAAA,CACAjE,QAAA,qBACAH,QAAA,GAEA4E,QAAA,mNACA8O,KAAA,CACAvT,QAAA,8IACAxE,MAAA,WAEAmJ,OAAA,0GACAmP,OAAA,CACA9T,QAAA,+BACAxE,MAAA,WAEAoJ,SAAA,eACAmP,YAAA,CACA/T,QAAA,0DACAxE,MAAA,YAEA2H,YAAA,QACCnI,MAAAuB,UAAAyX,KAAAhZ,MAAAuB,UAAAC,OAAA,SACDiI,QAAA,6VACAE,OAAA,sFACAC,SAAA,CACA5E,QAAA,4FACAL,YAAA,KAEC3E,MAAAuB,UAAAE,aAAA,mBACDiV,WAAA,CACAlW,MAAA,cACAwE,QAAA,eACAL,YAAA,KAEC3E,MAAAuB,UAAAE,aAAA,qBACDwX,SAAA,CACAjU,QAAA,+CACAxE,MAAA,WACAiE,OAAA,CACAgF,QAAAzJ,MAAAuB,UAAAyX,KAAAvP,QACAtB,YAAA,gBAGCnI,MAAAuB,UAAA2X,MAAAlZ,MAAAuB,UAAAC,OAAA,SACDiI,QAAA,2cACAwE,QAAA,yEACAtE,OAAA,2CACAC,SAAA,mDACA2G,OAAA,QACApI,YAAA,OACAc,OAAA,CACAjE,QAAA,iDACAH,QAAA,YAEC7E,MAAAuB,UAAA2X,MAAA,qBAAAlZ,MAAAuB,UAAA2X,MAAA9P,SAAApJ,MAAAuB,UAAAE,aAAA,mBACD2H,SAAA,CACApE,QAAA,gEACAL,YAAA,GAEAwU,WAAA,CACAnU,QAAA,8EACAL,YAAA,EACAF,OAAA,CACA2U,cAAA,CACApU,QAAA,eACAP,OAAA,CACAgF,QAAA,aAGAL,SAAA,CACApE,QAAA,OAEAmD,YAAA,CACAnD,QAAA,OAIAqU,UAAA,CACArU,QAAA,mEACAL,YAAA,EACAF,OAAA,CACA0D,YAAA,CACAnD,QAAA,KAEAoE,SAAA,CACApE,QAAA,OAEAuL,OAAA,CACAvL,QAAA,UAIChF,MAAAuB,UAAA+X,KAAA,CACDpQ,SAAA,iCACAD,OAAA,CACAjE,QAAA,gCACAH,QAAA,GAEA8E,OAAA,6DACAxB,YAAA,aACAyB,SAAA,KACAF,QAAA,sBACA6P,KAAA,aACCvZ,MAAAuB,UAAAiY,MAAAxZ,MAAAuB,UAAA+X,KAAA,SAAA5Z,GACD,IAAAC,EAAAD,EAAAS,KAAAiB,MAAA1B,EAAA6B,UAAAsI,YACAnK,EAAA6B,UAAAkY,IAAA/Z,EAAA6B,UAAAC,OAAA,SAAA7B,GAAAD,EAAA6B,UAAAkY,IAAA3S,IAAA9B,QAAA,4LAAgQtF,EAAA6B,UAAAkY,IAAA3S,IAAArC,OAAAqC,IAAA9B,QAAA,kBAAAtF,EAAA6B,UAAAkY,IAAA3S,IAAArC,OAAA,cAAAO,QAAA,yDAAsItF,EAAA6B,UAAAE,aAAA,sBACtYiY,OAAA,CACA1U,QAAA,6CACAP,OAAA,CACA0D,YAAA,cACAE,aAAA,SAGG3I,EAAA6B,UAAAkY,IAAA3S,KAAApH,EAAA6B,UAAAE,aAAA,uBACH2I,OAAA,CACApF,QAAA,4CACAP,OAAA,CACAkV,qBAAA,CACA3U,QAAA,UACAxE,MAAA,eAEAkG,KAAAhH,EAAA6B,UAAAkY,KAEAjZ,MAAA,wBAEGd,EAAA6B,UAAAkY,IAAA3S,KAEH,IAAAhH,EAAA,SAAAA,EAAAJ,GACA,OAAAA,EAAA,iBAAAA,IAAA,iBAAAA,EAAAa,QAAAb,EAAAa,QAAAb,EAAAa,QAAAE,IAAAX,GAAA+G,KAAA,QAEA9G,EAAA,SAAAA,EAAAJ,GACA,QAAAU,EAAA,GAAArB,EAAA,EAA2BA,EAAAW,EAAAgC,OAAc3C,IAAA,CACzC,IAAA4C,EAAAjC,EAAAX,GACA6C,GAAA,EAEA,oBAAAD,IAAA,QAAAA,EAAAtB,MAAAsB,EAAArB,QAAA,YAAAqB,EAAArB,QAAA,GAAAD,KAAA,OAAAsB,EAAArB,QAAA,GAAAA,QAAA,GAAAA,QAAAF,EAAAsB,OAAA,GAAAtB,IAAAsB,OAAA,GAAAiY,UAAA9Z,EAAA8B,EAAArB,QAAA,GAAAA,QAAA,KAAAF,EAAAmH,MAAA,OAAA5F,EAAArB,QAAAqB,EAAArB,QAAAoB,OAAA,GAAApB,SAAAF,EAAAgG,KAAA,CACAuT,QAAA9Z,EAAA8B,EAAArB,QAAA,GAAAA,QAAA,IACAsZ,aAAA,IACOxZ,EAAAsB,OAAA,mBAAAC,EAAAtB,MAAA,MAAkDsB,EAAArB,QAAAF,IAAAsB,OAAA,GAAAkY,eAAAxZ,EAAAsB,OAAA,GAAAtB,IAAAsB,OAAA,GAAAkY,aAAA,mBAAAjY,EAAAtB,MAAA,MAAqIsB,EAAArB,QAAAF,IAAAsB,OAAA,GAAAkY,eAAAhY,GAAA,IAAAA,GAAA,iBAAAD,IAAAvB,EAAAsB,OAAA,OAAAtB,IAAAsB,OAAA,GAAAkY,aAAA,CAC9L,IAAA/X,EAAAhC,EAAA8B,GACA5C,EAAAW,EAAAgC,OAAA,qBAAAhC,EAAAX,EAAA,mBAAAW,EAAAX,EAAA,GAAAsB,QAAAwB,GAAAhC,EAAAH,EAAAX,EAAA,IAAAW,EAAA6G,OAAAxH,EAAA,MAAAA,EAAA,qBAAAW,EAAAX,EAAA,mBAAAW,EAAAX,EAAA,GAAAsB,QAAAwB,EAAAhC,EAAAH,EAAAX,EAAA,IAAA8C,EAAAnC,EAAA6G,OAAAxH,EAAA,KAAAA,KAAAW,EAAAX,GAAA,IAAAU,EAAA2E,MAAA,aAAAvC,EAAA,KAAAA,GAGAF,EAAArB,SAAA,iBAAAqB,EAAArB,SAAAR,EAAA6B,EAAArB,WAIAb,EAAA6C,MAAAqE,IAAA,0BAAAlH,GACA,QAAAA,EAAAwD,UAAA,QAAAxD,EAAAwD,UAAAnD,EAAAL,EAAAwE,UA7CC,CA+CAlE,aAAAuB,UAAAuY,MAAA,CACD/R,QAAA,CACA/C,QAAA,eACAL,YAAA,GAEAsE,OAAA,sDACAQ,QAAA,mPACAC,QAAA,qBACAC,OAAA,gFACAC,SAAA,oGACAzB,YAAA,iBACCnI,MAAAuB,UAAAwY,OAAA,CACDhS,QAAA,WACAqB,SAAA,qGACAH,OAAA,aACAsG,KAAA,8bACA9F,QAAA,+HACAX,OAAA,6DACAa,OAAA,0CACAC,SAAA,YACA9C,IAAA,mDACC,SAAApH,GACDA,EAAA6B,UAAAyY,OAAAta,EAAA6B,UAAAC,OAAA,SACAiI,QAAA,CACAzE,QAAA,2bACAL,YAAA,GAEAyE,SAAA,iBACApE,QAAA,mBACAL,YAAA,IAEAgF,OAAA,kIACAC,SAAA,gHACGlK,EAAA6B,UAAAyY,OAAA,cAAAta,EAAA6B,UAAAE,aAAA,mBACH8L,aAAA,CACAvI,QAAA,sBACAxE,MAAA,YAEGd,EAAA6B,UAAAE,aAAA,oBACHiV,WAAA,CACA1R,QAAA,sCACAxE,MAAA,aAEGd,EAAA6B,UAAAE,aAAA,qBACHsP,MAAA,CACA/L,QAAA,YACAxE,MAAA,YAEGd,EAAA6B,UAAAyY,OAAA/Q,OAAAxE,OAAA/E,EAAA6B,UAAAyY,OAAA,cAAAvV,OAAA,CACHyF,cAAA,EACAlF,QAAA,cACAP,OAAA,CACA0M,UAAA,CACAnM,QAAA,YACAxE,MAAA,YAEAkG,KAAAhH,EAAA6B,UAAAyY,SAEK,CACLhV,QAAA,QACAxE,MAAA,cAvCC,CA0CAR,OAAA,SAAAN,GACD,IAAAC,EAAA,6BACAG,EAAA,CACAma,mBAAA,CACAjV,QAAArF,EACAa,MAAA,UAsCCR,MAnCDuB,UAAA2Y,MAAA,CACAnS,QAAA,OACAG,MAAA,CACAlD,QAAA,mEACAL,YAAA,GAEAwV,SAAA,EACAnV,QAAA,6DACAP,OAAA3E,EACAU,MAAA,UACK,CACLwE,QAAA,4FACAL,YAAA,EACAF,OAAA3E,EACAU,MAAA,WAEAiJ,QAAA,CACAzE,QAAA,wFACAL,YAAA,GAEAqE,IAAA,CACAhE,QAAA,uBACAL,YAAA,GAEAyV,SAAA,CACApV,QAAA,2KACAL,YAAA,EACAnE,MAAA,cAEA4I,SAAA,CACApE,QAAArF,EACAa,MAAA,YAEA2H,YAAA,YAzCC,GA2CAnI,MAAAuB,UAAA8Y,KAAAra,MAAAuB,UAAAC,OAAA,OACDuG,QAAA,qBACA/C,QAAA,kBACAL,YAAA,IAEAmE,OAAA,CACA9D,QAAA,8CACAP,OAAA,CACA0D,YAAA,UAGA7F,SAAA,CACA0C,QAAA,yEACAP,OAAA,CACA4H,SAAA,aAGAnD,SAAA,2CACAf,YAAA,YACAyB,SAAA,aACC5J,MAAAuB,UAAAE,aAAA,sBACD2H,SAAApJ,MAAAuB,UAAA8Y,KAAAjR,WACCpJ,MAAAuB,UAAAE,aAAA,mBACD4K,SAAA,EACArH,QAAA,cACAP,OAAA,CACA0D,YAAA,MAEG,aACHmS,cAAA,CACAtV,QAAA,uCACAL,YAAA,EACAnE,MAAA,cAECR,MAAAuB,UAAAgZ,OAAA,CACD9Q,QAAA,uMACAE,OAAA,sFACAC,SAAA,CACA5E,QAAA,4FACAL,YAAA,GAEAyE,SAAA,CACApE,QAAA,ucACAL,YAAA,IAEC,SAAAjF,GACD,SAAAC,EAAAD,GACA,WAAAwF,OAAA,QAAAxF,EAAA,gBAGA,SAAAI,EAAAJ,GACA,WAAAwF,OAAA,YAAAxF,EAAA,cAGA,IAAAK,EAAA,yBACAM,EAAA,QACArB,EAAA,CACAwb,QAAA,CACAxV,QAAA,QACAxE,MAAA,qBAEAuH,QAAA,MACAkB,OAAA,CACAjE,QAAA,qBACAH,QAAA,EACAJ,OAAA,CACAgQ,SAAA,oBACAlE,OAAA,IAAArL,OAAA,IAAAnF,EAAA,OAGA0a,gBAAA,CACAzV,QAAA,IAAAE,OAAA,MAAAnF,GACAS,MAAA,uBAEAka,gBAAA,CACA1V,QAAA,IAAAE,OAAA,IAAAnF,GACAS,MAAA,YAEAgG,OAAA,CACAxB,QAAA,IAAAE,OAAA,MAAAnF,GACAS,MAAA,uBAEAiJ,QAAA,EACAzE,QAAA,IAAAE,OAAA7E,EAAA,sJACAsE,YAAA,GACK,CACLK,QAAA,IAAAE,OAAA7E,EAAA,gEACAsE,YAAA,IAEAgW,QAAA,CACA3V,QAAArF,EAAA,WACAgF,YAAA,EACAnE,MAAA,WAEAoa,YAAA,CACA5V,QAAArF,EAAA,eACAgF,YAAA,EACAnE,MAAA,WAEAkJ,QAAA,CACA1E,QAAAlF,EAAA,aACA6E,YAAA,GAEAgF,OAAA,CACA3E,QAAAlF,EAAA,yBACA6E,YAAA,GAEAkW,OAAA,CACA7V,QAAA,IAAAE,OAAA7E,EAAA,oCAAAN,GACA4E,YAAA,EACAF,OAAA,CACAgF,QAAA,aACA4C,SAAA,IAAAnH,OAAAnF,KAGA+a,MAAA,CACA9V,QAAA,IAAAE,OAAA7E,EAAA,qCAAAN,EAAA,wBACA4E,YAAA,EACAF,OAAA,CACAgF,QAAA,kBACA/H,UAAA,KACA0H,SAAA,CACApE,QAAA,IAAAE,OAAA,SAAAnF,GACA4E,YAAA,GAEAwD,YAAA,SAGA4S,OAAA,CACA/V,QAAA,IAAAE,OAAA7E,EAAA,qBAAAN,EAAA,aACA4E,YAAA,EACAF,OAAA,CACAgF,QAAA,UACA/H,UAAA,KACAyG,YAAA,SAGA6S,IAAA,CACAhW,QAAA,IAAAE,OAAA7E,EAAAN,GACA4E,YAAA,GAEAwD,YAAA,uBACAnD,QAAA,eACAL,YAAA,KAGA/C,EAAA,CACAqZ,cAAA,IAAA/V,OAAA,2BACAwB,KAAA,CACA+N,SAAA,CACAzP,QAAA,IAAAE,OAAAnF,GACAS,MAAA,YAEA0a,QAAA,CACAlW,QAAA,IAAAE,OAAA7E,EAAAN,EAAA,2BACA4E,YAAA,EACAF,OAAA,CACAwE,OAAAjK,EAAAiK,OACAS,QAAA1K,EAAA0K,QACAC,OAAA3K,EAAA2K,OACA4G,OAAAvR,EAAAuR,OACApI,YAAA,WAKAtG,EAAA,oBACAC,EAAA,CACAkD,QAAA,IAAAE,OAAA7E,EAAA,oBACAsE,YAAA,EACAF,OAAA,CACA0W,YAAA,CACAnW,QAAA,IAAAE,OAAA,qBAAArD,GACA4C,OAAA7C,GAEAwZ,oBAAA,CACApW,QAAA,IAAAE,OAAA,wBAAArD,GACA4C,OAAA7C,GAEAsF,KAAA,CACAlC,QAAA,IAAAE,OAAA,WAAArD,EAAA,8BACA4C,OAAA7C,GAEA6S,SAAA,CACAzP,QAAA,IAAAE,OAAAnF,GACAS,MAAA,YAEA2H,YAAA,SAGAnJ,EAAA+b,OAAAtW,OAAA/C,UAAAI,EAAA9C,EAAA8b,MAAArW,OAAA/C,UAAAhC,EAAAS,KAAAiB,MAAAU,GAAA9C,EAAA8b,MAAArW,OAAA/C,UAAA+C,OAAA4W,QAAAvZ,EAAApC,EAAA6B,UAAA+Z,KAAAtc,EAAAU,EAAA6B,UAAAga,MAAAvc,EAAAU,EAAA6B,UAAAia,MAAAxc,EAAAU,EAAA6B,UAAA,cAAAvC,EAjJC,CAkJAgB,aAAAuB,UAAAka,WAAA,CACD1T,QAAA,EACA/C,QAAA,4BACAL,YAAA,GACG,CACHK,QAAA,eACAL,YAAA,IAEA+W,sBAAA,CACA1W,QAAA,kDACAL,YAAA,EACAE,QAAA,EACAJ,OAAA,CACA4H,SAAA,CACArH,QAAA,sCACAL,YAAA,GAEAuF,cAAA,CACAlF,QAAA,uBACAL,YAAA,EACAF,OAAA,CACA0F,4BAAA,CACAnF,QAAA,WACAxE,MAAA,cAIAyI,OAAA,YAGAA,OAAA,EACAjE,QAAA,qCACAH,QAAA,GACG,CACHG,QAAA,iBACAH,QAAA,GACG,kBACHiF,MAAA,EACA9E,QAAA,kDACAH,QAAA,EACAJ,OAAA,CACAsD,QAAA,CACA/C,QAAA,eACAL,YAAA,KAGG,CACHK,QAAA,4CACAH,QAAA,IAEA4E,QAAA,CACAzE,QAAA,wQACAL,YAAA,GAEAgX,mBAAA,CACA3W,QAAA,+JACAL,YAAA,EACAnE,MAAA,YAEAkJ,QAAA,CACA1E,QAAA,iDACAL,YAAA,GAEA8P,SAAA,CACAzP,QAAA,8BACAL,YAAA,EACAnE,MAAA,YAEAmJ,OAAA,2DACAiS,WAAA,4BACAhS,SAAA,EACA5E,QAAA,aACAL,YAAA,GACG,qLACHwD,YAAA,oBACCnI,MAAAuB,UAAAka,WAAA,uBAAAhX,OAAAyF,cAAAzF,OAAAiC,KAAA1G,MAAAuB,UAAAka,WAAAzb,MAAAuB,UAAAsa,QAAA,CACD9T,QAAA,yCACAkB,OAAA,CACAjE,QAAA,iBACAP,OAAA,CACA4H,SAAA,aACAkE,OAAA,6CAEA1L,QAAA,GAEA8E,OAAA,kCACA4G,OAAA,CACAvL,QAAA,iEACAL,YAAA,EACAF,OAAA,CACAgF,QAAA,YAGAsH,MAAA,CACA/L,QAAA,iDACAL,YAAA,EACAnE,MAAA,UAEA4I,SAAA,CACApE,QAAA,6CACAL,YAAA,GAEA8E,QAAA,EACAzE,QAAA,sRACAL,YAAA,GACG,gBACH+E,QAAA,CACA1E,QAAA,+BACAL,YAAA,GAEA0H,SAAA,CACArH,QAAA,qBACAL,YAAA,GAEAiF,SAAA,CACA5E,QAAA,uHACAL,YAAA,GAEAwD,YAAA,oBACCnI,MAAAuB,UAAAua,IAAA,CACD/T,QAAA,yCACAkB,OAAA,CACAjE,QAAA,uFACAH,QAAA,GAEA8E,OAAA,wGACAF,QAAA,0HACAL,SAAA,2BACAQ,SAAA,0CACA5E,QAAA,qBACAL,YAAA,IAEAwD,YAAA,uBACCnI,MAAAuB,UAAAwa,SAAA,CACDhU,QAAA,CACA/C,QAAA,6CACAL,YAAA,GAEAsE,OAAA,CACAjE,QAAA,iDACAH,QAAA,GAEAoJ,QAAA,gCACAsC,OAAA,CACAvL,QAAA,4BACAP,OAAA,CACA4H,SAAA,kCAGAA,SAAA,kDACA5C,QAAA,+HACAzE,QAAA,wQACAL,YAAA,IAEAiF,SAAA,uBACAzB,YAAA,YACCnI,MAAAuB,UAAAya,SAAAhc,MAAAuB,UAAAC,OAAA,aAAgExB,MAAAuB,UAAAE,aAAA,qBACjEwa,WAAA,CACAjX,QAAA,kBACAxE,MAAA,eAEA4C,KAAA,EACA4B,QAAA,kBACAxE,MAAA,WACG,CACHwE,QAAA,oBACAxE,MAAA,YAEAgI,MAAA,EACAxD,QAAA,+BACAxE,MAAA,YACAiE,OAAA,CACA0D,YAAA,cAEG,CACHnD,QAAA,cACAL,YAAA,EACAnE,MAAA,YACAiE,OAAA,CACA0D,YAAA,aAGA6G,GAAA,CACAhK,QAAA,wCACAL,YAAA,EACAnE,MAAA,eAEA0b,KAAA,CACAlX,QAAA,mCACAL,YAAA,EACAnE,MAAA,eAEA2b,gBAAA,CACAnX,QAAA,qHACAP,OAAA,CACA4H,SAAA,CACArH,QAAA,gBACAL,YAAA,GAEAsE,OAAA,+DACAd,YAAA,kBAEA3H,MAAA,OAEA+O,KAAA,CACAvK,QAAA,uDACAL,YAAA,EACAF,OAAA,CACA0D,YAAA,wBAGAmH,OAAA,CACAtK,QAAA,oDACAL,YAAA,EACAF,OAAA,CACA0D,YAAA,gBAGAa,IAAA,CACAhE,QAAA,yEACAP,OAAA,CACA4H,SAAA,CACArH,QAAA,sBACAL,YAAA,GAEAsE,OAAA,CACAjE,QAAA,gCAIChF,MAAAuB,UAAAya,SAAAzM,KAAA9K,OAAAuE,IAAAhJ,MAAAuB,UAAAya,SAAAhT,IAAAhJ,MAAAuB,UAAAya,SAAA1M,OAAA7K,OAAAuE,IAAAhJ,MAAAuB,UAAAya,SAAAhT,IAAAhJ,MAAAuB,UAAAya,SAAAzM,KAAA9K,OAAA6K,OAAAtP,MAAAuB,UAAAya,SAAA1M,OAAAtP,MAAAuB,UAAAya,SAAA1M,OAAA7K,OAAA8K,KAAAvP,MAAAuB,UAAAya,SAAAzM,KAAAvP,MAAAuB,UAAA6a,OAAA,CACDrU,QAAA,kBAA0B,OAC1BkB,OAAA,CACAjE,QAAA,uBACAH,QAAA,GAEA8E,OAAA,6DACAF,QAAA,8HACAL,SAAA,qBACAQ,SAAA,0CACAzB,YAAA,wBACCnI,MAAAuB,UAAA8a,IAAA,CACDtU,QAAA,SACA3E,KAAA,CACA4B,QAAA,wBACAH,QAAA,EACArE,MAAA,SACAiE,OAAA,CACA0M,UAAA,CACAnM,QAAA,QACAxE,MAAA,iBAIAyI,OAAA,CACAjE,QAAA,wBACAH,QAAA,GAEAwH,SAAA,QACA1C,OAAA,wCACA2S,KAAA,CACAtX,QAAA,cACAxE,MAAA,YAEAiJ,QAAA,uHACAL,SAAA,yufACAQ,SAAA,gDACA5E,QAAA,iBACAL,YAAA,GACG,CACHK,QAAA,iBACAL,YAAA,IAEAwD,YAAA,yBACCnI,MAAAuB,UAAA8a,IAAAjZ,KAAAqB,OAAAiC,KAAA1G,MAAAuB,UAAA8a,IAAArc,MAAAuB,UAAAgb,MAAA,CACDxU,QAAA,OACA0B,QAAA,s0BACAwH,UAAA,CACAjM,QAAA,cACAxE,MAAA,YAEA6L,SAAA,WACA1C,OAAA,gBACAC,SAAA,mBACAzB,YAAA,yBACCnI,MAAAuB,UAAAib,OAAA,CACDvT,OAAA,cACAlB,QAAA,EACA/C,QAAA,0BACAH,QAAA,GACG,CACHG,QAAA,MACAH,QAAA,IAEA0N,aAAA,CACAvN,QAAA,gBACAL,YAAA,EACAnE,MAAA,WAEA4I,SAAA,YACAqT,YAAA,CACAzX,QAAA,aACAL,YAAA,EACAnE,MAAA,YAEAmJ,OAAA,CACA3E,QAAA,qEACAL,YAAA,GAEA8E,QAAA,uXACAG,SAAA,gFACAzB,YAAA,gBACCnI,MAAAuB,UAAAmb,KAAA1c,MAAAuB,UAAAC,OAAA,cACDiI,QAAA,oXACCzJ,MAAAuB,UAAAE,aAAA,mBACDiV,WAAA,CACA1R,QAAA,QACAxE,MAAA,cAECR,MAAAuB,UAAAob,MAAA3c,MAAAuB,UAAAmb,KAAA1c,MAAAuB,UAAAqb,KAAA,CACD7U,QAAA,QACAkB,OAAA,oCACA8H,MAAA,CACA/L,QAAA,kCACAL,YAAA,EACAnE,MAAA,YAEAiJ,QAAA,4BACAzE,QAAA,iCACAL,YAAA,GACG,8BAAuB,6BAC1BoL,SAAA,CACA/K,QAAA,0GACAxE,MAAA,YAEAmJ,OAAA,8KACAC,SAAA,wBACC5J,MAAAuB,UAAAsb,MAAA7c,MAAAuB,UAAAC,OAAA,SACDuG,QAAA,CACA/C,QAAA,iBACAL,YAAA,GAEA8E,QAAA,41KACCzJ,MAAAuB,UAAAE,aAAA,mBACD4K,SAAA,eACCrM,MAAAuB,UAAAub,IAAA,CACD/U,QAAA,MACAkB,OAAA,CACAjE,QAAA,4IACAH,QAAA,GAEA8E,OAAA,iGACAF,QAAA,8VACAL,SAAA,CACApE,QAAA,qFACAP,OAAA,CACAmF,SAAA,QAGAmT,OAAA,CACA/X,QAAA,cACAP,OAAA,CACA0D,YAAA,MAGAyB,SAAA,CACA5E,QAAA,kJACAL,YAAA,GAEAwD,YAAA,mCACCnI,MAAAuB,UAAAyb,IAAA,CACDjV,QAAA,uBACAkB,OAAA,CACAjE,QAAA,+DACAH,QAAA,EACAJ,OAAA,CACAyF,cAAA,CACAlF,QAAA,iDACAL,YAAA,EACAF,OAAA,CACAwY,cAAA,CACAjY,QAAA,YACAxE,MAAA,gBAMAwI,IAAA,2CAAwB,CACxBhE,QAAA,oFACAL,YAAA,IAEAsY,cAAA,CACAjY,QAAA,WACAxE,MAAA,YAEAmJ,OAAA,UACAF,QAAA,mEACAL,SAAA,mgBACAM,QAAA,qBACAE,SAAA,uCACAzB,YAAA,iBACCnI,MAAAuB,UAAAyb,IAAA/T,OAAAxE,OAAAyF,cAAAzF,OAAAiC,KAAA1G,MAAAuB,UAAAyb,IAAAhd,MAAAuB,UAAA2b,KAAA,CACDnV,QAAA,CACA/C,QAAA,qCACAL,YAAA,GAEAsE,OAAA,CACAjE,QAAA,kCACAH,QAAA,GAEA4E,QAAA,CACAzE,QAAA,+pEACAL,YAAA,GAEAuE,SAAA,gtBACAc,SAAA,qCACAqC,SAAA,SACA1C,OAAA,0DACAC,SAAA,8CACAzB,YAAA,gBACAgB,UAAA,CACAnE,QAAA,8SACAL,YAAA,IAEC3E,MAAAuB,UAAA4b,MAAA,CACDpV,QAAA,mBACAkB,OAAA,EACAjE,QAAA,wBACAH,QAAA,GACG,CACHG,QAAA,qDACAH,QAAA,IAEA8E,OAAA,yEACArJ,KAAA,CACA0E,QAAA,YACAxE,MAAA,YAEA6M,UAAA,CACArI,QAAA,SACAxE,MAAA,YAEAiJ,QAAA,2RACAC,QAAA,qBACAE,SAAA,kGACAzB,YAAA,oBACCnI,MAAAuB,UAAA6b,GAAA,CACDrV,QAAA,uBACAkB,OAAA,CACAjE,QAAA,yBACAH,QAAA,GAEA0P,KAAA,CACAvP,QAAA,yBACAH,QAAA,EACArE,MAAA,WAEAiJ,QAAA,gQACAL,SAAA,2BACApE,QAAA,uBACAL,YAAA,IAEAgF,OAAA,uEACA0C,SAAA,uCACA/D,YAAA,WACAsB,SAAA,+FACAzB,YAAA,kBACCnI,MAAAuB,UAAA8b,OAAA,CACDtV,QAAA,0BACAkB,OAAA,CACAjE,QAAA,wBACAH,QAAA,GAEA4E,QAAA,WACA,IAAA/J,EAAA,oNACA,OAAAA,IAAAe,IAAA,SAAAf,GACA,OAAAA,EAAA4d,MAAA,IAAAzW,KAAA,QACKA,KAAA,KAAA3B,OAAA,SAAAxF,EAAA,QAJL,GAMA0J,SAAA,oBACAO,OAAA,CACA3E,QAAA,0GACAL,YAAA,GAEAiF,SAAA,sLACAzB,YAAA,mBACCnI,MAAAuB,UAAAgc,OAAAvd,MAAAuB,UAAAC,OAAA,UACDiI,QAAA,CACAzE,QAAA,+GACAL,YAAA,GAEA0H,SAAA,CACArH,QAAA,4DACAL,YAAA,EACAF,OAAA,CACA0D,YAAA,UAGAiB,SAAA,CACApE,QAAA,iDACAL,YAAA,EACAF,OAAA,CACAgF,QAAA,CACAzE,QAAA,oBACAL,YAAA,GAEAwD,YAAA,UAGAqV,OAAA,CACAxY,QAAA,qCACAxE,MAAA,WAEA2H,YAAA,gBACCnI,MAAAuB,UAAAE,aAAA,oBACDgc,iBAAA,CACAzY,QAAA,UACAL,YAAA,EACAnE,MAAA,WAEAmW,WAAA,CACA3R,QAAA,uDACAH,QAAA,EACAF,YAAA,EACAF,OAAA,CACAwE,OAAA,CACAjE,QAAA,2CACAL,YAAA,GAEA8E,QAAAzJ,MAAAuB,UAAAgc,OAAA9T,QACA4C,SAAArM,MAAAuB,UAAAgc,OAAAlR,SACAjD,SAAApJ,MAAAuB,UAAAgc,OAAAnU,SACAM,QAAA,qBACAC,OAAA,8CACA6T,OAAAxd,MAAAuB,UAAAgc,OAAAC,OACA5T,SAAA,iGACAzB,YAAAnI,MAAAuB,UAAAgc,OAAApV,gBAGCnI,MAAAuB,UAAAE,aAAA,wBACDkV,WAAA3W,MAAAuB,UAAAgc,OAAA5G,WACAlN,QAAAzJ,MAAAuB,UAAAgc,OAAA9T,QACA4C,SAAArM,MAAAuB,UAAAgc,OAAAlR,SACAjD,SAAApJ,MAAAuB,UAAAgc,OAAAnU,SACAoU,OAAAxd,MAAAuB,UAAAgc,OAAAC,OACAE,qBAAA,CACA1Y,QAAAhF,MAAAuB,UAAAgc,OAAApV,YACA3H,MAAA,gBAECR,MAAAuB,UAAAgc,OAAAzW,IAAArC,OAAA,eAAAzE,MAAAuB,UAAAoc,OAAA,CACD5V,QAAA,mCAA6C,UAC7CkB,OAAA,CACAjE,QAAA,mDACAH,QAAA,GAEA4E,QAAA,EACAzE,QAAA,iTACAL,YAAA,GACG,CACHK,QAAA,+CACAL,YAAA,GACG,CACHK,QAAA,mKACAL,YAAA,GACG,CACHK,QAAA,mhBACAL,YAAA,IAEAgF,OAAA,6DACAC,SAAA,kDACA5E,QAAA,0EACAL,YAAA,IAEAwD,YAAA,0BACCnI,MAAAuB,UAAAqc,aAAA5d,MAAAuB,UAAAoc,OAAA3d,MAAAuB,UAAAsc,KAAA,CACD9V,QAAA,EACA/C,QAAA,4BACAL,YAAA,GACG,CACHK,QAAA,gBACAL,YAAA,IAEAsE,OAAA,EACAjE,QAAA,sEACAH,QAAA,GACG,CACHG,QAAA,8DACAH,QAAA,GACG,CACHG,QAAA,+CACAH,QAAA,GACG,CACHG,QAAA,+CACAH,QAAA,GACG,CACHG,QAAA,gDACAH,QAAA,GACG,CACHG,QAAA,6CACAH,QAAA,GACG,CACHG,QAAA,mCACAH,QAAA,GACG,CACHG,QAAA,wBACAH,QAAA,IAEAiF,MAAA,EACA9E,QAAA,gFACAH,QAAA,GACG,CACHG,QAAA,wEACAH,QAAA,GACG,CACHG,QAAA,yDACAH,QAAA,GACG,CACHG,QAAA,yDACAH,QAAA,GACG,CACHG,QAAA,0DACAH,QAAA,GACG,CACHG,QAAA,uDACAH,QAAA,GACG,CACHG,QAAA,uHACAL,YAAA,EACAE,QAAA,GACG,CACHG,QAAA,+GACAL,YAAA,EACAE,QAAA,GACG,CACHG,QAAA,iGACAL,YAAA,EACAE,QAAA,GACG,CACHG,QAAA,iGACAL,YAAA,EACAE,QAAA,GACG,CACHG,QAAA,mGACAL,YAAA,EACAE,QAAA,GACG,CACHG,QAAA,6FACAL,YAAA,EACAE,QAAA,GACG,CACHG,QAAA,0HACAH,QAAA,IAEAwH,SAAA,uBAAiC,oCAAqC,gHACtEyR,WAAA,CACA9Y,QAAA,sBACAxE,MAAA,UAEAud,QAAA,CACA/Y,QAAA,kCACAxE,MAAA,UAEA4I,SAAA,CACApE,QAAA,kBACAP,OAAA,CACAgF,QAAA,QAGAA,QAAA,sMACAE,OAAA,0GACAC,SAAA,gNACAzB,YAAA,gBACCnI,MAAAuB,UAAAE,aAAA,kBACDO,KAAA,WACA9C,OAAA,uIACA8e,MAAA,CACAhZ,QAAA,cACAP,OAAA,CACAgF,QAAA,qBACAtB,YAAA,YAGC,SAAAzI,GACDA,EAAA6B,UAAA0c,IAAAve,EAAA6B,UAAAC,OAAA,SACAiI,QAAA,4aACAO,SAAA,oBACAjC,QAAA,CACA/C,QAAA,uCACAL,YAAA,KAEGjF,EAAA6B,UAAAE,aAAA,gBACHyc,gBAAA,CACAlZ,QAAA,eACAL,YAAA,EACAnE,MAAA,aAEGd,EAAA6B,UAAAE,aAAA,iBACH0P,UAAA,CACAnM,QAAA,qBACAxE,MAAA,aAEA6L,SAAA,sBACA8R,QAAA,CACAnZ,QAAA,kCACAL,YAAA,EACAF,OAAA,CACA0D,YAAA,SAGGzI,EAAA6B,UAAAE,aAAA,kBACHyH,SAAA,CACAlE,QAAA,YACAL,YAAA,KAEGjF,EAAA6B,UAAAE,aAAA,gBACH2c,gBAAA,CACApZ,QAAA,kDACAH,QAAA,EACArE,MAAA,SACAiE,OAAA,CACA0M,UAAA,CACAnM,QAAA,2BACAxE,MAAA,SACAiE,OAAA,CACA0D,YAAA,mBAKAkW,iBAAA,CACArZ,QAAA,sGACAH,QAAA,EACArE,MAAA,SACAiE,OAAA,CACA0M,UAAA,CACAnM,QAAA,yCACAxE,MAAA,SACAiE,OAAA,CACA0D,YAAA,iBAGA+B,cAAA,OAGAoU,uBAAA,CACAtZ,QAAA,yBACAH,QAAA,EACArE,MAAA,UAEA+d,uBAAA,CACAvZ,QAAA,yBACAH,QAAA,EACArE,MAAA,SACAiE,OAAA,CACAyF,cAAA,gBAGGxK,EAAA6B,UAAA0c,IAAAhV,OACH,IAAAtJ,EAAA,CACAqF,QAAA,6EACAL,YAAA,EACAF,OAAA,CACAiC,KAAAhH,EAAA6B,UAAA0c,MAGAve,EAAA6B,UAAA0c,IAAA,kBAAAxZ,OAAAyF,cAAAvK,EAAAD,EAAA6B,UAAA0c,IAAA,wBAAAxZ,OAAAyF,cAAAvK,EAAAD,EAAA6C,MAAAqE,IAAA,2BAAAjH,GACA,mBAAAiD,KAAAjD,EAAAyD,OAAA1D,EAAA6B,UAAA,qBAAAmR,kBAAA/S,EAAA,6CACGD,EAAA6C,MAAAqE,IAAA,0BAAAjH,GACHD,EAAA6B,UAAA,qBAAAuR,qBAAAnT,EAAA,SAtFC,CAwFAK,aAAAuB,UAAAid,IAAA,CACDzW,QAAA,CACA/C,QAAA,gDACAL,YAAA,GAEAsE,OAAA,CACAjE,QAAA,6CACAH,QAAA,EACAF,YAAA,GAEA0H,SAAA,+CACAjD,SAAA,4FACAK,QAAA,+8EACAC,QAAA,2BACAC,OAAA,wCACAC,SAAA,yHACAzB,YAAA,eACCnI,MAAAuB,UAAAkd,MAAAze,MAAAuB,UAAAC,OAAA,OACDuG,QAAA,8BACC,UAAA/H,MAAAG,KAAAG,KAAAN,MAAAuB,UAAAkd,MAAAhV,WAAAzJ,MAAAuB,UAAAkd,MAAAhV,QAAA,CAAAzJ,MAAAuB,UAAAkd,MAAAhV,UAAAzJ,MAAAuB,UAAAkd,MAAAhV,QAAA0L,QAAA,ghDAAAnV,MAAAG,KAAAG,KAAAN,MAAAuB,UAAAkd,MAAA7U,YAAA5J,MAAAuB,UAAAkd,MAAA7U,SAAA,CAAA5J,MAAAuB,UAAAkd,MAAA7U,WAAA5J,MAAAuB,UAAAkd,MAAA7U,SAAAuL,QAAA,MAAAnV,MAAAuB,UAAAmd,WAAA,CACD3W,QAAA,EACA/C,QAAA,uBACAL,YAAA,GACG,CACHK,QAAA,cACAL,YAAA,IAEAsE,OAAA,EACAjE,QAAA,uBACAH,QAAA,EACAJ,OAAA,CACA2E,SAAA,CACApE,QAAA,gDACAL,YAAA,EACAF,OAAA,MAGG,CACHO,QAAA,iBACAH,QAAA,IAEAuD,UAAA,kDACAsB,QAAA,sBACA2C,SAAA,WACAjD,SAAA,qiGACAK,QAAA,kPACAG,SAAA,CACA5E,QAAA,qJACAL,YAAA,GAEAwD,YAAA,iBACCnI,MAAAuB,UAAAmd,WAAAzV,OAAA,GAAAxE,OAAAiF,QAAA1J,MAAAuB,UAAAmd,WAAAhV,QAAA1J,MAAAuB,UAAAmd,WAAAzV,OAAA,GAAAxE,OAAA4H,SAAArM,MAAAuB,UAAAmd,WAAArS,SAAArM,MAAAuB,UAAAmd,WAAAzV,OAAA,GAAAxE,OAAA2E,SAAA3E,OAAAzE,MAAAuB,UAAAmd,WAAA1e,MAAAuB,UAAAod,WAAA3e,MAAAuB,UAAAC,OAAA,SACDiI,QAAA,qKACAG,SAAA,8CACC5J,MAAAuB,UAAAE,aAAA,uBACDuI,SAAA,8BACA1J,KAAA,CACA0E,QAAA,gEACAxE,MAAA,cAECR,MAAAuB,UAAAod,WAAAvV,SAAApE,QAAA,eAAAhF,MAAAuB,UAAAod,WAAA,cAAAne,MAAA,WAAAR,MAAAuB,UAAAyG,OAAA,CACDD,QAAA,2BACAkB,OAAA,CACAjE,QAAA,sDACAH,QAAA,GAEAoJ,QAAA,6BACA5B,SAAA,cACAjD,SAAA,6BACAO,OAAA,cACAC,SAAA,iDACAzB,YAAA,eACCnI,MAAAuB,UAAAqd,WAAA,CACD7W,QAAA,kBACAM,aAAA,CACArD,QAAA,4FACAL,YAAA,GAEA2D,YAAA,0DACAH,YAAA,QACCnI,MAAAuB,UAAAsd,SAAA7e,MAAAuB,UAAAC,OAAA,SACDiI,QAAA,sCACAwE,QAAA,8CACA6Q,UAAA,CACA9Z,QAAA,mHACAxE,MAAA,YAEC,SAAAd,GACDA,EAAA6B,UAAAwd,IAAA,CACAhX,QAAA,CACA/C,QAAA,gDACAL,YAAA,GAEAqa,mBAAA,CACAha,QAAA,uFACAL,YAAA,EACAF,OAAA,CACAiC,KAAAhH,EAAA6B,UAAAsI,aAGAmJ,OAAA,CACAhO,QAAA,wEACAL,YAAA,EACAF,OAAA,CACAqS,cAAA,CACA9R,QAAA,WACAxE,MAAA,cAIAye,uBAAA,CACAja,QAAA,sFACAL,YAAA,GAEAmD,OAAA,CACA9C,QAAA,gBACAL,YAAA,EACAF,OAAA,CACAiC,KAAAhH,EAAA6B,UAAAuG,SAGAG,QAAA,CACAjD,QAAA,kCACAL,YAAA,GAEAua,eAAA,CACAla,QAAA,sEACAL,YAAA,EACAF,OAAA,CACA0a,KAAA,CACAna,QAAA,iBACAP,OAAA,CACAgF,QAAA,kBACAtB,YAAA,MAGAiX,OAAA,CACApa,QAAA,gDACAxE,MAAA,WAEAkG,KAAAhH,EAAA6B,UAAAsI,aAGAJ,QAAA,CACAzE,QAAA,yDACAL,YAAA,GAEA0a,MAAA,EACAra,QAAA,qBACAL,YAAA,EACAF,OAAA,CACAgF,QAAA,SACAL,SAAA,oBACAjB,YAAA,WAEK,CACLnD,QAAA,iBACAL,YAAA,EACAF,OAAA,CACA6a,KAAA,CACAta,QAAA,SACAxE,MAAA,YAEAkG,KAAAhH,EAAA6B,UAAAsI,cAGAO,OAAA,CACApF,QAAA,oDACAL,YAAA,EACAF,OAAA,CACAiC,KAAAhH,EAAA6B,UAAAsI,aAGA0V,aAAA,CACAva,QAAA,qEACAL,YAAA,GAEAmC,IAAA,CACA9B,QAAA,+DACAL,YAAA,EACAF,OAAA,CACAuC,WAAA,EACAhC,QAAA,kBACAP,OAAA,CACAiC,KAAAhH,EAAA6B,UAAAsI,aAES,CACT7E,QAAA,YACAP,OAAA,CACA4D,aAAA,CACArD,QAAA,iCACAL,YAAA,EACAF,OAAA,CACAiC,KAAAhH,EAAA6B,UAAAsI,aAGAvB,YAAA,2BACAH,YAAA,cAGAA,YAAA,MAGA/E,KAAA,EACA4B,QAAA,wBACAL,YAAA,EACAF,OAAA,CACAiC,KAAAhH,EAAA6B,UAAAsI,cAGA1B,YAAA,aAGA,QAAAxI,EAAA,EACAqT,OAAA,OACA9P,SAAA,QACG,CACH8P,OAAA,SACA9P,SAAA,gBACG,+EACH8P,OAAA,OACA9P,SAAA,QACG,iBAAApD,EAAA,GAA2BC,EAAA,EAAAM,EAAAV,EAAAgC,OAAsB5B,EAAAM,EAAON,IAAA,CAC3D,IAAAf,EAAAW,EAAAI,GACAL,EAAA6B,WAAAvC,EAAA,iBAAAA,EAAA,CACAgU,OAAAhU,EACAkE,SAAAlE,GACKA,GAAAkE,YAAApD,EAAA,UAAAd,EAAAgU,QAAA,CACLhO,QAAAE,OAAA,+FAAmDxE,QAAA,kBAA0F1B,EAAAgU,QAAA,KAC7IrO,YAAA,EACAF,OAAA,CACAqS,cAAA,CACA9R,QAAA,WACAxE,MAAA,YAEAkG,KAAAhH,EAAA6B,UAAAvC,EAAAkE,aAKAxD,EAAA6B,UAAAE,aAAA,eAAA3B,GAzJC,CA0JAE,OAAA,SAAAN,GACDA,EAAA6B,UAAAie,OAAA,CACAC,QAAA,EACAza,QAAA,uGACAL,YAAA,EACAnE,MAAA,SACAiE,OAAA,CACA0D,YAAA,sBAEK,CACLnD,QAAA,qGACAL,YAAA,EACAE,QAAA,EACArE,MAAA,SACAiE,OAAA,CACA0D,YAAA,sBAEK,CACLnD,QAAA,8CACAxE,MAAA,SACAiE,OAAA,CACA0D,YAAA,CACAnD,QAAA,gBACAL,YAAA,MAIAmN,oBAAA,CACA9M,QAAA,4BACAL,YAAA,EACAE,QAAA,EACArE,MAAA,WAEAsJ,MAAA,CACA9E,QAAA,uFACAL,YAAA,EACAE,QAAA,EACAJ,OAAA,CACAib,iBAAA,CACA1a,QAAA,yCACAP,OAAA,CACAsD,QAAA,UAKAA,QAAA,CACA/C,QAAA,eACAL,YAAA,EACAE,QAAA,GAEAoE,OAAA,CACAjE,QAAA,wFACAH,QAAA,EACAJ,OAAA,CACAkb,gBAAA,CACA3a,QAAA,cACAP,OAAA,MAIA4H,SAAA,CACArH,QAAA,yBACAP,OAAA,CACA0D,YAAA,OAGAG,YAAA,sBACAc,SAAA,EACApE,QAAA,gBACAL,YAAA,GACK,oGACLgF,OAAA,+CACAD,QAAA,qBACAD,QAAA,6IACAmW,SAAA,CACA5a,QAAA,gNACAxE,MAAA,UAEAoJ,SAAA,mFACAzB,YAAA,oBAEA,IAAAxI,EAAA,EACAqF,QAAA,0EACAL,YAAA,EACAF,OAAA,CACAob,iBAAA,CACA7a,QAAA,uCACAL,YAAA,EACAnE,MAAA,WACAiE,OAAA,CACA0D,YAAA,OAGAgJ,UAAA,CACAnM,QAAA,MACAxE,MAAA,YAEAkG,KAAAhH,EAAA6B,UAAAie,SAEG,CACHxa,QAAA,kCACAL,YAAA,EACAnE,MAAA,WACAiE,OAAA,CACA0D,YAAA,QAGAzI,EAAA6B,UAAAie,OAAAC,QAAA,GAAAhb,OAAAyF,cAAAvK,EAAAD,EAAA6B,UAAAie,OAAAvW,OAAAxE,OAAA,iBAAAA,OAAAyF,cAAAvK,EA5GC,CA6GAK,OAAA,SAAAN,GACDA,EAAA6B,UAAAue,KAAA,CACA/X,QAAA,EACA/C,QAAA,4BACAL,YAAA,GACK,CACLK,QAAA,mBACAL,YAAA,GACK,QACLob,cAAA,CACA/a,QAAA,eACAH,QAAA,EACAJ,OAAA,CACAub,KAAA,CACAhb,QAAA,qBACAL,YAAA,EACAnE,MAAA,WAEA2Q,UAAA,CACAnM,QAAA,YACAxE,MAAA,iBAIAyI,OAAA,CACAjE,QAAA,wBACAH,QAAA,GAEA8E,OAAA,CACA3E,QAAA,mGACAL,YAAA,GAEA8E,QAAA,0SACAL,SAAA,00DACA6W,QAAA,CACAjb,QAAA,kBACAxE,MAAA,WAEAoJ,SAAA,gHACAzB,YAAA,iBACG,MACH6X,KAAA,MACAxf,MAAA,OACG,uBAAAc,QAAA,SAAA3B,GACH,IAAAG,EAAAH,EAEA,oBAAAA,IAAAG,EAAAH,EAAAa,MAAAb,IAAAqgB,MAAAtgB,EAAA6B,UAAAzB,GAAA,CACA,IAAAC,EAAA,GACAA,EAAA,eAAAD,GAAA,CACAkF,QAAAE,OAAA,2CAA0CxE,QAAA,SAAwCf,EAAAe,QAAA,wBAA4B,cAC9G+D,OAAA/E,EAAAS,KAAAiB,MAAA1B,EAAA6B,UAAAue,KAAA,eAAArb,SACO1E,EAAA,eAAAD,GAAA2E,OAAAiC,KAAAhH,EAAAS,KAAAiB,MAAA1B,EAAA6B,UAAAzB,IAAAJ,EAAA6B,UAAAE,aAAA,qBAAA1B,MAEJL,EAAA6B,UAAAgC,IAAA7D,EAAA6B,UAAAue,KAAA,eAAArb,OAAAiC,KAAAhH,EAAAS,KAAAiB,MAAA1B,EAAA6B,UAAAgC,IArDF,CAsDAvD,aAAAuB,UAAA2e,OAAA,CACDnY,QAAA,CACA/C,QAAA,eACAL,YAAA,GAEAiU,uBAAA,CACA5T,QAAA,sBACAH,QAAA,EACArE,MAAA,UAEAyI,OAAA,CACAjE,QAAA,kCACAH,QAAA,GAEAuE,SAAA,CACApE,QAAA,4CACAL,YAAA,GAEA6E,aAAA,CACAxE,QAAA,mBACAL,YAAA,GAEA8E,QAAA,wLACAwE,QAAA,shBACAvE,QAAA,0BACAC,OAAA,6FACAC,SAAA,uEACAzB,YAAA,iBACCnI,MAAAuB,UAAA4e,EAAA,CACDlX,OAAA,wBACAlB,QAAA,EACA/C,QAAA,kBACAL,YAAA,EACAE,QAAA,GACG,CACHG,QAAA,8FACAL,YAAA,EACAE,QAAA,GACG,CACHG,QAAA,gCACAH,QAAA,GACG,CACHG,QAAA,SACAH,QAAA,IAEA0L,OAAA,mBACA6P,SAAA,CACApb,QAAA,6IACAxE,MAAA,UAEAmJ,OAAA,sFACAF,QAAA,u4BACAqP,OAAA,CACA9T,QAAA,qBACAxE,MAAA,YAEA+X,KAAA,CACAvT,QAAA,uDACAxE,MAAA,YAEA2H,YAAA,gBACCnI,MAAAuB,UAAA8e,KAAArgB,MAAAuB,UAAAC,OAAA,SACDuG,QAAA,CACA/C,QAAA,6CACAL,YAAA,GAEAsE,OAAA,CACAjE,QAAA,iCACAH,QAAA,GAEAwH,SAAA,gBACA5C,QAAA,udACAE,OAAA,yEACAD,QAAA,sBACAE,SAAA,CACA5E,QAAA,8FACAL,YAAA,GAEAyE,SAAA,yBACCpJ,MAAAuB,UAAAvC,EAAA,CACD+I,QAAA,MACAkB,OAAA,CACAjE,QAAA,mCACAH,QAAA,GAEAyb,mBAAA,CACAtb,QAAA,YACAxE,MAAA,YAEAkJ,QAAA,qBACA6W,SAAA,iBACA5W,OAAA,gGACAF,QAAA,iHACAG,SAAA,qDACAzB,YAAA,gBACCnI,MAAAuB,UAAAif,OAAAxgB,MAAAuB,UAAAC,OAAA,SACDuG,QAAA,CACA/C,QAAA,4BACAL,YAAA,GAEAsE,OAAA,CACAjE,QAAA,sCACAH,QAAA,GAEA2E,aAAA,aACAC,QAAA,4RACAG,SAAA,iGACC5J,MAAAuB,UAAAE,aAAA,uBACDgf,UAAA,CACAzb,QAAA,gEACAxE,MAAA,UAEAkgB,YAAA,CACA1b,QAAA,wBACAxE,MAAA,YAEAuQ,MAAA,CACA/L,QAAA,mBACAxE,MAAA,mBAECR,MAAAuB,UAAAif,OAAApX,SAAApJ,MAAAuB,UAAAof,MAAA,CACD5Y,QAAA,CACA/C,QAAA,eACAL,YAAA,GAEAsE,OAAA,CACAjE,QAAA,4GACAH,QAAA,GAEAuE,SAAA,mBACAF,SAAA,+lFACApC,IAAA,uPACA2C,QAAA,m2BACAC,QAAA,2BACAC,OAAA,8EACAC,SAAA,+EACAzB,YAAA,iBACCnI,MAAAuB,UAAAmF,KAAA,CACD6H,MAAA,EACAvJ,QAAA,oFACAL,YAAA,EACAF,OAAA,CACA0D,YAAA,sBAEG,CACHnD,QAAA,yFACAL,YAAA,EACAF,OAAA,CACA0D,YAAA,WAGAyY,mBAAA,CACA5b,QAAA,qDACAL,YAAA,EACAF,OAAA,CACA6T,aAAA,CACAtT,QAAA,oCACAxE,MAAA,aACAiE,OAAA,CACA0D,YAAA,YAGAkF,UAAA,CACArI,QAAA,cACAL,YAAA,EACAnE,MAAA,WACAiE,OAAA,CACA0D,YAAA,UAKA0Y,cAAA,EACA7b,QAAA,yBACAL,YAAA,EACAnE,MAAA,SACAiE,OAAA,CACA0D,YAAA,YAEG,CACHnD,QAAA,4CACAL,YAAA,EACAnE,MAAA,SACAiE,OAAA,CACA0D,YAAA,WAGAkF,UAAA,CACArI,QAAA,sBACAL,YAAA,EACAnE,MAAA,WACAiE,OAAA,CACA0D,YAAA,QAGAJ,QAAA,CACA/C,QAAA,sEACAL,YAAA,GAEA6D,MAAA,EACAxD,QAAA,gFACAP,OAAA,CACA0D,YAAA,sFACAgB,UAAA,OAEG,CACHnE,QAAA,8FACAL,YAAA,EACAF,OAAA,CACA0D,YAAA,4CACAgB,UAAA,QAGA6F,GAAA,CACAhK,QAAA,sFACAL,YAAA,EACAnE,MAAA,eAEAsgB,MAAA,CACA9b,QAAA,0BACAL,YAAA,EACAnE,MAAA,aAEAugB,sBAAA,CACA/b,QAAA,gLACAL,YAAA,EACAnE,MAAA,UAEAkO,gBAAA,CACA1J,QAAA,mDACAP,OAAA,CACAuc,4BAAA,CACAhc,QAAA,MACAxE,MAAA,iBAIAygB,uBAAA,CACAjc,QAAA,oFACAP,OAAA,CACAuc,4BAAA,CACAhc,QAAA,wDACAxE,MAAA,iBAIA0gB,cAAA,CACAlc,QAAA,qGACAL,YAAA,EACAnE,MAAA,eAEA2gB,gBAAA,CACAnc,QAAA,mCACAL,YAAA,EACAF,OAAA,CACA0D,YAAA,SAGAiH,OAAA,EACApK,QAAA,gHACAL,YAAA,EACAF,OAAA,CACA8K,KAAA,CACAvK,QAAA,qBACAL,YAAA,GAEA2K,OAAA,CACAtK,QAAA,iBACAL,YAAA,GAEAyc,iBAAA,CACApc,QAAA,iBACAL,YAAA,EACAnE,MAAA,UAEA6gB,KAAA,CACArc,QAAA,oBACAxE,MAAA,WACAiE,OAAA,CACA0D,YAAA,UAGAmZ,mBAAA,CACAtc,QAAA,eACAL,YAAA,EACAnE,MAAA,cAEA8X,aAAA,CACAtT,QAAA,iBACAL,YAAA,EACAnE,MAAA,cAEA2H,YAAA,kBAGAoZ,KAAA,EACAvc,QAAA,0CACAxE,MAAA,SACAiE,OAAA,CACA0D,YAAA,aAEG,CACHnD,QAAA,wFACAxE,MAAA,SACAiE,OAAA,CACA0D,YAAA,oBAGAA,YAAA,CACAnD,QAAA,0DACAL,YAAA,IAEC3E,MAAAuB,UAAAigB,IAAA,CACDzZ,QAAA,MACA0B,QAAA,kFACAwE,QAAA,eACAvE,QAAA,qBACA+X,KAAA,wBACAC,KAAA,wBACAtB,SAAA,0CACAK,UAAA,mCACA3W,MAAA,CACA9E,QAAA,qEACAL,YAAA,EACAE,QAAA,GAEA0L,OAAA,6DACAtH,OAAA,CACAjE,QAAA,kCACAH,QAAA,GAEA8E,OAAA,gCACAxB,YAAA,qCACAwZ,UAAA,6DACC3hB,MAAAuB,UAAAqgB,SAAA,CACD7Z,QAAA,MACA0B,QAAA,CACAzE,QAAA,gFACAL,YAAA,GAEAkd,UAAA,CACA7c,QAAA,qBACAxE,MAAA,YAEA0I,SAAA,qBACA/H,MAAA,CACA6D,QAAA,kBACAL,YAAA,EACAnE,MAAA,cAEAshB,SAAA,CACA9c,QAAA,eACAxE,MAAA,WAEAuhB,SAAA,CACA/c,QAAA,SACAL,YAAA,EACAnE,MAAA,YAEA2H,YAAA,aACCnI,MAAAuB,UAAAygB,KAAA,CACDja,QAAA,EACA/C,QAAA,4BACAL,YAAA,GACG,CACHK,QAAA,mBACAL,YAAA,IAEAsE,OAAA,EACAjE,QAAA,uCACAH,QAAA,GACG,CACHG,QAAA,0BACAH,QAAA,IAEAuH,KAAA,CACApH,QAAA,wEACAxE,MAAA,UAEAyhB,sBAAA,CACAjd,QAAA,YACAxE,MAAA,UAEAiJ,QAAA,kSACA2I,UAAA,CACApN,QAAA,aACAH,QAAA,EACArE,MAAA,aAEA4I,SAAA,oCACA8Y,cAAA,CACAld,QAAA,OACAxE,MAAA,YAEAmJ,OAAA,kKACAwY,iBAAA,CACAnd,QAAA,uBACAP,OAAA,CACA0D,YAAA,QACAyB,SAAA,SAGAzB,YAAA,sBACAyB,SAAA,oDACC5J,MAAAuB,UAAA6gB,IAAA,CACDC,UAAA,CACArd,QAAA,uDACAxE,MAAA,SACAiE,OAAA,CACAgF,QAAA,CACAzE,QAAA,kCACAL,YAAA,GAEAwD,YAAA,MAGAJ,QAAA,EACA/C,QAAA,oBACAL,YAAA,GACG,oBACHyb,SAAA,CACApb,QAAA,sBACAxE,MAAA,UAEAyI,OAAA,CACAjE,QAAA,iCACAH,QAAA,GAEA4E,QAAA,6DACAE,OAAA,+CACAC,SAAA,gGACAzB,YAAA,sBACC,SAAAzI,GACDA,EAAA6B,UAAA+gB,KAAA5iB,EAAA6B,UAAAC,OAAA,OACAuG,QAAA,CACA/C,QAAA,iDACAL,YAAA,KAEGjF,EAAA6B,UAAAE,aAAA,iBACH8gB,cAAA,CACAvd,QAAA,sBACAP,OAAA,CACAqE,OAAA,+BAGGpJ,EAAA6B,UAAA+gB,KAAAxZ,OACH,IAAAnJ,EAAA,yBACAG,EAAA,6CACAkF,QAAA,eACAL,YAAA,IAEAjF,EAAA6B,UAAAE,aAAA,mBACA+gB,gBAAA,CACAxd,QAAA,eACAP,OAAA,CACA0D,YAAA,IACAkE,SAAA1M,EACAiK,SAAA9J,IAGA2iB,gBAAA,CACAzd,QAAA,sCACAP,OAAA,CACAyE,SAAA,oBACAlE,QAAA,aACAL,YAAA,IAEAwD,YAAA,IACAkE,SAAA1M,EACAiK,SAAA9J,EACAqJ,UAAAzJ,EAAA6B,UAAA+gB,KAAAnZ,qBAGGzJ,EAAA6B,UAAA+gB,KAAApZ,gBAAAxJ,EAAA6B,UAAA+gB,KAAAnZ,iBAAAzJ,EAAA6B,UAAA+gB,KAAAhgB,SAAA5C,EAAA6B,UAAAE,aAAA,sBACHa,SAAA,CACA0C,QAAA,yEACAL,YAAA,KA5CC,CA+CA3E,aAAAuB,UAAAmhB,MAAA1iB,MAAAuB,UAAAC,OAAA,QACDiI,QAAA,qPACAR,OAAA,EACAjE,QAAA,iBACAH,QAAA,GACG,CACHG,QAAA,kCACAH,QAAA,IAEAoJ,QAAA,8FACAtE,OAAA,kEACA4G,OAAA,yBACCvQ,MAAAuB,UAAAmhB,MAAA,qBAAA1iB,MAAAuB,UAAAmhB,MAAAtZ,SAAApJ,MAAAuB,UAAAohB,OAAA,CACD5a,QAAA,MACAkB,OAAA,CACAjE,QAAA,kCACAH,QAAA,GAEA4E,QAAA,CACAzE,QAAA,oLACAL,YAAA,GAEAsJ,QAAA,CACAjJ,QAAA,gNACAL,YAAA,GAEAgF,OAAA,CACA3E,QAAA,qDACAL,YAAA,GAEA+E,QAAA,QACAE,SAAA,CACA5E,QAAA,8BACAL,YAAA,GAEAyE,SAAA,CACApE,QAAA,qBACAL,YAAA,GAEAwD,YAAA,QACCnI,MAAAuB,UAAAqhB,KAAA5iB,MAAAuB,UAAAC,OAAA,OACDuG,QAAA,CACA/C,QAAA,uCACAL,YAAA,GAEAmE,OAAA,CACA9D,QAAA,0CACAP,OAAA,CACAsE,KAAA,YAGAC,IAAA,0BACA1G,SAAA,CACA0C,QAAA,mFACAP,OAAA,CACAwC,OAAA,CACAjC,QAAA,IACAxE,MAAA,aAEAqiB,YAAA,UACAxW,SAAA,6BAGCrM,MAAAuB,UAAAE,aAAA,iBACDgI,QAAA,wGACAzE,QAAA,4BACAL,YAAA,MAEC3E,MAAAuB,UAAAqhB,KAAA1Z,SAAA,CACDlE,QAAA,6CACAP,OAAA,CACA4H,SAAA,2BAECrM,MAAAuB,UAAAE,aAAA,oBACD4K,SAAA,2BACCrM,MAAAuB,UAAAE,aAAA,mBACDohB,YAAA,CACA7d,QAAA,UACAxE,MAAA,YAEAoM,UAAA,CACA5H,QAAA,6BACAxE,MAAA,WAEAkJ,QAAA,qBACA6P,KAAA,WACA3P,SAAA,CACA5E,QAAA,kDACAL,YAAA,KAEC3E,MAAAuB,UAAAqhB,KAAA9Z,OAAArE,OAAAiC,KAAA1G,MAAAuB,UAAAqhB,KAAA5iB,MAAAuB,UAAAuhB,UAAA,CACD/a,QAAA,iBACAkB,OAAA,iBACAsH,OAAA,oDACAwS,kBAAA,CACA/d,QAAA,oBACAL,YAAA,EACAF,OAAA,CACA4H,SAAA,aACAlE,YAAA,OAGA6a,sBAAA,CACAhe,QAAA,YACAP,OAAA,CACA4H,SAAA,YACAlE,YAAA,OAGAsB,QAAA,wCACAgX,UAAA,CACAzb,QAAA,MACAxE,MAAA,UAEAmJ,OAAA,0EACAC,SAAA,iDACAzB,YAAA,kBACC,SAAAzI,GACDA,EAAA6B,UAAA0hB,OAAA,CACAlb,QAAA,mBACAoJ,UAAA,CACAnM,QAAA,WACAxE,MAAA,eAEAyI,OAAA,mCACAU,OAAA,2DACA0C,SAAA,8BACArH,QAAA,mBACAL,YAAA,GACK,CACLK,QAAA,sBACAL,YAAA,IAEAyE,SAAA,EACApE,QAAA,qBACAL,YAAA,GACK,mCACL2D,YAAA,CACAtD,QAAA,2BACAP,OAAA,CACA4H,SAAA,CACArH,QAAA,kBACAL,YAAA,GAEAiF,SAAA,MAGAzB,YAAA,oBACAyB,SAAA,uIACAH,QAAA,oCACG/J,EAAA6B,UAAAE,aAAA,gBACHyhB,iBAAA,CACAle,QAAA,mBACAxE,MAAA,wBAEGd,EAAA6C,MAAAqE,IAAA,2BAAAjH,GACH,IAAAG,GAAA,EACAJ,EAAA6B,UAAA,qBAAAmR,kBAAA/S,EAAA,0CAAkG,SAAAD,GAClG,qBAAwBA,IAAAI,GAAA,IAAAA,IAAA,cAAsCJ,IAAAI,GAAA,WAE3DJ,EAAA6C,MAAAqE,IAAA,0BAAAjH,GACHD,EAAA6B,UAAA,qBAAAuR,qBAAAnT,EAAA,YA5CC,CA8CAK,OAAA,SAAAN,GACD,IAAAC,EAAA,iDACAG,EAAA,oDACAJ,EAAA6B,UAAA4hB,IAAA,CACApb,QAAA,qBACA/C,QAAA,aACAL,YAAA,EACAE,QAAA,IAEAue,cAAA,CACApe,QAAA,yFACAL,YAAA,EACAnE,MAAA,SACAiE,OAAA,CACA0D,YAAA,OAGA8I,UAAA,CACAjM,QAAA,mCACAL,YAAA,EACAnE,MAAA,YAEAiJ,QAAA,EACAzE,QAAA,kNACAL,YAAA,GACK,2FACLwM,UAAA,CACAnM,QAAA,gBACAxE,MAAA,eAEA0I,SAAA,WACAmD,SAAA,CACArH,QAAA,0CACAP,OAAA,CACAwE,OAAA,CACAjE,QAAArF,EACAkF,QAAA,GAEA8E,OAAA7J,EACAqI,YAAA,aAGAc,OAAA,CACAjE,QAAArF,EACAkF,QAAA,GAEAuE,SAAA,cACApE,QAAA,oBACAL,YAAA,IAEA+E,QAAA,qBACAC,OAAA7J,EACA8J,SAAA,kDACAzB,YAAA,kBACGzI,EAAA6C,MAAAqE,IAAA,2BAAAjH,GACH,IAAAG,GAAA,EACAJ,EAAA6B,UAAA,qBAAAmR,kBAAA/S,EAAA,iDAA+E,SAAAD,GAC/E,qBAAwBA,IAAAI,GAAA,IAAAA,IAAA,cAAsCJ,IAAAI,GAAA,WAE3DJ,EAAA6C,MAAAqE,IAAA,0BAAAjH,GACHD,EAAA6B,UAAA,qBAAAuR,qBAAAnT,EAAA,SA5DC,CA8DAK,OAAA,SAAAN,GACD,IAAAC,EAAA,CACAqJ,IAAA,uBACAC,OAAA,CACAjE,QAAA,gDACAH,QAAA,GAEAqF,cAAA,KACAmZ,KAAA,KACAla,UAAA,+BACAM,QAAA,CACAzE,QAAA,4DACAL,YAAA,GAEAgP,QAAA,iBACAhK,OAAA,oBACAD,QAAA,qBACAE,SAAA,qGACAzB,YAAA,iBAEAxI,EAAAuK,cAAA,CACAlF,QAAA,iBACAxE,MAAA,WACAiE,OAAA,CACA0M,UAAA,CACAnM,QAAA,QACAxE,MAAA,eAEAkG,KAAA/G,IAEGA,EAAA0jB,KAAA,CACHre,QAAA,oBACAP,OAAA,CACA2E,SAAA,SACA1C,KAAA/G,IAEGD,EAAA6B,UAAA+hB,OAAA,CACHvb,QAAA,CACA/C,QAAA,qCACAL,YAAA,GAEA4e,qBAAA,CACAve,QAAA,aACAL,YAAA,EACAF,OAAA,CACAqE,OAAA,WACApC,KAAA/G,IAGA6jB,uBAAA,CACAxe,QAAA,sDACAL,YAAA,EACAF,OAAA,CACA4H,SAAA,OACA3F,KAAA/G,IAGAiN,UAAA,CACA5H,QAAA,kDACAL,YAAA,EACAF,OAAA,CACAgF,QAAA,OACA/C,KAAA/G,IAGA8jB,uBAAA,CACAze,QAAA,0HACAL,YAAA,EACAF,OAAA,CACAyE,SAAA,CACAlE,QAAA,WACAP,OAAA,CACAyF,cAAAvK,EAAAuK,gBAGAxD,KAAA/G,IAGA2C,SAAA,CACA0C,QAAA,uNACAL,YAAA,EACAF,OAAA,CACAyF,cAAAvK,EAAAuK,cACA/B,YAAA,UAGAkb,KAAA1jB,EAAA0jB,KACApa,OAAAtJ,EAAAsJ,OACAiB,cAAAvK,EAAAuK,cACA/B,YAAA,iBAzFC,CA2FAnI,aAAAuB,UAAAmiB,MAAA1jB,MAAAuB,UAAAC,OAAA,SACDyH,OAAA,CACAjE,QAAA,uEACAH,QAAA,EACAJ,OAAA,CACAyF,cAAA,CACAlF,QAAA,6BACAP,OAAA,CACA0M,UAAA,CACAnM,QAAA,YACAxE,MAAA,gBAMAiJ,QAAA,giBACAE,OAAA,kFACAK,SAAA,0CACAlB,OAAA,iJACAmF,QAAA,siBACCjO,MAAAuB,UAAAmiB,MAAAza,OAAAxE,OAAAyF,cAAAzF,OAAAiC,KAAA1G,MAAAuB,UAAAmiB,MAAA1jB,MAAAuB,UAAAoiB,IAAA,CACDC,KAAA,mBACAC,KAAA,eACAC,OAAA,oBACAC,QAAA,eACAC,QAAA,mBACAC,KAAA,uBACAC,QAAA,CACAlf,QAAA,qBACAH,QAAA,GAEAsD,YAAA,OACAkF,UAAA,MACA8W,QAAA,CACAnf,QAAA,qEACAL,YAAA,EACAF,OAAAzE,MAAAuB,UAAA6iB,KACA5jB,MAAA,kBAECR,MAAAuB,UAAA8iB,IAAA,CACDtc,QAAA,CACA/C,QAAA,eACAL,YAAA,GAEAsE,OAAA,CACAjE,QAAA,sCACAH,QAAA,GAEAwH,SAAA,EACArH,QAAA,oCACAL,YAAA,GACG,CACHK,QAAA,cACAL,YAAA,GACG,CACHK,QAAA,gDACAL,YAAA,IAEAyE,SAAA,CACApE,QAAA,0BACAL,YAAA,GAEAsJ,QAAA,EACAjJ,QAAA,4FACAL,YAAA,GACG,uBACHqZ,MAAA,CACAhZ,QAAA,qCACAL,YAAA,EACAnE,MAAA,YAEAiJ,QAAA,CACAzE,QAAA,gvBACAL,YAAA,GAEAiF,SAAA,sEACAzB,YAAA,cACC,SAAAzI,GACD,IAAAC,EAAA,8CACAG,EAAA,CACA+I,IAAA,CACA7D,QAAA,YACAP,OAAA,CACAiC,KAAAhH,EAAA6B,UAAAsH,MAGAyb,WAAA,CACAtf,QAAA,kBACAL,YAAA,EACAnE,MAAA,cAEAwf,KAAA,CACAhb,QAAA,mBACAL,YAAA,EACAnE,MAAA,cAEA2H,YAAA,gBAEAzI,EAAA6B,UAAAgjB,QAAA7kB,EAAA6B,UAAAC,OAAA,UACAgjB,OAAA,CACAxf,QAAA,2CACAL,YAAA,EACAF,OAAA,CACAggB,YAAA,CACAzf,QAAAE,OAAA,gBAAAvF,EAAA,iBACA8E,OAAA,CACAigB,SAAA,CACA1f,QAAAE,OAAA,kBAAAvF,EAAA,qBACAgF,YAAA,EACAF,OAAA3E,GAEAgH,IAAA,YACAqB,YAAA,QAGA+T,KAAA,CACAlX,QAAAE,OAAA,YAAAvF,EAAA,gBACA8E,OAAA,CACAigB,SAAA,CACA1f,QAAAE,OAAA,WAAAvF,GACAgF,YAAA,EACAF,OAAA3E,GAEAqI,YAAA,WAGAoG,MAAA,CACAvJ,QAAAE,OAAA,UAAAvF,EAAA,oCAAAA,EAAA,gDACA8E,OAAA,CACAigB,SAAA,CACA1f,QAAAE,OAAA,6BAAAvF,EAAA,oCACAgF,YAAA,EACAF,OAAA3E,GAEAqI,YAAA,WAGAiH,OAAA,CACApK,QAAAE,OAAA,qCAAAvF,EAAA,YACA8E,OAAA,CACA8K,KAAA,CACAvK,QAAAE,OAAA,iBAAAvF,EAAA,iBACAgF,YAAA,GAEA2K,OAAA,CACAtK,QAAAE,OAAA,aAAAvF,EAAA,iBACAgF,YAAA,GAEAggB,KAAA,CACA3f,QAAAE,OAAA,cAAAvF,EAAA,oBACAgF,YAAA,EACAnE,MAAA,UAEA4C,KAAA,CACA4B,QAAAE,OAAA,SAAAvF,EAAA,eACAgF,YAAA,EACAnE,MAAA,WAEA0T,SAAA,CACAlP,QAAAE,OAAA,WAAAvF,EAAA,iBACAgF,YAAA,GAEAsP,QAAA,CACAjP,QAAAE,OAAA,SAAAvF,EAAA,eACAgF,YAAA,GAEAigB,KAAA,CACA5f,QAAAE,OAAA,SAAAvF,EAAA,eACAgF,YAAA,GAEA+f,SAAA,CACA1f,QAAAE,OAAA,mCAAAvF,GACAgF,YAAA,EACAF,OAAA3E,GAEAqI,YAAA,kBAGA0c,WAAA,CACA7f,QAAA,mBACAP,OAAA,CACAwE,OAAA,CACAjE,QAAA,mBACAL,YAAA,GAEAqE,IAAA,CACAhE,QAAA,WACAL,YAAA,GAEAwD,YAAA,WAGAoZ,KAAA,CACAvc,QAAAE,OAAA,OAAAvF,EAAA,qCACA8E,OAAA,CACAgU,KAAA,CACAzT,QAAAE,OAAA,SAAAvF,EAAA,iBACAgF,YAAA,GAEA+f,SAAA,CACA1f,QAAAE,OAAA,OAAAvF,GACAgF,YAAA,EACAF,OAAA3E,GAEAkJ,IAAA,CACAhE,QAAA,QACAL,YAAA,GAEAwD,YAAA,SAGA2c,MAAA,CACA9f,QAAAE,OAAA,OAAAvF,EAAA,uEACA8E,OAAA,CACAU,OAAA,CACAH,QAAAE,OAAA,SAAAvF,EAAA,8CACAgF,YAAA,EACAnE,MAAA,OAEAkkB,SAAA,CACA1f,QAAAE,OAAA,UAAAvF,EAAA,cACAgF,YAAA,EACAF,OAAA3E,GAEAkJ,IAAA,CACAhE,QAAA,QACAL,YAAA,GAEAwD,YAAA,SAGA4c,SAAA,CACA/f,QAAA,YACAxE,MAAA,UACAiE,OAAA,CACA0D,YAAA,UAGA6c,QAAA,CACAhgB,QAAA,sBACAP,OAAA,CACAsD,QAAA,CACA/C,QAAA,kBACAL,YAAA,GAEAwD,YAAA,SAGA8c,KAAA,CACAjgB,QAAA,mBACAxE,MAAA,UACAiE,OAAA,CACA0D,YAAA,aAMA,IAAApI,EAAA,CACAqP,OAAA1P,EAAA6B,UAAAgjB,QAAAC,OAAA/f,OAAA2K,OACAmS,KAAA7hB,EAAA6B,UAAAgjB,QAAAC,OAAA/f,OAAA8c,KACAuD,MAAAplB,EAAA6B,UAAAgjB,QAAAC,OAAA/f,OAAAqgB,MACAC,SAAArlB,EAAA6B,UAAAgjB,QAAAC,OAAA/f,OAAAsgB,SACAC,QAAAtlB,EAAA6B,UAAAgjB,QAAAC,OAAA/f,OAAAugB,QACAC,KAAAvlB,EAAA6B,UAAAgjB,QAAAC,OAAA/f,OAAAwgB,MAEAvlB,EAAA6B,UAAAgjB,QAAAzd,IAAA9B,QAAA,qGAAAtF,EAAA6B,UAAAgjB,QAAAC,OAAA/f,OAAA2K,OAAA3K,OAAA8K,KAAA9K,OAAA1E,EAAAL,EAAA6B,UAAAgjB,QAAAC,OAAA/f,OAAA2K,OAAA3K,OAAA6K,OAAA7K,OAAA1E,EAAAL,EAAA6B,UAAAgjB,QAAAC,OAAA/f,OAAA2K,OAAA3K,OAAAyP,SAAAzP,OAAA1E,EAAAL,EAAA6B,UAAAgjB,QAAAC,OAAA/f,OAAA2K,OAAA3K,OAAAwP,QAAAxP,OAAA1E,EAAAL,EAAA6B,UAAAgjB,QAAAC,OAAA/f,OAAA2K,OAAA3K,OAAAmgB,KAAAngB,OAAA1E,EAAAL,EAAA6B,UAAAgjB,QAAAC,OAAA/f,OAAA8J,MAAA9J,OAAA2K,OAAArP,EAAAqP,OAAA1P,EAAA6B,UAAAgjB,QAAAC,OAAA/f,OAAA8J,MAAA9J,OAAA8c,KAAAxhB,EAAAwhB,KAAA7hB,EAAA6B,UAAAgjB,QAAAC,OAAA/f,OAAA8J,MAAA9J,OAAAqgB,MAAA/kB,EAAA+kB,MAAAplB,EAAA6B,UAAAgjB,QAAAC,OAAA/f,OAAA8J,MAAA9J,OAAAsgB,SAAAhlB,EAAAglB,SAAArlB,EAAA6B,UAAAgjB,QAAAC,OAAA/f,OAAA8J,MAAA9J,OAAAugB,QAAAjlB,EAAAilB,QAAAtlB,EAAA6B,UAAAgjB,QAAAC,OAAA/f,OAAA8J,MAAA9J,OAAAwgB,KAAAllB,EAAAklB,KA7LC,CA8LAjlB,OACD,IAAAklB,EAAAllB,MAAAG,KAAAiB,MAAApB,MAAAuB,UAAA2jB,YACAllB,MAAAuB,UAAA4jB,IAAAnlB,MAAAuB,UAAAC,OAAA,MAAA0jB,GAAA,SAAAxlB,GACAA,EAAA6B,UAAA6jB,IAAA1lB,EAAA6B,UAAAC,OAAA,SACAuG,QAAA,CACA/C,QAAA,sBACAL,YAAA,GAEA8E,QAAA,0NACAtB,YAAA,sBACGzI,EAAA6B,UAAA6jB,IAAAxb,gBAAAlK,EAAA6B,UAAA6jB,IAAA/Y,SAAA3M,EAAA6B,UAAAE,aAAA,gBACHmI,SAAA,iDACAyC,SAAA,CACArH,QAAA,sDAEGtF,EAAA6B,UAAA6jB,IAAAjU,UAAAzR,EAAA6B,UAAAE,aAAA,iBACH0P,UAAA,CACAnM,QAAA,sBACAxE,MAAA,iBAEGd,EAAA6B,UAAAE,aAAA,gBACH6c,uBAAA,CACAtZ,QAAA,gCACAH,QAAA,EACArE,MAAA,UAEA+d,uBAAA,CACAvZ,QAAA,gCACAH,QAAA,EACArE,MAAA,SACAiE,OAAA,CACA4H,SAAA,CACArH,QAAA,wDAIGtF,EAAA6B,UAAA6jB,IAAAnc,OAAAvJ,EAAA6C,MAAAqE,IAAA,2BAAAjH,GACHD,EAAA6B,UAAA,qBAAAmR,kBAAA/S,EAAA,2BACGD,EAAA6C,MAAAqE,IAAA,0BAAAjH,GACHD,EAAA6B,UAAA,qBAAAuR,qBAAAnT,EAAA,SArCA,CAuCCK,aAAAuB,UAAA8jB,KAAA,CACDtd,QAAA,iBACAjB,IAAA,CACA9B,QAAA,kCACAP,OAAA,CACA6gB,GAAA,CACAtgB,QAAA,0BACAP,OAAA,CACA0D,YAAA,kBACAsB,QAAA,QAGA8b,GAAA,CACAvgB,QAAA,kBACAP,OAAA,CACA0D,YAAA,OAGAc,OAAA,CACAjE,QAAA,kCACAP,OAAA,CACA0D,YAAA,gBAGAsB,QAAA,sBACAC,QAAA,0BACAC,OAAA,2DACAC,SAAA,EACA5E,QAAA,wFACAL,YAAA,GACO,uCACPuE,SAAA,mBACAf,YAAA,kBAGAqd,MAAA,CACAxgB,QAAA,mBACAP,OAAAzE,MAAAuB,UAAAuG,SAEC9H,MAAAuB,UAAA2jB,WAAAllB,MAAAuB,UAAAC,OAAA,cACDiI,QAAA,yXACAwE,QAAA,oEACCjO,MAAAuB,UAAAkkB,GAAAzlB,MAAAuB,UAAA2jB,WAAA,SAAAxlB,GACDA,EAAA6B,UAAAmkB,SAAAhmB,EAAA6B,UAAAC,OAAA,aACA,IAAA7B,EAAA,CACA0M,SAAA,CACArH,QAAA,yGACAL,YAAA,EACAF,OAAA,IAEAwE,OAAA,CACAjE,QAAA,kBACAH,QAAA,GAEA8E,OAAA,UACAD,QAAA,qBACAE,SAAA,kEACAzB,YAAA,gBAEAxI,EAAA0M,SAAA5H,OAAA,CACAwE,OAAAtJ,EAAAsJ,OACAG,SAAA,CACApE,QAAA,4BACAL,YAAA,GAEAgF,OAAAhK,EAAAgK,OACAD,QAAA/J,EAAA+J,QACAvB,YAAAxI,EAAAwI,aACGzI,EAAA6B,UAAAE,aAAA,sBACHkkB,SAAA,CACA3gB,QAAA,4BACAL,YAAA,EACAE,QAAA,EACAJ,OAAA,CACA0D,YAAA,gBAGAyd,mBAAA,EACA5gB,QAAA,0BACAL,YAAA,EACAE,QAAA,EACArE,MAAA,WACK,CACLwE,QAAA,gBACAL,YAAA,EACAE,QAAA,EACArE,MAAA,YAEA6M,UAAA,CACArI,QAAA,uFACAL,YAAA,EACAF,OAAA,CACAgF,QAAA,CACAzE,QAAA,2CACAP,OAAA,CACA0D,YAAA,SAGAzB,KAAA/G,IAGA0M,SAAA1M,EAAA0M,WACG3M,EAAA6B,UAAAmkB,SAAA5e,IAAArC,OAAA,cAAAA,OAAAiC,KAAAhH,EAAA6B,UAAAmkB,SA5DF,CA6DA1lB,aAAAuB,UAAAskB,QAAA,CACD9d,QAAA,0BACAkB,OAAA,CACAjE,QAAA,sCACAH,QAAA,GAEAqE,SAAA,YACAc,SAAA,WACAZ,SAAA,YACAK,QAAA,gmDACAN,UAAA,wDACAQ,OAAA,wEACAC,SAAA,uBACAzB,YAAA,eACCnI,MAAAuB,UAAAukB,KAAA,CACD/d,QAAA,OACAge,eAAA,CACA/gB,QAAA,qCACAxE,MAAA,UAEAuU,kBAAA,CACA/P,QAAA,eACAxE,MAAA,YAEAyI,OAAA,sCACAe,SAAA,uBACAP,QAAA,mzBACAC,QAAA,sBACAN,SAAA,YACAO,OAAA,+DACAC,SAAA,gGACAzB,YAAA,iBACCnI,MAAAuB,UAAAykB,IAAA,CACD/c,OAAA,2CACAlB,QAAA,MACAqB,SAAA,YACAK,QAAA,qyJACAwE,QAAA,40RACAtE,OAAA,oCACAC,SAAA,4EACAzB,YAAA,gBACCnI,MAAAuB,UAAA,iBACDwG,QAAA,CACA/C,QAAA,+BACAP,OAAA,CACAgF,QAAA,UAGA4D,UAAA,CACArI,QAAA,+GACAxE,MAAA,UACAqE,QAAA,GAEAoE,OAAA,CACAjE,QAAA,4EACAH,QAAA,GAEA4c,KAAA,CACAzc,QAAA,sMACAxE,MAAA,WAEAmJ,OAAA,+EACAD,QAAA,8BACAD,QAAA,y/BACAG,SAAA,yBACA5E,QAAA,mCACAL,YAAA,IAEAwD,YAAA,cACCnI,MAAAuB,UAAA0kB,GAAAjmB,MAAAuB,UAAA,gBAAAvB,MAAAuB,UAAA2kB,KAAA,CACDne,QAAA,kBAAyB,CACzB/C,QAAA,OACAH,QAAA,IAEAoE,OAAA,CACAjE,QAAA,yBACAH,QAAA,GAEA4E,QAAA,EACAzE,QAAA,sBACAP,OAAA,CACAmF,SAAA,MAEG,CACH5E,QAAA,ibACAP,OAAA,CACA0D,YAAA,OAEG,4QACHkE,SAAA,qCACA1C,OAAA,kNACAxB,YAAA,QACCnI,MAAAuB,UAAA4kB,KAAAnmB,MAAAuB,UAAAC,OAAA,UACD4kB,gBAAA,CACAphB,QAAA,4BACAL,YAAA,EACAnE,MAAA,WAEAga,QAAA,CACAxV,QAAA,cACAP,OAAA,CACA0D,YAAA,UACAgB,UAAA,OAGAkd,SAAA,CACArhB,QAAA,gBACAP,OAAA,CACA6hB,cAAA,CACAthB,QAAA,mBACAL,YAAA,GAEA4K,KAAA,CACAvK,QAAA,8BACAL,YAAA,GAEA2K,OAAA,CACAtK,QAAA,6BACAL,YAAA,GAEAwD,YAAA,cAGA6G,GAAA,CACAhK,QAAA,UACAxE,MAAA,eAEAwI,IAAA,kEAA6C,uBAC7CqD,SAAA,8BAAyC,eACzCkE,OAAA,0BACAgW,YAAA,CACAvhB,QAAA,qCACAL,YAAA,EACAF,OAAA,CACA+hB,YAAA,CACAxhB,QAAA,MACAxE,MAAA,eAEAkG,KAAA1G,MAAAuB,UAAAuG,OAAAhB,IAAArC,SAGA0D,YAAA,yCACCnI,MAAAuB,UAAAE,aAAA,cACDglB,OAAA,CACAzhB,QAAA,iDACAP,OAAA,CACAqC,IAAA,CACA9B,QAAA,+DACAP,OAAAzE,MAAAuB,UAAAuG,OAAAhB,IAAArC,YAIC,SAAA/E,GACDA,EAAA6B,UAAAmlB,MAAAhnB,EAAA6B,UAAAC,OAAA,UACAwI,SAAA,CACAhF,QAAA,4CACAP,OAAA,CACA0D,YAAA,CACAnD,QAAA,QAIAqH,SAAA,CACArH,QAAA,+BACAP,OAAA,CACA0D,YAAA,CACAnD,QAAA,QAEA4E,SAAA,CACA5E,QAAA,kBAIA2hB,kBAAA,CACA3hB,QAAA,0GACAP,OAAA,CACA4H,SAAA,CACArH,QAAA,mCACAP,OAAA,CACA0D,YAAA,CACAnD,QAAA,SAEA4E,SAAA,CACA5E,QAAA,kBAIAmD,YAAA,CACAnD,QAAA,mBAGAxE,MAAA,YAEAomB,iBAAA,CACA5hB,QAAA,gHACAP,OAAA,CACA0D,YAAA,CACAnD,QAAA,eAGAxE,MAAA,YAEA+L,mBAAA,CACAvH,QAAA,8CACAP,OAAA,CACA0D,YAAA,CACAnD,QAAA,iCACAP,OAAA,CACAqC,IAAA,CACA9B,QAAA,UAKAxE,MAAA,YAEAqmB,uBAAA,CACA7hB,QAAA,8DACAP,OAAA,CACA0D,YAAA,CACAnD,QAAA,iCACAP,OAAA,CACAqC,IAAA,CACA9B,QAAA,SAIAoN,UAAA,CACApN,QAAA,WACAP,OAAA,CACA0D,YAAA,CACAnD,QAAA,MAGAxE,MAAA,YAGAA,MAAA,YAEAsmB,4BAAA,CACA9hB,QAAA,cACAP,OAAA,CACA0D,YAAA,CACAnD,QAAA,UAGAxE,MAAA,YAEAumB,wBAAA,CACA/hB,QAAA,cACAP,OAAA,CACA0D,YAAA,CACAnD,QAAA,WAGAxE,MAAA,cAEGd,EAAA6B,UAAAE,aAAA,wBACH4K,SAAA3M,EAAA6B,UAAAmlB,MAAA,mBAAAjiB,OAAA4H,UACG3M,EAAA6B,UAAAmlB,MAAA,mBAAAhnB,EAAA6B,UAAAylB,UAAAtnB,EAAA6B,UAAAmlB,MA3GF,CA4GA1mB,aAAAuB,UAAA0lB,KAAA,CACDlf,QAAA,CACA/C,QAAA,sBACAP,OAAA,CACAgF,QAAA,UAGAR,OAAA,CACAjE,QAAA,iBACAH,QAAA,GAEA8E,OAAA,+DACA4G,OAAA,sCACA9G,QAAA,qXACAG,SAAA,6FACAzB,YAAA,YACC,SAAAzI,GACDA,EAAA6B,UAAA2lB,OAAAxnB,EAAA6B,UAAAC,OAAA,UACA2lB,iBAAA,CACAniB,QAAA,iBACAH,QAAA,EACArE,MAAA,WAEAyI,OAAA,CACAjE,QAAA,iCACAH,QAAA,GAEAuiB,UAAA,CACApiB,QAAA,YACAxE,MAAA,UAEA6L,SAAA,YACAgb,KAAA,CACAriB,QAAA,4IACAL,YAAA,EACAnE,MAAA,YAEAmb,mBAAA,CACA3W,QAAA,sHACAL,YAAA,EACAnE,MAAA,YAEAiJ,QAAA,CACAzE,QAAA,ocACAL,YAAA,GAEAyE,SAAA,8BACAke,iBAAA,CACAtiB,QAAA,iCACAL,YAAA,EACAnE,MAAA,OAEA+mB,mBAAA,CACAviB,QAAA,mCACAL,YAAA,EACAnE,MAAA,aAEAyN,QAAA,CACAjJ,QAAA,shBACAL,YAAA,GAEAgF,OAAA,gCACAC,SAAA,uCACA5E,QAAA,cACAL,YAAA,IAEAwD,YAAA,mBACGzI,EAAA6B,UAAA2lB,OAAApgB,IAAA9B,QAAA,8IAAwItF,EAAA6B,UAAA2lB,OAAApgB,IAAArC,OAAA,cAAAO,QAAA,yFAA2JtF,EAAA6B,UAAA2lB,OAAApgB,IAAArC,OAAA,cAAAA,OAAA0D,YAAA,SAAAzI,EAAA6B,UAAA2lB,OAAApgB,IAAArC,OAAA,cAAAA,OAAAkS,WAAA,CACtS3R,QAAA,uCACAP,OAAA,CACAiC,KAAAhH,EAAA6B,UAAA2lB,QAEA1mB,MAAA,mBAGA,IAAAb,EAAA,SAAAA,EAAAD,GACA,uBAAAA,IAAA,iBAAAA,EAAAa,QAAAb,EAAAa,QAAAb,EAAAa,QAAAE,IAAAd,GAAAkH,KAAA,KAEA/G,EAAA,SAAAA,EAAAC,GACA,QAAAM,EAAA,GAAArB,EAAA,EAA2BA,EAAAe,EAAA4B,OAAc3C,IAAA,CACzC,IAAA4C,EAAA7B,EAAAf,GACA6C,GAAA,EAEA,oBAAAD,IAAA,QAAAA,EAAAtB,MAAAsB,EAAArB,QAAA,YAAAqB,EAAArB,QAAA,GAAAD,KAAA,OAAAsB,EAAArB,QAAA,GAAAA,QAAA,GAAAA,QAAAF,EAAAsB,OAAA,GAAAtB,IAAAsB,OAAA,GAAAiY,UAAAja,EAAAiC,EAAArB,QAAA,GAAAA,QAAA,KAAAF,EAAAmH,MAAA,OAAA5F,EAAArB,QAAAqB,EAAArB,QAAAoB,OAAA,GAAApB,SAAAF,EAAAgG,KAAA,CACAuT,QAAAja,EAAAiC,EAAArB,QAAA,GAAAA,QAAA,IACAsZ,aAAA,MACOxZ,EAAAsB,OAAA,mBAAAC,EAAAtB,MAAA,MAAoDsB,EAAArB,UAAAR,EAAAf,EAAA,oBAAAe,EAAAf,EAAA,GAAAsB,MAAA,MAAqEP,EAAAf,EAAA,GAAAuB,SAAAR,EAAAf,EAAA,mBAAAe,EAAAf,EAAA,GAAAsB,MAAA,MAA0EP,EAAAf,EAAA,GAAAuB,QAAAF,EAAAsB,OAAA,GAAAtB,IAAAsB,OAAA,GAAAkY,aAAA,mBAAAjY,EAAAtB,MAAA,MAA2GsB,EAAArB,QAAAF,IAAAsB,OAAA,GAAAkY,eAAA,YAAAjY,EAAAtB,OAAAuB,GAAA,GAAAxB,IAAAsB,OAAA,GAAAkY,iBAAAhY,GAAA,iBAAAD,IAAAvB,EAAAsB,OAAA,OAAAtB,IAAAsB,OAAA,GAAAkY,aAAA,CACrT,IAAA/X,EAAAnC,EAAAiC,GACA5C,EAAAe,EAAA4B,OAAA,qBAAA5B,EAAAf,EAAA,mBAAAe,EAAAf,EAAA,GAAAsB,QAAAwB,GAAAnC,EAAAI,EAAAf,EAAA,IAAAe,EAAAyG,OAAAxH,EAAA,MAAAA,EAAA,qBAAAe,EAAAf,EAAA,mBAAAe,EAAAf,EAAA,GAAAsB,QAAAwB,EAAAnC,EAAAI,EAAAf,EAAA,IAAA8C,EAAA/B,EAAAyG,OAAAxH,EAAA,KAAAA,KAAAe,EAAAf,GAAA,QAAA4D,KAAAd,KAAA,IAAApC,EAAA2E,MAAA,aAAAvC,EAAA,KAAAA,GAGAF,EAAArB,SAAA,iBAAAqB,EAAArB,SAAAT,EAAA8B,EAAArB,WAIAb,EAAA6C,MAAAqE,IAAA,0BAAAlH,GACA,WAAAA,EAAAwD,UAAApD,EAAAJ,EAAAwE,UAhFC,CAkFAlE,aAAAuB,UAAA6iB,KAAA,CACDoD,OAAA,CACAxiB,QAAA,wFACAL,YAAA,EACAnE,MAAA,UAEAuH,QAAA,MACA0f,IAAA,CACAziB,QAAA,+EACAL,YAAA,EACAnE,MAAA,UAEA6M,UAAA,CACArI,QAAA,gBACAL,YAAA,EACAnE,MAAA,aAEA4f,SAAA,CACApb,QAAA,2MACAL,YAAA,EACAnE,MAAA,UAEAkJ,QAAA,CACA1E,QAAA,mEACAL,YAAA,EACAnE,MAAA,aAEA+Y,KAAA,CACAvU,QAAA,+DACAL,YAAA,EACAnE,MAAA,aAEAyI,OAAA,CACAjE,QAAA,uFACAL,YAAA,EACAE,QAAA,GAEA8E,OAAA,CACA3E,QAAA,gIACAL,YAAA,GAEAmC,IAAA,UACAqC,UAAA,YACAhB,YAAA,6BAGA,IAAAuf,EAAA,WACA,IAAAhoB,EAAA0C,SAAAulB,eACA,IAAAjoB,EAAAkoB,WAAA,oBAEA,QAAAjoB,EAAAyC,SAAAylB,cAAA/nB,EAAA,GAAAC,EAAA,EAAqDA,EAAAL,EAAAkoB,WAAkB7nB,IACvED,EAAAuG,KAAA3G,EAAAooB,WAAA/nB,IAGA,OAAAJ,EAAAia,QAAA/G,eACA,YACA,eACAlT,EAAAooB,OACA,MAEA,QACApoB,EAAA,KAGA,OAAAD,EAAAsoB,kBAAA,WACA,UAAAtoB,EAAAY,MAAAZ,EAAAsoB,kBAAAtoB,EAAAkoB,YAAA9nB,EAAAwB,QAAA,SAAA3B,GACAD,EAAAuoB,SAAAtoB,KACKA,KAAAuoB,UAGLC,EAAA,mCAmCA,IAAAC,EA5BA,SAAA1oB,EAAAC,GACA,IAAAG,EACAC,EACAM,EACArB,EACA4C,EACAC,EACAC,GAAA,EACAnC,MAAA,IAAcG,EAAAH,EAAA0oB,QAAA,EAEd,IACA,GAAAhoB,EAAAqnB,IAAA1oB,EAAAoD,SAAAkmB,cAAA1mB,EAAAQ,SAAAulB,gBAAA9lB,EAAAO,SAAA4I,cAAA,SAAA3H,YAAA3D,EAAAmC,EAAAwH,MAAA1C,IAAA,QAAA9E,EAAAwH,MAAAmP,SAAA,QAAA3W,EAAAwH,MAAAkf,IAAA,EAAA1mB,EAAAwH,MAAAmf,KAAA,mBAAA3mB,EAAAwH,MAAAof,WAAA,MAAA5mB,EAAAwH,MAAAqf,iBAAA,OAAA7mB,EAAAwH,MAAAsf,cAAA,OAAA9mB,EAAAwH,MAAAuf,aAAA,OAAA/mB,EAAAwH,MAAAwf,WAAA,OAAAzmB,SAAA0mB,KAAA7d,YAAApJ,GAAA7C,EAAA+pB,WAAAlnB,GAAAD,EAAAqmB,SAAAjpB,IAAAoD,SAAA4mB,YAAA,kBAAAC,MAAA,iCACAnnB,GAAA,EACG,MAAAzB,GACHP,GAAAopB,QAAAC,MAAA,qCAAA9oB,GAAAP,GAAAopB,QAAAE,KAAA,4BAEA,IACA7pB,OAAA8pB,cAAAC,QAAA,OAAA5pB,GAAAoC,GAAA,EACK,MAAAzB,GACLP,GAAAopB,QAAAC,MAAA,uCAAA9oB,GAAAP,GAAAopB,QAAAC,MAAA,0BAAAppB,EAxBA,SAAAL,GACA,IAAAC,GAAA,YAAAiD,KAAA2mB,UAAAC,WAAA,sBACA,OAAA9pB,EAAAgB,QAAA,gBAAgCf,GAsBhC8pB,CAAA,YAAA9pB,IAAA+pB,QAAAvB,GAAA5oB,OAAAoqB,OAAA5pB,EAAAL,IAEG,QACHkC,IAAA,mBAAAA,EAAAgoB,YAAAhoB,EAAAgoB,YAAA5qB,GAAA4C,EAAAomB,mBAAAnmB,GAAAO,SAAA0mB,KAAAe,YAAAhoB,GAAAxB,IAGA,OAAAyB,GAIA1C,EAAA,WACA,SAAAM,IACAsC,KAAAzB,QAAA,4IAAAyB,KAAA8nB,MAAA,OAAA9nB,KAAAkB,SAAA,OAAAlB,KAAA+nB,YAAA,OAGA,OAAArqB,EAAAkB,UAAAopB,iBAAA,WACA,IAAAtqB,EAAAsC,KACAhC,MAAAuC,MAAAqE,IAAA,oBAAAjH,GACAD,EAAA0D,KAAAzD,EAAAyD,OACKpD,MAAAkC,gBACFxC,EAAAkB,UAAAqpB,mBAAA,WACHjqB,MAAAkC,gBACGxC,EAAAkB,UAAAspB,cAAA,SAAAxqB,GACH,GAAAA,EAAA,OAAAM,MAAAG,KAAAC,OAAAV,IACGA,EAAAkB,UAAAwnB,gBAAA,WACH,IAAA1oB,EAAAsC,KACAA,KAAA+nB,YAAA,SAAA3B,EAAApmB,KAAAoB,MAAAyE,WAAA,WACAnI,EAAAqqB,YAAA,QACK,MACFrqB,EAAAkB,UAAAupB,OAAA,WACH,IAAAzqB,EAAAsC,KACA,OAAWrB,OAAAtB,EAAA,EAAAsB,CAAC,WAAcA,OAAAtB,EAAA,EAAAsB,CAAC,OAC3B+S,GAAA,UACAvG,MAAA,UACOxM,OAAAtB,EAAA,EAAAsB,CAAC,cAAiBA,OAAAtB,EAAA,EAAAsB,CAAC,OAC1BwM,MAAAnL,KAAA8nB,OACOnpB,OAAAtB,EAAA,EAAAsB,CAAC,OACRwM,MAAA,gBACOxM,OAAAtB,EAAA,EAAAsB,CAAC,OACRwM,MAAA,YAAAnL,KAAAkB,UACOvC,OAAAtB,EAAA,EAAAsB,CAAC,QACRwM,MAAA,YAAAnL,KAAAkB,SACAU,UAAA5B,KAAAkoB,cAAAloB,KAAAzB,YACSI,OAAAtB,EAAA,EAAAsB,CAAC,OACVwM,MAAA,WACOxM,OAAAtB,EAAA,EAAAsB,CAAC,OACRwM,MAAA,gBACOxM,OAAAtB,EAAA,EAAAsB,CAAC,YAAAqB,KAAAkB,SAAA2P,gBAA8ClS,OAAAtB,EAAA,EAAAsB,CAAC,OACvDwM,MAAA,gBACOxM,OAAAtB,EAAA,EAAAsB,CAAC,KACRypB,QAAA,WACA1qB,EAAA0oB,oBAEOznB,OAAAtB,EAAA,EAAAsB,CAAC,OACR0pB,cAAA,OACAC,cAAA,MACAC,YAAA,OACApd,MAAA,iCACAkU,KAAA,MACAmJ,MAAA,6BACAC,QAAA,cACA/W,GAAA,aACAgX,MAAA,KACAC,OAAA,MACOhqB,OAAAtB,EAAA,EAAAsB,CAAC,QACRiqB,KAAA,eACAzrB,EAAA,kgBACK6C,KAAA+nB,mBACFppB,OAAAO,eAAAxB,EAAA,MACHmrB,IAAA,WACA,2BAEAC,YAAA,EACAC,cAAA,IACGpqB,OAAAO,eAAAxB,EAAA,cACHmrB,IAAA,WACA,OACAtqB,QAAA,CACAD,KAAA0qB,OACAC,KAAA,WAEAlB,YAAA,CACAmB,OAAA,GAEAhoB,SAAA,CACA5C,KAAA0qB,OACAC,KAAA,YAEAnB,MAAA,CACAxpB,KAAA0qB,OACAC,KAAA,WAIAH,YAAA,EACAC,cAAA,IACGpqB,OAAAO,eAAAxB,EAAA,SACHmrB,IAAA,WACA,07OAEAC,YAAA,EACAC,cAAA,IACGrrB,EA5FH","file":"static/js/4.cc32489d.chunk.js","sourcesContent":["/*! Built with http://stenciljs.com */\nimport { h } from \"../snippet-highlight.core.js\";\nvar commonjsGlobal = \"undefined\" != typeof window ? window : \"undefined\" != typeof global ? global : \"undefined\" != typeof self ? self : {};\n\nfunction createCommonjsModule(e, t) {\n  return e(t = {\n    exports: {}\n  }, t.exports), t.exports;\n}\n\nvar prism = createCommonjsModule(function (e) {\n  var t = \"undefined\" != typeof window ? window : \"undefined\" != typeof WorkerGlobalScope && self instanceof WorkerGlobalScope ? self : {},\n      n = function () {\n    var e = /\\blang(?:uage)?-([\\w-]+)\\b/i,\n        n = 0,\n        a = t.Prism = {\n      manual: t.Prism && t.Prism.manual,\n      disableWorkerMessageHandler: t.Prism && t.Prism.disableWorkerMessageHandler,\n      util: {\n        encode: function encode(e) {\n          return e instanceof i ? new i(e.type, a.util.encode(e.content), e.alias) : \"Array\" === a.util.type(e) ? e.map(a.util.encode) : e.replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/\\u00a0/g, \" \");\n        },\n        type: function type(e) {\n          return Object.prototype.toString.call(e).match(/\\[object (\\w+)\\]/)[1];\n        },\n        objId: function objId(e) {\n          return e.__id || Object.defineProperty(e, \"__id\", {\n            value: ++n\n          }), e.__id;\n        },\n        clone: function clone(e, t) {\n          var n = a.util.type(e);\n\n          switch (t = t || {}, n) {\n            case \"Object\":\n              if (t[a.util.objId(e)]) return t[a.util.objId(e)];\n              var i = {};\n\n              for (var r in t[a.util.objId(e)] = i, e) {\n                e.hasOwnProperty(r) && (i[r] = a.util.clone(e[r], t));\n              }\n\n              return i;\n\n            case \"Array\":\n              return t[a.util.objId(e)] ? t[a.util.objId(e)] : (i = [], t[a.util.objId(e)] = i, e.forEach(function (e, n) {\n                i[n] = a.util.clone(e, t);\n              }), i);\n          }\n\n          return e;\n        }\n      },\n      languages: {\n        extend: function extend(e, t) {\n          var n = a.util.clone(a.languages[e]);\n\n          for (var i in t) {\n            n[i] = t[i];\n          }\n\n          return n;\n        },\n        insertBefore: function insertBefore(e, t, n, i) {\n          var r = (i = i || a.languages)[e];\n\n          if (2 == arguments.length) {\n            for (var o in n = arguments[1]) {\n              n.hasOwnProperty(o) && (r[o] = n[o]);\n            }\n\n            return r;\n          }\n\n          var s = {};\n\n          for (var l in r) {\n            if (r.hasOwnProperty(l)) {\n              if (l == t) for (var o in n) {\n                n.hasOwnProperty(o) && (s[o] = n[o]);\n              }\n              s[l] = r[l];\n            }\n          }\n\n          return a.languages.DFS(a.languages, function (t, n) {\n            n === i[e] && t != e && (this[t] = s);\n          }), i[e] = s;\n        },\n        DFS: function DFS(e, t, n, i) {\n          for (var r in i = i || {}, e) {\n            e.hasOwnProperty(r) && (t.call(e, r, e[r], n || r), \"Object\" !== a.util.type(e[r]) || i[a.util.objId(e[r])] ? \"Array\" !== a.util.type(e[r]) || i[a.util.objId(e[r])] || (i[a.util.objId(e[r])] = !0, a.languages.DFS(e[r], t, r, i)) : (i[a.util.objId(e[r])] = !0, a.languages.DFS(e[r], t, null, i)));\n          }\n        }\n      },\n      plugins: {},\n      highlightAll: function highlightAll(e, t) {\n        a.highlightAllUnder(document, e, t);\n      },\n      highlightAllUnder: function highlightAllUnder(e, t, n) {\n        var i = {\n          callback: n,\n          selector: 'code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code'\n        };\n        a.hooks.run(\"before-highlightall\", i);\n\n        for (var r, o = i.elements || e.querySelectorAll(i.selector), s = 0; r = o[s++];) {\n          a.highlightElement(r, !0 === t, i.callback);\n        }\n      },\n      highlightElement: function highlightElement(n, i, r) {\n        for (var o, s, l = n; l && !e.test(l.className);) {\n          l = l.parentNode;\n        }\n\n        l && (o = (l.className.match(e) || [, \"\"])[1].toLowerCase(), s = a.languages[o]), n.className = n.className.replace(e, \"\").replace(/\\s+/g, \" \") + \" language-\" + o, n.parentNode && /pre/i.test((l = n.parentNode).nodeName) && (l.className = l.className.replace(e, \"\").replace(/\\s+/g, \" \") + \" language-\" + o);\n        var d = {\n          element: n,\n          language: o,\n          grammar: s,\n          code: n.textContent\n        };\n        if (a.hooks.run(\"before-sanity-check\", d), !d.code || !d.grammar) return d.code && (a.hooks.run(\"before-highlight\", d), d.element.textContent = d.code, a.hooks.run(\"after-highlight\", d)), void a.hooks.run(\"complete\", d);\n\n        if (a.hooks.run(\"before-highlight\", d), i && t.Worker) {\n          var c = new Worker(a.filename);\n          c.onmessage = function (e) {\n            d.highlightedCode = e.data, a.hooks.run(\"before-insert\", d), d.element.innerHTML = d.highlightedCode, r && r.call(d.element), a.hooks.run(\"after-highlight\", d), a.hooks.run(\"complete\", d);\n          }, c.postMessage(JSON.stringify({\n            language: d.language,\n            code: d.code,\n            immediateClose: !0\n          }));\n        } else d.highlightedCode = a.highlight(d.code, d.grammar, d.language), a.hooks.run(\"before-insert\", d), d.element.innerHTML = d.highlightedCode, r && r.call(n), a.hooks.run(\"after-highlight\", d), a.hooks.run(\"complete\", d);\n      },\n      highlight: function highlight(e, t, n) {\n        var r = {\n          code: e,\n          grammar: t,\n          language: n\n        };\n        return a.hooks.run(\"before-tokenize\", r), r.tokens = a.tokenize(r.code, r.grammar), a.hooks.run(\"after-tokenize\", r), i.stringify(a.util.encode(r.tokens), r.language);\n      },\n      matchGrammar: function matchGrammar(e, t, n, i, r, o, s) {\n        var l = a.Token;\n\n        for (var d in n) {\n          if (n.hasOwnProperty(d) && n[d]) {\n            if (d == s) return;\n            var c = n[d];\n            c = \"Array\" === a.util.type(c) ? c : [c];\n\n            for (var p = 0; p < c.length; ++p) {\n              var u = c[p],\n                  g = u.inside,\n                  m = !!u.lookbehind,\n                  b = !!u.greedy,\n                  f = 0,\n                  h = u.alias;\n\n              if (b && !u.pattern.global) {\n                var E = u.pattern.toString().match(/[imuy]*$/)[0];\n                u.pattern = RegExp(u.pattern.source, E + \"g\");\n              }\n\n              u = u.pattern || u;\n\n              for (var S = i, y = r; S < t.length; y += t[S].length, ++S) {\n                var _ = t[S];\n                if (t.length > e.length) return;\n\n                if (!(_ instanceof l)) {\n                  if (b && S != t.length - 1) {\n                    if (u.lastIndex = y, !(w = u.exec(e))) break;\n\n                    for (var A = w.index + (m ? w[1].length : 0), T = w.index + w[0].length, I = S, R = y, v = t.length; I < v && (R < T || !t[I].type && !t[I - 1].greedy); ++I) {\n                      A >= (R += t[I].length) && (++S, y = R);\n                    }\n\n                    if (t[S] instanceof l) continue;\n                    C = I - S, _ = e.slice(y, R), w.index -= y;\n                  } else {\n                    u.lastIndex = 0;\n                    var w = u.exec(_),\n                        C = 1;\n                  }\n\n                  if (w) {\n                    m && (f = w[1] ? w[1].length : 0), T = (A = w.index + f) + (w = w[0].slice(f)).length;\n\n                    var N = _.slice(0, A),\n                        k = _.slice(T),\n                        P = [S, C];\n\n                    N && (++S, y += N.length, P.push(N));\n                    var L = new l(d, g ? a.tokenize(w, g) : w, h, w, b);\n                    if (P.push(L), k && P.push(k), Array.prototype.splice.apply(t, P), 1 != C && a.matchGrammar(e, t, n, S, y, !0, d), o) break;\n                  } else if (o) break;\n                }\n              }\n            }\n          }\n        }\n      },\n      tokenize: function tokenize(e, t, n) {\n        var i = [e],\n            r = t.rest;\n\n        if (r) {\n          for (var o in r) {\n            t[o] = r[o];\n          }\n\n          delete t.rest;\n        }\n\n        return a.matchGrammar(e, i, t, 0, 0, !1), i;\n      },\n      hooks: {\n        all: {},\n        add: function add(e, t) {\n          var n = a.hooks.all;\n          n[e] = n[e] || [], n[e].push(t);\n        },\n        run: function run(e, t) {\n          var n = a.hooks.all[e];\n          if (n && n.length) for (var i, r = 0; i = n[r++];) {\n            i(t);\n          }\n        }\n      }\n    },\n        i = a.Token = function (e, t, n, a, i) {\n      this.type = e, this.content = t, this.alias = n, this.length = 0 | (a || \"\").length, this.greedy = !!i;\n    };\n\n    if (i.stringify = function (e, t, n) {\n      if (\"string\" == typeof e) return e;\n      if (\"Array\" === a.util.type(e)) return e.map(function (n) {\n        return i.stringify(n, t, e);\n      }).join(\"\");\n      var r = {\n        type: e.type,\n        content: i.stringify(e.content, t, n),\n        tag: \"span\",\n        classes: [\"token\", e.type],\n        attributes: {},\n        language: t,\n        parent: n\n      };\n\n      if (e.alias) {\n        var o = \"Array\" === a.util.type(e.alias) ? e.alias : [e.alias];\n        Array.prototype.push.apply(r.classes, o);\n      }\n\n      a.hooks.run(\"wrap\", r);\n      var s = Object.keys(r.attributes).map(function (e) {\n        return e + '=\"' + (r.attributes[e] || \"\").replace(/\"/g, \"&quot;\") + '\"';\n      }).join(\" \");\n      return \"<\" + r.tag + ' class=\"' + r.classes.join(\" \") + '\"' + (s ? \" \" + s : \"\") + \">\" + r.content + \"</\" + r.tag + \">\";\n    }, !t.document) return t.addEventListener ? (a.disableWorkerMessageHandler || t.addEventListener(\"message\", function (e) {\n      var n = JSON.parse(e.data),\n          i = n.language,\n          r = n.immediateClose;\n      t.postMessage(a.highlight(n.code, a.languages[i], i)), r && t.close();\n    }, !1), t.Prism) : t.Prism;\n    var r = document.currentScript || [].slice.call(document.getElementsByTagName(\"script\")).pop();\n    return r && (a.filename = r.src, a.manual || r.hasAttribute(\"data-manual\") || (\"loading\" !== document.readyState ? window.requestAnimationFrame ? window.requestAnimationFrame(a.highlightAll) : window.setTimeout(a.highlightAll, 16) : document.addEventListener(\"DOMContentLoaded\", a.highlightAll))), t.Prism;\n  }();\n\n  e.exports && (e.exports = n), void 0 !== commonjsGlobal && (commonjsGlobal.Prism = n), n.languages.markup = {\n    comment: /<!--[\\s\\S]*?-->/,\n    prolog: /<\\?[\\s\\S]+?\\?>/,\n    doctype: /<!DOCTYPE[\\s\\S]+?>/i,\n    cdata: /<!\\[CDATA\\[[\\s\\S]*?]]>/i,\n    tag: {\n      pattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+))?)*\\s*\\/?>/i,\n      greedy: !0,\n      inside: {\n        tag: {\n          pattern: /^<\\/?[^\\s>\\/]+/i,\n          inside: {\n            punctuation: /^<\\/?/,\n            namespace: /^[^\\s>\\/:]+:/\n          }\n        },\n        \"attr-value\": {\n          pattern: /=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+)/i,\n          inside: {\n            punctuation: [/^=/, {\n              pattern: /(^|[^\\\\])[\"']/,\n              lookbehind: !0\n            }]\n          }\n        },\n        punctuation: /\\/?>/,\n        \"attr-name\": {\n          pattern: /[^\\s>\\/]+/,\n          inside: {\n            namespace: /^[^\\s>\\/:]+:/\n          }\n        }\n      }\n    },\n    entity: /&#?[\\da-z]{1,8};/i\n  }, n.languages.markup.tag.inside[\"attr-value\"].inside.entity = n.languages.markup.entity, n.hooks.add(\"wrap\", function (e) {\n    \"entity\" === e.type && (e.attributes.title = e.content.replace(/&amp;/, \"&\"));\n  }), n.languages.xml = n.languages.markup, n.languages.html = n.languages.markup, n.languages.mathml = n.languages.markup, n.languages.svg = n.languages.markup, n.languages.css = {\n    comment: /\\/\\*[\\s\\S]*?\\*\\//,\n    atrule: {\n      pattern: /@[\\w-]+?.*?(?:;|(?=\\s*\\{))/i,\n      inside: {\n        rule: /@[\\w-]+/\n      }\n    },\n    url: /url\\((?:([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1|.*?)\\)/i,\n    selector: /[^{}\\s][^{};]*?(?=\\s*\\{)/,\n    string: {\n      pattern: /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: !0\n    },\n    property: /[-_a-z\\xA0-\\uFFFF][-\\w\\xA0-\\uFFFF]*(?=\\s*:)/i,\n    important: /\\B!important\\b/i,\n    function: /[-a-z0-9]+(?=\\()/i,\n    punctuation: /[(){};:]/\n  }, n.languages.css.atrule.inside.rest = n.languages.css, n.languages.markup && (n.languages.insertBefore(\"markup\", \"tag\", {\n    style: {\n      pattern: /(<style[\\s\\S]*?>)[\\s\\S]*?(?=<\\/style>)/i,\n      lookbehind: !0,\n      inside: n.languages.css,\n      alias: \"language-css\",\n      greedy: !0\n    }\n  }), n.languages.insertBefore(\"inside\", \"attr-value\", {\n    \"style-attr\": {\n      pattern: /\\s*style=(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/i,\n      inside: {\n        \"attr-name\": {\n          pattern: /^\\s*style/i,\n          inside: n.languages.markup.tag.inside\n        },\n        punctuation: /^\\s*=\\s*['\"]|['\"]\\s*$/,\n        \"attr-value\": {\n          pattern: /.+/i,\n          inside: n.languages.css\n        }\n      },\n      alias: \"language-css\"\n    }\n  }, n.languages.markup.tag)), n.languages.clike = {\n    comment: [{\n      pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n      lookbehind: !0\n    }, {\n      pattern: /(^|[^\\\\:])\\/\\/.*/,\n      lookbehind: !0,\n      greedy: !0\n    }],\n    string: {\n      pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: !0\n    },\n    \"class-name\": {\n      pattern: /((?:\\b(?:class|interface|extends|implements|trait|instanceof|new)\\s+)|(?:catch\\s+\\())[\\w.\\\\]+/i,\n      lookbehind: !0,\n      inside: {\n        punctuation: /[.\\\\]/\n      }\n    },\n    keyword: /\\b(?:if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\\b/,\n    boolean: /\\b(?:true|false)\\b/,\n    function: /[a-z0-9_]+(?=\\()/i,\n    number: /\\b0x[\\da-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n    operator: /--?|\\+\\+?|!=?=?|<=?|>=?|==?=?|&&?|\\|\\|?|\\?|\\*|\\/|~|\\^|%/,\n    punctuation: /[{}[\\];(),.:]/\n  }, n.languages.javascript = n.languages.extend(\"clike\", {\n    keyword: /\\b(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|var|void|while|with|yield)\\b/,\n    number: /\\b(?:0[xX][\\dA-Fa-f]+|0[bB][01]+|0[oO][0-7]+|NaN|Infinity)\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee][+-]?\\d+)?/,\n    function: /[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*\\()/i,\n    operator: /-[-=]?|\\+[+=]?|!=?=?|<<?=?|>>?>?=?|=(?:==?|>)?|&[&=]?|\\|[|=]?|\\*\\*?=?|\\/=?|~|\\^=?|%=?|\\?|\\.{3}/\n  }), n.languages.insertBefore(\"javascript\", \"keyword\", {\n    regex: {\n      pattern: /((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s])\\s*)\\/(\\[[^\\]\\r\\n]+]|\\\\.|[^\\/\\\\\\[\\r\\n])+\\/[gimyu]{0,5}(?=\\s*($|[\\r\\n,.;})\\]]))/,\n      lookbehind: !0,\n      greedy: !0\n    },\n    \"function-variable\": {\n      pattern: /[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*=\\s*(?:function\\b|(?:\\([^()]*\\)|[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*)\\s*=>))/i,\n      alias: \"function\"\n    },\n    constant: /\\b[A-Z][A-Z\\d_]*\\b/\n  }), n.languages.insertBefore(\"javascript\", \"string\", {\n    \"template-string\": {\n      pattern: /`(?:\\\\[\\s\\S]|\\${[^}]+}|[^\\\\`])*`/,\n      greedy: !0,\n      inside: {\n        interpolation: {\n          pattern: /\\${[^}]+}/,\n          inside: {\n            \"interpolation-punctuation\": {\n              pattern: /^\\${|}$/,\n              alias: \"punctuation\"\n            },\n            rest: null\n          }\n        },\n        string: /[\\s\\S]+/\n      }\n    }\n  }), n.languages.javascript[\"template-string\"].inside.interpolation.inside.rest = n.languages.javascript, n.languages.markup && n.languages.insertBefore(\"markup\", \"tag\", {\n    script: {\n      pattern: /(<script[\\s\\S]*?>)[\\s\\S]*?(?=<\\/script>)/i,\n      lookbehind: !0,\n      inside: n.languages.javascript,\n      alias: \"language-javascript\",\n      greedy: !0\n    }\n  }), n.languages.js = n.languages.javascript, \"undefined\" != typeof self && self.Prism && self.document && document.querySelector && (self.Prism.fileHighlight = function () {\n    var e = {\n      js: \"javascript\",\n      py: \"python\",\n      rb: \"ruby\",\n      ps1: \"powershell\",\n      psm1: \"powershell\",\n      sh: \"bash\",\n      bat: \"batch\",\n      h: \"c\",\n      tex: \"latex\"\n    };\n    Array.prototype.slice.call(document.querySelectorAll(\"pre[data-src]\")).forEach(function (t) {\n      for (var a, i = t.getAttribute(\"data-src\"), r = t, o = /\\blang(?:uage)?-([\\w-]+)\\b/i; r && !o.test(r.className);) {\n        r = r.parentNode;\n      }\n\n      if (r && (a = (t.className.match(o) || [, \"\"])[1]), !a) {\n        var s = (i.match(/\\.(\\w+)$/) || [, \"\"])[1];\n        a = e[s] || s;\n      }\n\n      var l = document.createElement(\"code\");\n      l.className = \"language-\" + a, t.textContent = \"\", l.textContent = \"Loading…\", t.appendChild(l);\n      var d = new XMLHttpRequest();\n      d.open(\"GET\", i, !0), d.onreadystatechange = function () {\n        4 == d.readyState && (d.status < 400 && d.responseText ? (l.textContent = d.responseText, n.highlightElement(l)) : l.textContent = d.status >= 400 ? \"✖ Error \" + d.status + \" while fetching file: \" + d.statusText : \"✖ Error: File does not exist or is empty\");\n      }, d.send(null);\n    }), n.plugins.toolbar && n.plugins.toolbar.registerButton(\"download-file\", function (e) {\n      var t = e.element.parentNode;\n\n      if (t && /pre/i.test(t.nodeName) && t.hasAttribute(\"data-src\") && t.hasAttribute(\"data-download-link\")) {\n        var n = t.getAttribute(\"data-src\"),\n            a = document.createElement(\"a\");\n        return a.textContent = t.getAttribute(\"data-download-link-label\") || \"Download\", a.setAttribute(\"download\", \"\"), a.href = n, a;\n      }\n    });\n  }, document.addEventListener(\"DOMContentLoaded\", self.Prism.fileHighlight));\n});\nPrism.languages.abap = {\n  comment: /^\\*.*/m,\n  string: /(`|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/m,\n  \"string-template\": {\n    pattern: /([|}])(?:\\\\.|[^\\\\|{\\r\\n])*(?=[|{])/,\n    lookbehind: !0,\n    alias: \"string\"\n  },\n  \"eol-comment\": {\n    pattern: /(^|\\s)\".*/m,\n    lookbehind: !0,\n    alias: \"comment\"\n  },\n  keyword: {\n    pattern: /(\\s|\\.|^)(?:SCIENTIFIC_WITH_LEADING_ZERO|SCALE_PRESERVING_SCIENTIFIC|RMC_COMMUNICATION_FAILURE|END-ENHANCEMENT-SECTION|MULTIPLY-CORRESPONDING|SUBTRACT-CORRESPONDING|VERIFICATION-MESSAGE|DIVIDE-CORRESPONDING|ENHANCEMENT-SECTION|CURRENCY_CONVERSION|RMC_SYSTEM_FAILURE|START-OF-SELECTION|MOVE-CORRESPONDING|RMC_INVALID_STATUS|CUSTOMER-FUNCTION|END-OF-DEFINITION|ENHANCEMENT-POINT|SYSTEM-EXCEPTIONS|ADD-CORRESPONDING|SCALE_PRESERVING|SELECTION-SCREEN|CURSOR-SELECTION|END-OF-SELECTION|LOAD-OF-PROGRAM|SCROLL-BOUNDARY|SELECTION-TABLE|EXCEPTION-TABLE|IMPLEMENTATIONS|PARAMETER-TABLE|RIGHT-JUSTIFIED|UNIT_CONVERSION|AUTHORITY-CHECK|LIST-PROCESSING|SIGN_AS_POSTFIX|COL_BACKGROUND|IMPLEMENTATION|INTERFACE-POOL|TRANSFORMATION|IDENTIFICATION|ENDENHANCEMENT|LINE-SELECTION|INITIALIZATION|LEFT-JUSTIFIED|SELECT-OPTIONS|SELECTION-SETS|COMMUNICATION|CORRESPONDING|DECIMAL_SHIFT|PRINT-CONTROL|VALUE-REQUEST|CHAIN-REQUEST|FUNCTION-POOL|FIELD-SYMBOLS|FUNCTIONALITY|INVERTED-DATE|SELECTION-SET|CLASS-METHODS|OUTPUT-LENGTH|CLASS-CODING|COL_NEGATIVE|ERRORMESSAGE|FIELD-GROUPS|HELP-REQUEST|NO-EXTENSION|NO-TOPOFPAGE|REDEFINITION|DISPLAY-MODE|ENDINTERFACE|EXIT-COMMAND|FIELD-SYMBOL|NO-SCROLLING|SHORTDUMP-ID|ACCESSPOLICY|CLASS-EVENTS|COL_POSITIVE|DECLARATIONS|ENHANCEMENTS|FILTER-TABLE|SWITCHSTATES|SYNTAX-CHECK|TRANSPORTING|ASYNCHRONOUS|SYNTAX-TRACE|TOKENIZATION|USER-COMMAND|WITH-HEADING|ABAP-SOURCE|BREAK-POINT|CHAIN-INPUT|COMPRESSION|FIXED-POINT|NEW-SECTION|NON-UNICODE|OCCURRENCES|RESPONSIBLE|SYSTEM-CALL|TRACE-TABLE|ABBREVIATED|CHAR-TO-HEX|END-OF-FILE|ENDFUNCTION|ENVIRONMENT|ASSOCIATION|COL_HEADING|EDITOR-CALL|END-OF-PAGE|ENGINEERING|IMPLEMENTED|INTENSIFIED|RADIOBUTTON|SYSTEM-EXIT|TOP-OF-PAGE|TRANSACTION|APPLICATION|CONCATENATE|DESTINATION|ENHANCEMENT|IMMEDIATELY|NO-GROUPING|PRECOMPILED|REPLACEMENT|TITLE-LINES|ACTIVATION|BYTE-ORDER|CLASS-POOL|CONNECTION|CONVERSION|DEFINITION|DEPARTMENT|EXPIRATION|INHERITING|MESSAGE-ID|NO-HEADING|PERFORMING|QUEUE-ONLY|RIGHTSPACE|SCIENTIFIC|STATUSINFO|STRUCTURES|SYNCPOINTS|WITH-TITLE|ATTRIBUTES|BOUNDARIES|CLASS-DATA|COL_NORMAL|DD\\/MM\\/YYYY|DESCENDING|INTERFACES|LINE-COUNT|MM\\/DD\\/YYYY|NON-UNIQUE|PRESERVING|SELECTIONS|STATEMENTS|SUBROUTINE|TRUNCATION|TYPE-POOLS|ARITHMETIC|BACKGROUND|ENDPROVIDE|EXCEPTIONS|IDENTIFIER|INDEX-LINE|OBLIGATORY|PARAMETERS|PERCENTAGE|PUSHBUTTON|RESOLUTION|COMPONENTS|DEALLOCATE|DISCONNECT|DUPLICATES|FIRST-LINE|HEAD-LINES|NO-DISPLAY|OCCURRENCE|RESPECTING|RETURNCODE|SUBMATCHES|TRACE-FILE|ASCENDING|BYPASSING|ENDMODULE|EXCEPTION|EXCLUDING|EXPORTING|INCREMENT|MATCHCODE|PARAMETER|PARTIALLY|PREFERRED|REFERENCE|REPLACING|RETURNING|SELECTION|SEPARATED|SPECIFIED|STATEMENT|TIMESTAMP|TYPE-POOL|ACCEPTING|APPENDAGE|ASSIGNING|COL_GROUP|COMPARING|CONSTANTS|DANGEROUS|IMPORTING|INSTANCES|LEFTSPACE|LOG-POINT|QUICKINFO|READ-ONLY|SCROLLING|SQLSCRIPT|STEP-LOOP|TOP-LINES|TRANSLATE|APPENDING|AUTHORITY|CHARACTER|COMPONENT|CONDITION|DIRECTORY|DUPLICATE|MESSAGING|RECEIVING|SUBSCREEN|ACCORDING|COL_TOTAL|END-LINES|ENDMETHOD|ENDSELECT|EXPANDING|EXTENSION|INCLUDING|INFOTYPES|INTERFACE|INTERVALS|LINE-SIZE|PF-STATUS|PROCEDURE|PROTECTED|REQUESTED|RESUMABLE|RIGHTPLUS|SAP-SPOOL|SECONDARY|STRUCTURE|SUBSTRING|TABLEVIEW|NUMOFCHAR|ADJACENT|ANALYSIS|ASSIGNED|BACKWARD|CHANNELS|CHECKBOX|CONTINUE|CRITICAL|DATAINFO|DD\\/MM\\/YY|DURATION|ENCODING|ENDCLASS|FUNCTION|LEFTPLUS|LINEFEED|MM\\/DD\\/YY|OVERFLOW|RECEIVED|SKIPPING|SORTABLE|STANDARD|SUBTRACT|SUPPRESS|TABSTRIP|TITLEBAR|TRUNCATE|UNASSIGN|WHENEVER|ANALYZER|COALESCE|COMMENTS|CONDENSE|DECIMALS|DEFERRED|ENDWHILE|EXPLICIT|KEYWORDS|MESSAGES|POSITION|PRIORITY|RECEIVER|RENAMING|TIMEZONE|TRAILING|ALLOCATE|CENTERED|CIRCULAR|CONTROLS|CURRENCY|DELETING|DESCRIBE|DISTANCE|ENDCATCH|EXPONENT|EXTENDED|GENERATE|IGNORING|INCLUDES|INTERNAL|MAJOR-ID|MODIFIER|NEW-LINE|OPTIONAL|PROPERTY|ROLLBACK|STARTING|SUPPLIED|ABSTRACT|CHANGING|CONTEXTS|CREATING|CUSTOMER|DATABASE|DAYLIGHT|DEFINING|DISTINCT|DIVISION|ENABLING|ENDCHAIN|ESCAPING|HARMLESS|IMPLICIT|INACTIVE|LANGUAGE|MINOR-ID|MULTIPLY|NEW-PAGE|NO-TITLE|POS_HIGH|SEPARATE|TEXTPOOL|TRANSFER|SELECTOR|DBMAXLEN|ITERATOR|SELECTOR|ARCHIVE|BIT-XOR|BYTE-CO|COLLECT|COMMENT|CURRENT|DEFAULT|DISPLAY|ENDFORM|EXTRACT|LEADING|LISTBOX|LOCATOR|MEMBERS|METHODS|NESTING|POS_LOW|PROCESS|PROVIDE|RAISING|RESERVE|SECONDS|SUMMARY|VISIBLE|BETWEEN|BIT-AND|BYTE-CS|CLEANUP|COMPUTE|CONTROL|CONVERT|DATASET|ENDCASE|FORWARD|HEADERS|HOTSPOT|INCLUDE|INVERSE|KEEPING|NO-ZERO|OBJECTS|OVERLAY|PADDING|PATTERN|PROGRAM|REFRESH|SECTION|SUMMING|TESTING|VERSION|WINDOWS|WITHOUT|BIT-NOT|BYTE-CA|BYTE-NA|CASTING|CONTEXT|COUNTRY|DYNAMIC|ENABLED|ENDLOOP|EXECUTE|FRIENDS|HANDLER|HEADING|INITIAL|\\*-INPUT|LOGFILE|MAXIMUM|MINIMUM|NO-GAPS|NO-SIGN|PRAGMAS|PRIMARY|PRIVATE|REDUCED|REPLACE|REQUEST|RESULTS|UNICODE|WARNING|ALIASES|BYTE-CN|BYTE-NS|CALLING|COL_KEY|COLUMNS|CONNECT|ENDEXEC|ENTRIES|EXCLUDE|FILTERS|FURTHER|HELP-ID|LOGICAL|MAPPING|MESSAGE|NAMETAB|OPTIONS|PACKAGE|PERFORM|RECEIVE|STATICS|VARYING|BINDING|CHARLEN|GREATER|XSTRLEN|ACCEPT|APPEND|DETAIL|ELSEIF|ENDING|ENDTRY|FORMAT|FRAMES|GIVING|HASHED|HEADER|IMPORT|INSERT|MARGIN|MODULE|NATIVE|OBJECT|OFFSET|REMOTE|RESUME|SAVING|SIMPLE|SUBMIT|TABBED|TOKENS|UNIQUE|UNPACK|UPDATE|WINDOW|YELLOW|ACTUAL|ASPECT|CENTER|CURSOR|DELETE|DIALOG|DIVIDE|DURING|ERRORS|EVENTS|EXTEND|FILTER|HANDLE|HAVING|IGNORE|LITTLE|MEMORY|NO-GAP|OCCURS|OPTION|PERSON|PLACES|PUBLIC|REDUCE|REPORT|RESULT|SINGLE|SORTED|SWITCH|SYNTAX|TARGET|VALUES|WRITER|ASSERT|BLOCKS|BOUNDS|BUFFER|CHANGE|COLUMN|COMMIT|CONCAT|COPIES|CREATE|DDMMYY|DEFINE|ENDIAN|ESCAPE|EXPAND|KERNEL|LAYOUT|LEGACY|LEVELS|MMDDYY|NUMBER|OUTPUT|RANGES|READER|RETURN|SCREEN|SEARCH|SELECT|SHARED|SOURCE|STABLE|STATIC|SUBKEY|SUFFIX|TABLES|UNWIND|YYMMDD|ASSIGN|BACKUP|BEFORE|BINARY|BIT-OR|BLANKS|CLIENT|CODING|COMMON|DEMAND|DYNPRO|EXCEPT|EXISTS|EXPORT|FIELDS|GLOBAL|GROUPS|LENGTH|LOCALE|MEDIUM|METHOD|MODIFY|NESTED|OTHERS|REJECT|SCROLL|SUPPLY|SYMBOL|ENDFOR|STRLEN|ALIGN|BEGIN|BOUND|ENDAT|ENTRY|EVENT|FINAL|FLUSH|GRANT|INNER|SHORT|USING|WRITE|AFTER|BLACK|BLOCK|CLOCK|COLOR|COUNT|DUMMY|EMPTY|ENDDO|ENDON|GREEN|INDEX|INOUT|LEAVE|LEVEL|LINES|MODIF|ORDER|OUTER|RANGE|RESET|RETRY|RIGHT|SMART|SPLIT|STYLE|TABLE|THROW|UNDER|UNTIL|UPPER|UTF-8|WHERE|ALIAS|BLANK|CLEAR|CLOSE|EXACT|FETCH|FIRST|FOUND|GROUP|LLANG|LOCAL|OTHER|REGEX|SPOOL|TITLE|TYPES|VALID|WHILE|ALPHA|BOXED|CATCH|CHAIN|CHECK|CLASS|COVER|ENDIF|EQUIV|FIELD|FLOOR|FRAME|INPUT|LOWER|MATCH|NODES|PAGES|PRINT|RAISE|ROUND|SHIFT|SPACE|SPOTS|STAMP|STATE|TASKS|TIMES|TRMAC|ULINE|UNION|VALUE|WIDTH|EQUAL|LOG10|TRUNC|BLOB|CASE|CEIL|CLOB|COND|EXIT|FILE|GAPS|HOLD|INCL|INTO|KEEP|KEYS|LAST|LINE|LONG|LPAD|MAIL|MODE|OPEN|PINK|READ|ROWS|TEST|THEN|ZERO|AREA|BACK|BADI|BYTE|CAST|EDIT|EXEC|FAIL|FIND|FKEQ|FONT|FREE|GKEQ|HIDE|INIT|ITNO|LATE|LOOP|MAIN|MARK|MOVE|NEXT|NULL|RISK|ROLE|UNIT|WAIT|ZONE|BASE|CALL|CODE|DATA|DATE|FKGE|GKGE|HIGH|KIND|LEFT|LIST|MASK|MESH|NAME|NODE|PACK|PAGE|POOL|SEND|SIGN|SIZE|SOME|STOP|TASK|TEXT|TIME|USER|VARY|WITH|WORD|BLUE|CONV|COPY|DEEP|ELSE|FORM|FROM|HINT|ICON|JOIN|LIKE|LOAD|ONLY|PART|SCAN|SKIP|SORT|TYPE|UNIX|VIEW|WHEN|WORK|ACOS|ASIN|ATAN|COSH|EACH|FRAC|LESS|RTTI|SINH|SQRT|TANH|AVG|BIT|DIV|ISO|LET|OUT|PAD|SQL|ALL|CI_|CPI|END|LOB|LPI|MAX|MIN|NEW|OLE|RUN|SET|\\?TO|YES|ABS|ADD|AND|BIG|FOR|HDB|JOB|LOW|NOT|SAP|TRY|VIA|XML|ANY|GET|IDS|KEY|MOD|OFF|PUT|RAW|RED|REF|SUM|TAB|XSD|CNT|COS|EXP|LOG|SIN|TAN|XOR|AT|CO|CP|DO|GT|ID|IF|NS|OR|BT|CA|CS|GE|NA|NB|EQ|IN|LT|NE|NO|OF|ON|PF|TO|AS|BY|CN|IS|LE|NP|UP|E|I|M|O|Z|C|X)\\b/i,\n    lookbehind: !0\n  },\n  number: /\\b\\d+\\b/,\n  operator: {\n    pattern: /(\\s)(?:\\*\\*?|<[=>]?|>=?|\\?=|[-+\\/=])(?=\\s)/,\n    lookbehind: !0\n  },\n  \"string-operator\": {\n    pattern: /(\\s)&&?(?=\\s)/,\n    lookbehind: !0,\n    alias: \"keyword\"\n  },\n  \"token-operator\": [{\n    pattern: /(\\w)(?:->?|=>|[~|{}])(?=\\w)/,\n    lookbehind: !0,\n    alias: \"punctuation\"\n  }, {\n    pattern: /[|{}]/,\n    alias: \"punctuation\"\n  }],\n  punctuation: /[,.:()]/\n}, Prism.languages.actionscript = Prism.languages.extend(\"javascript\", {\n  keyword: /\\b(?:as|break|case|catch|class|const|default|delete|do|else|extends|finally|for|function|if|implements|import|in|instanceof|interface|internal|is|native|new|null|package|private|protected|public|return|super|switch|this|throw|try|typeof|use|var|void|while|with|dynamic|each|final|get|include|namespace|native|override|set|static)\\b/,\n  operator: /\\+\\+|--|(?:[+\\-*\\/%^]|&&?|\\|\\|?|<<?|>>?>?|[!=]=?)=?|[~?@]/\n}), Prism.languages.actionscript[\"class-name\"].alias = \"function\", Prism.languages.markup && Prism.languages.insertBefore(\"actionscript\", \"string\", {\n  xml: {\n    pattern: /(^|[^.])<\\/?\\w+(?:\\s+[^\\s>\\/=]+=(\"|')(?:\\\\[\\s\\S]|(?!\\2)[^\\\\])*\\2)*\\s*\\/?>/,\n    lookbehind: !0,\n    inside: {\n      rest: Prism.languages.markup\n    }\n  }\n}), Prism.languages.ada = {\n  comment: /--.*/,\n  string: /\"(?:\"\"|[^\"\\r\\f\\n])*\"/i,\n  number: [{\n    pattern: /\\b\\d(?:_?\\d)*#[\\dA-F](?:_?[\\dA-F])*(?:\\.[\\dA-F](?:_?[\\dA-F])*)?#(?:E[+-]?\\d(?:_?\\d)*)?/i\n  }, {\n    pattern: /\\b\\d(?:_?\\d)*(?:\\.\\d(?:_?\\d)*)?(?:E[+-]?\\d(?:_?\\d)*)?\\b/i\n  }],\n  \"attr-name\": /\\b'\\w+/i,\n  keyword: /\\b(?:abort|abs|abstract|accept|access|aliased|all|and|array|at|begin|body|case|constant|declare|delay|delta|digits|do|else|new|return|elsif|end|entry|exception|exit|for|function|generic|goto|if|in|interface|is|limited|loop|mod|not|null|of|others|out|overriding|package|pragma|private|procedure|protected|raise|range|record|rem|renames|requeue|reverse|select|separate|some|subtype|synchronized|tagged|task|terminate|then|type|until|use|when|while|with|xor)\\b/i,\n  boolean: /\\b(?:true|false)\\b/i,\n  operator: /<[=>]?|>=?|=>?|:=|\\/=?|\\*\\*?|[&+-]/,\n  punctuation: /\\.\\.?|[,;():]/,\n  char: /'.'/,\n  variable: /\\b[a-z](?:[_a-z\\d])*\\b/i\n}, Prism.languages.apacheconf = {\n  comment: /#.*/,\n  \"directive-inline\": {\n    pattern: /^(\\s*)\\b(?:AcceptFilter|AcceptPathInfo|AccessFileName|Action|AddAlt|AddAltByEncoding|AddAltByType|AddCharset|AddDefaultCharset|AddDescription|AddEncoding|AddHandler|AddIcon|AddIconByEncoding|AddIconByType|AddInputFilter|AddLanguage|AddModuleInfo|AddOutputFilter|AddOutputFilterByType|AddType|Alias|AliasMatch|Allow|AllowCONNECT|AllowEncodedSlashes|AllowMethods|AllowOverride|AllowOverrideList|Anonymous|Anonymous_LogEmail|Anonymous_MustGiveEmail|Anonymous_NoUserID|Anonymous_VerifyEmail|AsyncRequestWorkerFactor|AuthBasicAuthoritative|AuthBasicFake|AuthBasicProvider|AuthBasicUseDigestAlgorithm|AuthDBDUserPWQuery|AuthDBDUserRealmQuery|AuthDBMGroupFile|AuthDBMType|AuthDBMUserFile|AuthDigestAlgorithm|AuthDigestDomain|AuthDigestNonceLifetime|AuthDigestProvider|AuthDigestQop|AuthDigestShmemSize|AuthFormAuthoritative|AuthFormBody|AuthFormDisableNoStore|AuthFormFakeBasicAuth|AuthFormLocation|AuthFormLoginRequiredLocation|AuthFormLoginSuccessLocation|AuthFormLogoutLocation|AuthFormMethod|AuthFormMimetype|AuthFormPassword|AuthFormProvider|AuthFormSitePassphrase|AuthFormSize|AuthFormUsername|AuthGroupFile|AuthLDAPAuthorizePrefix|AuthLDAPBindAuthoritative|AuthLDAPBindDN|AuthLDAPBindPassword|AuthLDAPCharsetConfig|AuthLDAPCompareAsUser|AuthLDAPCompareDNOnServer|AuthLDAPDereferenceAliases|AuthLDAPGroupAttribute|AuthLDAPGroupAttributeIsDN|AuthLDAPInitialBindAsUser|AuthLDAPInitialBindPattern|AuthLDAPMaxSubGroupDepth|AuthLDAPRemoteUserAttribute|AuthLDAPRemoteUserIsDN|AuthLDAPSearchAsUser|AuthLDAPSubGroupAttribute|AuthLDAPSubGroupClass|AuthLDAPUrl|AuthMerging|AuthName|AuthnCacheContext|AuthnCacheEnable|AuthnCacheProvideFor|AuthnCacheSOCache|AuthnCacheTimeout|AuthnzFcgiCheckAuthnProvider|AuthnzFcgiDefineProvider|AuthType|AuthUserFile|AuthzDBDLoginToReferer|AuthzDBDQuery|AuthzDBDRedirectQuery|AuthzDBMType|AuthzSendForbiddenOnFailure|BalancerGrowth|BalancerInherit|BalancerMember|BalancerPersist|BrowserMatch|BrowserMatchNoCase|BufferedLogs|BufferSize|CacheDefaultExpire|CacheDetailHeader|CacheDirLength|CacheDirLevels|CacheDisable|CacheEnable|CacheFile|CacheHeader|CacheIgnoreCacheControl|CacheIgnoreHeaders|CacheIgnoreNoLastMod|CacheIgnoreQueryString|CacheIgnoreURLSessionIdentifiers|CacheKeyBaseURL|CacheLastModifiedFactor|CacheLock|CacheLockMaxAge|CacheLockPath|CacheMaxExpire|CacheMaxFileSize|CacheMinExpire|CacheMinFileSize|CacheNegotiatedDocs|CacheQuickHandler|CacheReadSize|CacheReadTime|CacheRoot|CacheSocache|CacheSocacheMaxSize|CacheSocacheMaxTime|CacheSocacheMinTime|CacheSocacheReadSize|CacheSocacheReadTime|CacheStaleOnError|CacheStoreExpired|CacheStoreNoStore|CacheStorePrivate|CGIDScriptTimeout|CGIMapExtension|CharsetDefault|CharsetOptions|CharsetSourceEnc|CheckCaseOnly|CheckSpelling|ChrootDir|ContentDigest|CookieDomain|CookieExpires|CookieName|CookieStyle|CookieTracking|CoreDumpDirectory|CustomLog|Dav|DavDepthInfinity|DavGenericLockDB|DavLockDB|DavMinTimeout|DBDExptime|DBDInitSQL|DBDKeep|DBDMax|DBDMin|DBDParams|DBDPersist|DBDPrepareSQL|DBDriver|DefaultIcon|DefaultLanguage|DefaultRuntimeDir|DefaultType|Define|DeflateBufferSize|DeflateCompressionLevel|DeflateFilterNote|DeflateInflateLimitRequestBody|DeflateInflateRatioBurst|DeflateInflateRatioLimit|DeflateMemLevel|DeflateWindowSize|Deny|DirectoryCheckHandler|DirectoryIndex|DirectoryIndexRedirect|DirectorySlash|DocumentRoot|DTracePrivileges|DumpIOInput|DumpIOOutput|EnableExceptionHook|EnableMMAP|EnableSendfile|Error|ErrorDocument|ErrorLog|ErrorLogFormat|Example|ExpiresActive|ExpiresByType|ExpiresDefault|ExtendedStatus|ExtFilterDefine|ExtFilterOptions|FallbackResource|FileETag|FilterChain|FilterDeclare|FilterProtocol|FilterProvider|FilterTrace|ForceLanguagePriority|ForceType|ForensicLog|GprofDir|GracefulShutdownTimeout|Group|Header|HeaderName|HeartbeatAddress|HeartbeatListen|HeartbeatMaxServers|HeartbeatStorage|HeartbeatStorage|HostnameLookups|IdentityCheck|IdentityCheckTimeout|ImapBase|ImapDefault|ImapMenu|Include|IncludeOptional|IndexHeadInsert|IndexIgnore|IndexIgnoreReset|IndexOptions|IndexOrderDefault|IndexStyleSheet|InputSed|ISAPIAppendLogToErrors|ISAPIAppendLogToQuery|ISAPICacheFile|ISAPIFakeAsync|ISAPILogNotSupported|ISAPIReadAheadBuffer|KeepAlive|KeepAliveTimeout|KeptBodySize|LanguagePriority|LDAPCacheEntries|LDAPCacheTTL|LDAPConnectionPoolTTL|LDAPConnectionTimeout|LDAPLibraryDebug|LDAPOpCacheEntries|LDAPOpCacheTTL|LDAPReferralHopLimit|LDAPReferrals|LDAPRetries|LDAPRetryDelay|LDAPSharedCacheFile|LDAPSharedCacheSize|LDAPTimeout|LDAPTrustedClientCert|LDAPTrustedGlobalCert|LDAPTrustedMode|LDAPVerifyServerCert|LimitInternalRecursion|LimitRequestBody|LimitRequestFields|LimitRequestFieldSize|LimitRequestLine|LimitXMLRequestBody|Listen|ListenBackLog|LoadFile|LoadModule|LogFormat|LogLevel|LogMessage|LuaAuthzProvider|LuaCodeCache|LuaHookAccessChecker|LuaHookAuthChecker|LuaHookCheckUserID|LuaHookFixups|LuaHookInsertFilter|LuaHookLog|LuaHookMapToStorage|LuaHookTranslateName|LuaHookTypeChecker|LuaInherit|LuaInputFilter|LuaMapHandler|LuaOutputFilter|LuaPackageCPath|LuaPackagePath|LuaQuickHandler|LuaRoot|LuaScope|MaxConnectionsPerChild|MaxKeepAliveRequests|MaxMemFree|MaxRangeOverlaps|MaxRangeReversals|MaxRanges|MaxRequestWorkers|MaxSpareServers|MaxSpareThreads|MaxThreads|MergeTrailers|MetaDir|MetaFiles|MetaSuffix|MimeMagicFile|MinSpareServers|MinSpareThreads|MMapFile|ModemStandard|ModMimeUsePathInfo|MultiviewsMatch|Mutex|NameVirtualHost|NoProxy|NWSSLTrustedCerts|NWSSLUpgradeable|Options|Order|OutputSed|PassEnv|PidFile|PrivilegesMode|Protocol|ProtocolEcho|ProxyAddHeaders|ProxyBadHeader|ProxyBlock|ProxyDomain|ProxyErrorOverride|ProxyExpressDBMFile|ProxyExpressDBMType|ProxyExpressEnable|ProxyFtpDirCharset|ProxyFtpEscapeWildcards|ProxyFtpListOnWildcard|ProxyHTMLBufSize|ProxyHTMLCharsetOut|ProxyHTMLDocType|ProxyHTMLEnable|ProxyHTMLEvents|ProxyHTMLExtended|ProxyHTMLFixups|ProxyHTMLInterp|ProxyHTMLLinks|ProxyHTMLMeta|ProxyHTMLStripComments|ProxyHTMLURLMap|ProxyIOBufferSize|ProxyMaxForwards|ProxyPass|ProxyPassInherit|ProxyPassInterpolateEnv|ProxyPassMatch|ProxyPassReverse|ProxyPassReverseCookieDomain|ProxyPassReverseCookiePath|ProxyPreserveHost|ProxyReceiveBufferSize|ProxyRemote|ProxyRemoteMatch|ProxyRequests|ProxySCGIInternalRedirect|ProxySCGISendfile|ProxySet|ProxySourceAddress|ProxyStatus|ProxyTimeout|ProxyVia|ReadmeName|ReceiveBufferSize|Redirect|RedirectMatch|RedirectPermanent|RedirectTemp|ReflectorHeader|RemoteIPHeader|RemoteIPInternalProxy|RemoteIPInternalProxyList|RemoteIPProxiesHeader|RemoteIPTrustedProxy|RemoteIPTrustedProxyList|RemoveCharset|RemoveEncoding|RemoveHandler|RemoveInputFilter|RemoveLanguage|RemoveOutputFilter|RemoveType|RequestHeader|RequestReadTimeout|Require|RewriteBase|RewriteCond|RewriteEngine|RewriteMap|RewriteOptions|RewriteRule|RLimitCPU|RLimitMEM|RLimitNPROC|Satisfy|ScoreBoardFile|Script|ScriptAlias|ScriptAliasMatch|ScriptInterpreterSource|ScriptLog|ScriptLogBuffer|ScriptLogLength|ScriptSock|SecureListen|SeeRequestTail|SendBufferSize|ServerAdmin|ServerAlias|ServerLimit|ServerName|ServerPath|ServerRoot|ServerSignature|ServerTokens|Session|SessionCookieName|SessionCookieName2|SessionCookieRemove|SessionCryptoCipher|SessionCryptoDriver|SessionCryptoPassphrase|SessionCryptoPassphraseFile|SessionDBDCookieName|SessionDBDCookieName2|SessionDBDCookieRemove|SessionDBDDeleteLabel|SessionDBDInsertLabel|SessionDBDPerUser|SessionDBDSelectLabel|SessionDBDUpdateLabel|SessionEnv|SessionExclude|SessionHeader|SessionInclude|SessionMaxAge|SetEnv|SetEnvIf|SetEnvIfExpr|SetEnvIfNoCase|SetHandler|SetInputFilter|SetOutputFilter|SSIEndTag|SSIErrorMsg|SSIETag|SSILastModified|SSILegacyExprParser|SSIStartTag|SSITimeFormat|SSIUndefinedEcho|SSLCACertificateFile|SSLCACertificatePath|SSLCADNRequestFile|SSLCADNRequestPath|SSLCARevocationCheck|SSLCARevocationFile|SSLCARevocationPath|SSLCertificateChainFile|SSLCertificateFile|SSLCertificateKeyFile|SSLCipherSuite|SSLCompression|SSLCryptoDevice|SSLEngine|SSLFIPS|SSLHonorCipherOrder|SSLInsecureRenegotiation|SSLOCSPDefaultResponder|SSLOCSPEnable|SSLOCSPOverrideResponder|SSLOCSPResponderTimeout|SSLOCSPResponseMaxAge|SSLOCSPResponseTimeSkew|SSLOCSPUseRequestNonce|SSLOpenSSLConfCmd|SSLOptions|SSLPassPhraseDialog|SSLProtocol|SSLProxyCACertificateFile|SSLProxyCACertificatePath|SSLProxyCARevocationCheck|SSLProxyCARevocationFile|SSLProxyCARevocationPath|SSLProxyCheckPeerCN|SSLProxyCheckPeerExpire|SSLProxyCheckPeerName|SSLProxyCipherSuite|SSLProxyEngine|SSLProxyMachineCertificateChainFile|SSLProxyMachineCertificateFile|SSLProxyMachineCertificatePath|SSLProxyProtocol|SSLProxyVerify|SSLProxyVerifyDepth|SSLRandomSeed|SSLRenegBufferSize|SSLRequire|SSLRequireSSL|SSLSessionCache|SSLSessionCacheTimeout|SSLSessionTicketKeyFile|SSLSRPUnknownUserSeed|SSLSRPVerifierFile|SSLStaplingCache|SSLStaplingErrorCacheTimeout|SSLStaplingFakeTryLater|SSLStaplingForceURL|SSLStaplingResponderTimeout|SSLStaplingResponseMaxAge|SSLStaplingResponseTimeSkew|SSLStaplingReturnResponderErrors|SSLStaplingStandardCacheTimeout|SSLStrictSNIVHostCheck|SSLUserName|SSLUseStapling|SSLVerifyClient|SSLVerifyDepth|StartServers|StartThreads|Substitute|Suexec|SuexecUserGroup|ThreadLimit|ThreadsPerChild|ThreadStackSize|TimeOut|TraceEnable|TransferLog|TypesConfig|UnDefine|UndefMacro|UnsetEnv|Use|UseCanonicalName|UseCanonicalPhysicalPort|User|UserDir|VHostCGIMode|VHostCGIPrivs|VHostGroup|VHostPrivs|VHostSecure|VHostUser|VirtualDocumentRoot|VirtualDocumentRootIP|VirtualScriptAlias|VirtualScriptAliasIP|WatchdogInterval|XBitHack|xml2EncAlias|xml2EncDefault|xml2StartParse)\\b/im,\n    lookbehind: !0,\n    alias: \"property\"\n  },\n  \"directive-block\": {\n    pattern: /<\\/?\\b(?:AuthnProviderAlias|AuthzProviderAlias|Directory|DirectoryMatch|Else|ElseIf|Files|FilesMatch|If|IfDefine|IfModule|IfVersion|Limit|LimitExcept|Location|LocationMatch|Macro|Proxy|RequireAll|RequireAny|RequireNone|VirtualHost)\\b *.*>/i,\n    inside: {\n      \"directive-block\": {\n        pattern: /^<\\/?\\w+/,\n        inside: {\n          punctuation: /^<\\/?/\n        },\n        alias: \"tag\"\n      },\n      \"directive-block-parameter\": {\n        pattern: /.*[^>]/,\n        inside: {\n          punctuation: /:/,\n          string: {\n            pattern: /(\"|').*\\1/,\n            inside: {\n              variable: /[$%]\\{?(?:\\w\\.?[-+:]?)+\\}?/\n            }\n          }\n        },\n        alias: \"attr-value\"\n      },\n      punctuation: />/\n    },\n    alias: \"tag\"\n  },\n  \"directive-flags\": {\n    pattern: /\\[(?:\\w,?)+\\]/,\n    alias: \"keyword\"\n  },\n  string: {\n    pattern: /(\"|').*\\1/,\n    inside: {\n      variable: /[$%]\\{?(?:\\w\\.?[-+:]?)+\\}?/\n    }\n  },\n  variable: /[$%]\\{?(?:\\w\\.?[-+:]?)+\\}?/,\n  regex: /\\^?.*\\$|\\^.*\\$?/\n}, Prism.languages.apl = {\n  comment: /(?:⍝|#[! ]).*$/m,\n  string: {\n    pattern: /'(?:[^'\\r\\n]|'')*'/,\n    greedy: !0\n  },\n  number: /¯?(?:\\d*\\.?\\d+(?:e[+¯]?\\d+)?|¯|∞)(?:j¯?(?:\\d*\\.?\\d+(?:e[+¯]?\\d+)?|¯|∞))?/i,\n  statement: /:[A-Z][a-z][A-Za-z]*\\b/,\n  \"system-function\": {\n    pattern: /⎕[A-Z]+/i,\n    alias: \"function\"\n  },\n  constant: /[⍬⌾#⎕⍞]/,\n  function: /[-+×÷⌈⌊∣|⍳⍸?*⍟○!⌹<≤=>≥≠≡≢∊⍷∪∩~∨∧⍱⍲⍴,⍪⌽⊖⍉↑↓⊂⊃⊆⊇⌷⍋⍒⊤⊥⍕⍎⊣⊢⍁⍂≈⍯↗¤→]/,\n  \"monadic-operator\": {\n    pattern: /[\\\\\\/⌿⍀¨⍨⌶&∥]/,\n    alias: \"operator\"\n  },\n  \"dyadic-operator\": {\n    pattern: /[.⍣⍠⍤∘⌸@⌺]/,\n    alias: \"operator\"\n  },\n  assignment: {\n    pattern: /←/,\n    alias: \"keyword\"\n  },\n  punctuation: /[\\[;\\]()◇⋄]/,\n  dfn: {\n    pattern: /[{}⍺⍵⍶⍹∇⍫:]/,\n    alias: \"builtin\"\n  }\n}, Prism.languages.applescript = {\n  comment: [/\\(\\*(?:\\(\\*[\\s\\S]*?\\*\\)|[\\s\\S])*?\\*\\)/, /--.+/, /#.+/],\n  string: /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"/,\n  number: /(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e-?\\d+)?\\b/i,\n  operator: [/[&=≠≤≥*+\\-\\/÷^]|[<>]=?/, /\\b(?:(?:start|begin|end)s? with|(?:(?:does not|doesn't) contain|contains?)|(?:is|isn't|is not) (?:in|contained by)|(?:(?:is|isn't|is not) )?(?:greater|less) than(?: or equal)?(?: to)?|(?:(?:does not|doesn't) come|comes) (?:before|after)|(?:is|isn't|is not) equal(?: to)?|(?:(?:does not|doesn't) equal|equals|equal to|isn't|is not)|(?:a )?(?:ref(?: to)?|reference to)|(?:and|or|div|mod|as|not))\\b/],\n  keyword: /\\b(?:about|above|after|against|apart from|around|aside from|at|back|before|beginning|behind|below|beneath|beside|between|but|by|considering|continue|copy|does|eighth|else|end|equal|error|every|exit|false|fifth|first|for|fourth|from|front|get|given|global|if|ignoring|in|instead of|into|is|it|its|last|local|me|middle|my|ninth|of|on|onto|out of|over|prop|property|put|repeat|return|returning|second|set|seventh|since|sixth|some|tell|tenth|that|the|then|third|through|thru|timeout|times|to|transaction|true|try|until|where|while|whose|with|without)\\b/,\n  class: {\n    pattern: /\\b(?:alias|application|boolean|class|constant|date|file|integer|list|number|POSIX file|real|record|reference|RGB color|script|text|centimetres|centimeters|feet|inches|kilometres|kilometers|metres|meters|miles|yards|square feet|square kilometres|square kilometers|square metres|square meters|square miles|square yards|cubic centimetres|cubic centimeters|cubic feet|cubic inches|cubic metres|cubic meters|cubic yards|gallons|litres|liters|quarts|grams|kilograms|ounces|pounds|degrees Celsius|degrees Fahrenheit|degrees Kelvin)\\b/,\n    alias: \"builtin\"\n  },\n  punctuation: /[{}():,¬«»《》]/\n}, Prism.languages.c = Prism.languages.extend(\"clike\", {\n  keyword: /\\b(?:_Alignas|_Alignof|_Atomic|_Bool|_Complex|_Generic|_Imaginary|_Noreturn|_Static_assert|_Thread_local|asm|typeof|inline|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|union|unsigned|void|volatile|while)\\b/,\n  operator: /-[>-]?|\\+\\+?|!=?|<<?=?|>>?=?|==?|&&?|\\|\\|?|[~^%?*\\/]/,\n  number: /(?:\\b0x[\\da-f]+|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?)[ful]*/i\n}), Prism.languages.insertBefore(\"c\", \"string\", {\n  macro: {\n    pattern: /(^\\s*)#\\s*[a-z]+(?:[^\\r\\n\\\\]|\\\\(?:\\r\\n|[\\s\\S]))*/im,\n    lookbehind: !0,\n    alias: \"property\",\n    inside: {\n      string: {\n        pattern: /(#\\s*include\\s*)(?:<.+?>|(\"|')(?:\\\\?.)+?\\2)/,\n        lookbehind: !0\n      },\n      directive: {\n        pattern: /(#\\s*)\\b(?:define|defined|elif|else|endif|error|ifdef|ifndef|if|import|include|line|pragma|undef|using)\\b/,\n        lookbehind: !0,\n        alias: \"keyword\"\n      }\n    }\n  },\n  constant: /\\b(?:__FILE__|__LINE__|__DATE__|__TIME__|__TIMESTAMP__|__func__|EOF|NULL|SEEK_CUR|SEEK_END|SEEK_SET|stdin|stdout|stderr)\\b/\n}), delete Prism.languages.c[\"class-name\"], delete Prism.languages.c.boolean, Prism.languages.cpp = Prism.languages.extend(\"c\", {\n  keyword: /\\b(?:alignas|alignof|asm|auto|bool|break|case|catch|char|char16_t|char32_t|class|compl|const|constexpr|const_cast|continue|decltype|default|delete|do|double|dynamic_cast|else|enum|explicit|export|extern|float|for|friend|goto|if|inline|int|int8_t|int16_t|int32_t|int64_t|uint8_t|uint16_t|uint32_t|uint64_t|long|mutable|namespace|new|noexcept|nullptr|operator|private|protected|public|register|reinterpret_cast|return|short|signed|sizeof|static|static_assert|static_cast|struct|switch|template|this|thread_local|throw|try|typedef|typeid|typename|union|unsigned|using|virtual|void|volatile|wchar_t|while)\\b/,\n  boolean: /\\b(?:true|false)\\b/,\n  operator: /--?|\\+\\+?|!=?|<{1,2}=?|>{1,2}=?|->|:{1,2}|={1,2}|\\^|~|%|&{1,2}|\\|\\|?|\\?|\\*|\\/|\\b(?:and|and_eq|bitand|bitor|not|not_eq|or|or_eq|xor|xor_eq)\\b/\n}), Prism.languages.insertBefore(\"cpp\", \"keyword\", {\n  \"class-name\": {\n    pattern: /(class\\s+)\\w+/i,\n    lookbehind: !0\n  }\n}), Prism.languages.insertBefore(\"cpp\", \"string\", {\n  \"raw-string\": {\n    pattern: /R\"([^()\\\\ ]{0,16})\\([\\s\\S]*?\\)\\1\"/,\n    alias: \"string\",\n    greedy: !0\n  }\n}), Prism.languages.objectivec = Prism.languages.extend(\"c\", {\n  keyword: /\\b(?:asm|typeof|inline|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|union|unsigned|void|volatile|while|in|self|super)\\b|(?:@interface|@end|@implementation|@protocol|@class|@public|@protected|@private|@property|@try|@catch|@finally|@throw|@synthesize|@dynamic|@selector)\\b/,\n  string: /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1|@\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/,\n  operator: /-[->]?|\\+\\+?|!=?|<<?=?|>>?=?|==?|&&?|\\|\\|?|[~^%?*\\/@]/\n}), function (e) {\n  e.languages.opencl = e.languages.extend(\"c\", {\n    keyword: /\\b(?:__attribute__|(?:__)?(?:constant|global|kernel|local|private|read_only|read_write|write_only)|_cl_(?:command_queue|context|device_id|event|kernel|mem|platform_id|program|sampler)|auto|break|case|cl_(?:image_format|mem_fence_flags)|clk_event_t|complex|const|continue|default|do|(?:float|double)(?:16(?:x(?:1|16|2|4|8))?|1x(?:1|16|2|4|8)|2(?:x(?:1|16|2|4|8))?|3|4(?:x(?:1|16|2|4|8))?|8(?:x(?:1|16|2|4|8))?)?|else|enum|event_t|extern|for|goto|(?:u?(?:char|short|int|long)|half|quad|bool)(?:2|3|4|8|16)?|if|image(?:1d_(?:array_|buffer_)?t|2d_(?:array_(?:depth_|msaa_depth_|msaa_)?|depth_|msaa_depth_|msaa_)?t|3d_t)|imaginary|inline|intptr_t|ndrange_t|packed|pipe|ptrdiff_t|queue_t|register|reserve_id_t|restrict|return|sampler_t|signed|size_t|sizeof|static|struct|switch|typedef|uintptr_t|uniform|union|unsigned|void|volatile|while)\\b/,\n    \"function-opencl-kernel\": {\n      pattern: /\\b(?:abs(?:_diff)?|a?(?:cos|sin)(?:h|pi)?|add_sat|aligned|all|and|any|async(?:_work_group_copy|_work_group_strided_copy)?|atan(?:2?(?:pi)?|h)?|atom_(?:add|and|cmpxchg|dec|inc|max|min|or|sub|xchg|xor)|barrier|bitselect|cbrt|ceil|clamp|clz|copies|copysign|cross|degrees|distance|dot|endian|erf|erfc|exp(?:2|10)?|expm1|fabs|fast_(?:distance|length|normalize)|fdim|floor|fma|fmax|fmin|fract|frexp|fro|from|get_(?:global_(?:id|offset|size)|group_id|image_(?:channel_data_type|channel_order|depth|dim|height|width)|local(?:_id|_size)|num_groups|work_dim)|hadd|(?:half|native)_(?:cos|divide|exp(?:2|10)?|log(?:2|10)?|powr|recip|r?sqrt|sin|tan)|hypot|ilogb|is(?:equal|finite|greater(?:equal)?|inf|less(?:equal|greater)?|nan|normal|notequal|(?:un)?ordered)|ldexp|length|lgamma|lgamma_r|log(?:b|1p|2|10)?|mad(?:24|_hi|_sat)?|max|mem(?:_fence)?|min|mix|modf|mul24|mul_hi|nan|nextafter|normalize|pow[nr]?|prefetch|radians|read_(?:image)(?:f|h|u?i)|read_mem_fence|remainder|remquo|reqd_work_group_size|rhadd|rint|rootn|rotate|round|rsqrt|select|shuffle2?|sign|signbit|sincos|smoothstep|sqrt|step|sub_sat|tan|tanh|tanpi|tgamma|to|trunc|upsample|vec_(?:step|type_hint)|v(?:load|store)(?:_half)?(?:2|3|4|8|16)?|v(?:loada_half|storea?(?:_half)?)(?:2|3|4|8|16)?(?:_(?:rte|rtn|rtp|rtz))?|wait_group_events|work_group_size_hint|write_image(?:f|h|u?i)|write_mem_fence)\\b/,\n      alias: \"function\"\n    },\n    \"constant-opencl-kernel\": {\n      pattern: /\\b(?:CHAR_(?:BIT|MAX|MIN)|CLK_(?:ADDRESS_(?:CLAMP(?:_TO_EDGE)?|NONE|REPEAT)|FILTER_(?:LINEAR|NEAREST)|(?:LOCAL|GLOBAL)_MEM_FENCE|NORMALIZED_COORDS_(?:FALSE|TRUE))|CL_(?:BGRA|(?:HALF_)?FLOAT|INTENSITY|LUMINANCE|A?R?G?B?[Ax]?|(?:(?:UN)?SIGNED|[US]NORM)_(?:INT(?:8|16|32))|UNORM_(?:INT_101010|SHORT_(?:555|565)))|(?:DBL|FLT)_(?:DIG|EPSILON|MANT_DIG|(?:MIN|MAX)(?:(?:_10)?_EXP)?)|FLT_RADIX|HUGE_VALF|INFINITY|(?:INT|LONG|SCHAR|SHRT|UCHAR|UINT|ULONG)_(?:MAX|MIN)|MAXFLOAT|M_(?:[12]_PI|2_SQRTPI|E|LN(?:2|10)|LOG(?:10|2)E?|PI[24]?|SQRT(?:1_2|2))|NAN)\\b/,\n      alias: \"constant\"\n    }\n  });\n  var t = {\n    \"type-opencl-host\": {\n      pattern: /\\b(?:cl_(?:GLenum|GLint|GLuin|addressing_mode|bitfield|bool|buffer_create_type|build_status|channel_(?:order|type)|(?:u?(?:char|short|int|long)|float|double)(?:2|3|4|8|16)?|command_(?:queue(?:_info|_properties)?|type)|context(?:_info|_properties)?|device_(?:exec_capabilities|fp_config|id|info|local_mem_type|mem_cache_type|type)|(?:event|sampler)(?:_info)?|filter_mode|half|image_info|kernel(?:_info|_work_group_info)?|map_flags|mem(?:_flags|_info|_object_type)?|platform_(?:id|info)|profiling_info|program(?:_build_info|_info)?))\\b/,\n      alias: \"keyword\"\n    },\n    \"boolean-opencl-host\": {\n      pattern: /\\bCL_(?:TRUE|FALSE)\\b/,\n      alias: \"boolean\"\n    },\n    \"constant-opencl-host\": {\n      pattern: /\\bCL_(?:A|ABGR|ADDRESS_(?:CLAMP(?:_TO_EDGE)?|MIRRORED_REPEAT|NONE|REPEAT)|ARGB|BGRA|BLOCKING|BUFFER_CREATE_TYPE_REGION|BUILD_(?:ERROR|IN_PROGRESS|NONE|PROGRAM_FAILURE|SUCCESS)|COMMAND_(?:ACQUIRE_GL_OBJECTS|BARRIER|COPY_(?:BUFFER(?:_RECT|_TO_IMAGE)?|IMAGE(?:_TO_BUFFER)?)|FILL_(?:BUFFER|IMAGE)|MAP(?:_BUFFER|_IMAGE)|MARKER|MIGRATE(?:_SVM)?_MEM_OBJECTS|NATIVE_KERNEL|NDRANGE_KERNEL|READ_(?:BUFFER(?:_RECT)?|IMAGE)|RELEASE_GL_OBJECTS|SVM_(?:FREE|MAP|MEMCPY|MEMFILL|UNMAP)|TASK|UNMAP_MEM_OBJECT|USER|WRITE_(?:BUFFER(?:_RECT)?|IMAGE))|COMPILER_NOT_AVAILABLE|COMPILE_PROGRAM_FAILURE|COMPLETE|CONTEXT_(?:DEVICES|INTEROP_USER_SYNC|NUM_DEVICES|PLATFORM|PROPERTIES|REFERENCE_COUNT)|DEPTH(?:_STENCIL)?|DEVICE_(?:ADDRESS_BITS|AFFINITY_DOMAIN_(?:L[1-4]_CACHE|NEXT_PARTITIONABLE|NUMA)|AVAILABLE|BUILT_IN_KERNELS|COMPILER_AVAILABLE|DOUBLE_FP_CONFIG|ENDIAN_LITTLE|ERROR_CORRECTION_SUPPORT|EXECUTION_CAPABILITIES|EXTENSIONS|GLOBAL_(?:MEM_(?:CACHELINE_SIZE|CACHE_SIZE|CACHE_TYPE|SIZE)|VARIABLE_PREFERRED_TOTAL_SIZE)|HOST_UNIFIED_MEMORY|IL_VERSION|IMAGE(?:2D_MAX_(?:HEIGHT|WIDTH)|3D_MAX_(?:DEPTH|HEIGHT|WIDTH)|_BASE_ADDRESS_ALIGNMENT|_MAX_ARRAY_SIZE|_MAX_BUFFER_SIZE|_PITCH_ALIGNMENT|_SUPPORT)|LINKER_AVAILABLE|LOCAL_MEM_SIZE|LOCAL_MEM_TYPE|MAX_(?:CLOCK_FREQUENCY|COMPUTE_UNITS|CONSTANT_ARGS|CONSTANT_BUFFER_SIZE|GLOBAL_VARIABLE_SIZE|MEM_ALLOC_SIZE|NUM_SUB_GROUPS|ON_DEVICE_(?:EVENTS|QUEUES)|PARAMETER_SIZE|PIPE_ARGS|READ_IMAGE_ARGS|READ_WRITE_IMAGE_ARGS|SAMPLERS|WORK_GROUP_SIZE|WORK_ITEM_DIMENSIONS|WORK_ITEM_SIZES|WRITE_IMAGE_ARGS)|MEM_BASE_ADDR_ALIGN|MIN_DATA_TYPE_ALIGN_SIZE|NAME|NATIVE_VECTOR_WIDTH_(?:CHAR|DOUBLE|FLOAT|HALF|INT|LONG|SHORT)|NOT_(?:AVAILABLE|FOUND)|OPENCL_C_VERSION|PARENT_DEVICE|PARTITION_(?:AFFINITY_DOMAIN|BY_AFFINITY_DOMAIN|BY_COUNTS|BY_COUNTS_LIST_END|EQUALLY|FAILED|MAX_SUB_DEVICES|PROPERTIES|TYPE)|PIPE_MAX_(?:ACTIVE_RESERVATIONS|PACKET_SIZE)|PLATFORM|PREFERRED_(?:GLOBAL_ATOMIC_ALIGNMENT|INTEROP_USER_SYNC|LOCAL_ATOMIC_ALIGNMENT|PLATFORM_ATOMIC_ALIGNMENT|VECTOR_WIDTH_(?:CHAR|DOUBLE|FLOAT|HALF|INT|LONG|SHORT))|PRINTF_BUFFER_SIZE|PROFILE|PROFILING_TIMER_RESOLUTION|QUEUE_(?:ON_(?:DEVICE_(?:MAX_SIZE|PREFERRED_SIZE|PROPERTIES)|HOST_PROPERTIES)|PROPERTIES)|REFERENCE_COUNT|SINGLE_FP_CONFIG|SUB_GROUP_INDEPENDENT_FORWARD_PROGRESS|SVM_(?:ATOMICS|CAPABILITIES|COARSE_GRAIN_BUFFER|FINE_GRAIN_BUFFER|FINE_GRAIN_SYSTEM)|TYPE(?:_ACCELERATOR|_ALL|_CPU|_CUSTOM|_DEFAULT|_GPU)?|VENDOR(?:_ID)?|VERSION)|DRIVER_VERSION|EVENT_(?:COMMAND_(?:EXECUTION_STATUS|QUEUE|TYPE)|CONTEXT|REFERENCE_COUNT)|EXEC_(?:KERNEL|NATIVE_KERNEL|STATUS_ERROR_FOR_EVENTS_IN_WAIT_LIST)|FILTER_(?:LINEAR|NEAREST)|FLOAT|FP_(?:CORRECTLY_ROUNDED_DIVIDE_SQRT|DENORM|FMA|INF_NAN|ROUND_TO_INF|ROUND_TO_NEAREST|ROUND_TO_ZERO|SOFT_FLOAT)|GLOBAL|HALF_FLOAT|IMAGE_(?:ARRAY_SIZE|BUFFER|DEPTH|ELEMENT_SIZE|FORMAT|FORMAT_MISMATCH|FORMAT_NOT_SUPPORTED|HEIGHT|NUM_MIP_LEVELS|NUM_SAMPLES|ROW_PITCH|SLICE_PITCH|WIDTH)|INTENSITY|INVALID_(?:ARG_INDEX|ARG_SIZE|ARG_VALUE|BINARY|BUFFER_SIZE|BUILD_OPTIONS|COMMAND_QUEUE|COMPILER_OPTIONS|CONTEXT|DEVICE|DEVICE_PARTITION_COUNT|DEVICE_QUEUE|DEVICE_TYPE|EVENT|EVENT_WAIT_LIST|GLOBAL_OFFSET|GLOBAL_WORK_SIZE|GL_OBJECT|HOST_PTR|IMAGE_DESCRIPTOR|IMAGE_FORMAT_DESCRIPTOR|IMAGE_SIZE|KERNEL|KERNEL_ARGS|KERNEL_DEFINITION|KERNEL_NAME|LINKER_OPTIONS|MEM_OBJECT|MIP_LEVEL|OPERATION|PIPE_SIZE|PLATFORM|PROGRAM|PROGRAM_EXECUTABLE|PROPERTY|QUEUE_PROPERTIES|SAMPLER|VALUE|WORK_DIMENSION|WORK_GROUP_SIZE|WORK_ITEM_SIZE)|KERNEL_(?:ARG_(?:ACCESS_(?:NONE|QUALIFIER|READ_ONLY|READ_WRITE|WRITE_ONLY)|ADDRESS_(?:CONSTANT|GLOBAL|LOCAL|PRIVATE|QUALIFIER)|INFO_NOT_AVAILABLE|NAME|TYPE_(?:CONST|NAME|NONE|PIPE|QUALIFIER|RESTRICT|VOLATILE))|ATTRIBUTES|COMPILE_NUM_SUB_GROUPS|COMPILE_WORK_GROUP_SIZE|CONTEXT|EXEC_INFO_SVM_FINE_GRAIN_SYSTEM|EXEC_INFO_SVM_PTRS|FUNCTION_NAME|GLOBAL_WORK_SIZE|LOCAL_MEM_SIZE|LOCAL_SIZE_FOR_SUB_GROUP_COUNT|MAX_NUM_SUB_GROUPS|MAX_SUB_GROUP_SIZE_FOR_NDRANGE|NUM_ARGS|PREFERRED_WORK_GROUP_SIZE_MULTIPLE|PRIVATE_MEM_SIZE|PROGRAM|REFERENCE_COUNT|SUB_GROUP_COUNT_FOR_NDRANGE|WORK_GROUP_SIZE)|LINKER_NOT_AVAILABLE|LINK_PROGRAM_FAILURE|LOCAL|LUMINANCE|MAP_(?:FAILURE|READ|WRITE|WRITE_INVALIDATE_REGION)|MEM_(?:ALLOC_HOST_PTR|ASSOCIATED_MEMOBJECT|CONTEXT|COPY_HOST_PTR|COPY_OVERLAP|FLAGS|HOST_NO_ACCESS|HOST_PTR|HOST_READ_ONLY|HOST_WRITE_ONLY|KERNEL_READ_AND_WRITE|MAP_COUNT|OBJECT_(?:ALLOCATION_FAILURE|BUFFER|IMAGE1D|IMAGE1D_ARRAY|IMAGE1D_BUFFER|IMAGE2D|IMAGE2D_ARRAY|IMAGE3D|PIPE)|OFFSET|READ_ONLY|READ_WRITE|REFERENCE_COUNT|SIZE|SVM_ATOMICS|SVM_FINE_GRAIN_BUFFER|TYPE|USES_SVM_POINTER|USE_HOST_PTR|WRITE_ONLY)|MIGRATE_MEM_OBJECT_(?:CONTENT_UNDEFINED|HOST)|MISALIGNED_SUB_BUFFER_OFFSET|NONE|NON_BLOCKING|OUT_OF_(?:HOST_MEMORY|RESOURCES)|PIPE_(?:MAX_PACKETS|PACKET_SIZE)|PLATFORM_(?:EXTENSIONS|HOST_TIMER_RESOLUTION|NAME|PROFILE|VENDOR|VERSION)|PROFILING_(?:COMMAND_(?:COMPLETE|END|QUEUED|START|SUBMIT)|INFO_NOT_AVAILABLE)|PROGRAM_(?:BINARIES|BINARY_SIZES|BINARY_TYPE(?:_COMPILED_OBJECT|_EXECUTABLE|_LIBRARY|_NONE)?|BUILD_(?:GLOBAL_VARIABLE_TOTAL_SIZE|LOG|OPTIONS|STATUS)|CONTEXT|DEVICES|IL|KERNEL_NAMES|NUM_DEVICES|NUM_KERNELS|REFERENCE_COUNT|SOURCE)|QUEUED|QUEUE_(?:CONTEXT|DEVICE|DEVICE_DEFAULT|ON_DEVICE|ON_DEVICE_DEFAULT|OUT_OF_ORDER_EXEC_MODE_ENABLE|PROFILING_ENABLE|PROPERTIES|REFERENCE_COUNT|SIZE)|R|RA|READ_(?:ONLY|WRITE)_CACHE|RG|RGB|RGBA|RGBx|RGx|RUNNING|Rx|SAMPLER_(?:ADDRESSING_MODE|CONTEXT|FILTER_MODE|LOD_MAX|LOD_MIN|MIP_FILTER_MODE|NORMALIZED_COORDS|REFERENCE_COUNT)|(?:UN)?SIGNED_INT(?:8|16|32)|SNORM_INT(?:8|16)|SUBMITTED|SUCCESS|UNORM_INT(?:16|24|8|_101010|_101010_2)|UNORM_SHORT_(?:555|565)|VERSION_(?:1_0|1_1|1_2|2_0|2_1)|sBGRA|sRGB|sRGBA|sRGBx)\\b/,\n      alias: \"constant\"\n    },\n    \"function-opencl-host\": {\n      pattern: /\\bcl(?:BuildProgram|CloneKernel|CompileProgram|Create(?:Buffer|CommandQueue(?:WithProperties)?|Context|ContextFromType|Image|Image2D|Image3D|Kernel|KernelsInProgram|Pipe|ProgramWith(?:Binary|BuiltInKernels|IL|Source)|Sampler|SamplerWithProperties|SubBuffer|SubDevices|UserEvent)|Enqueue(?:(?:Barrier|Marker)(?:WithWaitList)?|Copy(?:Buffer(?:Rect|ToImage)?|Image(?:ToBuffer)?)|(?:Fill|Map)(?:Buffer|Image)|MigrateMemObjects|NDRangeKernel|NativeKernel|(?:Read|Write)(?:Buffer(?:Rect)?|Image)|SVM(?:Free|Map|MemFill|Memcpy|MigrateMem|Unmap)|Task|UnmapMemObject|WaitForEvents)|Finish|Flush|Get(?:CommandQueueInfo|ContextInfo|Device(?:AndHostTimer|IDs|Info)|Event(?:Profiling)?Info|ExtensionFunctionAddress(?:ForPlatform)?|HostTimer|ImageInfo|Kernel(?:ArgInfo|Info|SubGroupInfo|WorkGroupInfo)|MemObjectInfo|PipeInfo|Platform(?:IDs|Info)|Program(?:Build)?Info|SamplerInfo|SupportedImageFormats)|LinkProgram|(?:Release|Retain)(?:CommandQueue|Context|Device|Event|Kernel|MemObject|Program|Sampler)|SVM(?:Alloc|Free)|Set(?:CommandQueueProperty|DefaultDeviceCommandQueue|EventCallback|Kernel(?:Arg(?:SVMPointer)?|ExecInfo)|Kernel|MemObjectDestructorCallback|UserEventStatus)|Unload(?:Platform)?Compiler|WaitForEvents)\\b/,\n      alias: \"function\"\n    }\n  };\n  e.languages.insertBefore(\"c\", \"keyword\", t), t[\"type-opencl-host-c++\"] = {\n    pattern: /\\b(?:Buffer|BufferGL|BufferRenderGL|CommandQueue|Context|Device|DeviceCommandQueue|EnqueueArgs|Event|Image|Image1D|Image1DArray|Image1DBuffer|Image2D|Image2DArray|Image2DGL|Image3D|Image3DGL|ImageFormat|ImageGL|Kernel|KernelFunctor|LocalSpaceArg|Memory|NDRange|Pipe|Platform|Program|Sampler|SVMAllocator|SVMTraitAtomic|SVMTraitCoarse|SVMTraitFine|SVMTraitReadOnly|SVMTraitReadWrite|SVMTraitWriteOnly|UserEvent)\\b/,\n    alias: \"keyword\"\n  }, e.languages.insertBefore(\"cpp\", \"keyword\", t);\n}(Prism), Prism.languages.arduino = Prism.languages.extend(\"cpp\", {\n  keyword: /\\b(?:setup|if|else|while|do|for|return|in|instanceof|default|function|loop|goto|switch|case|new|try|throw|catch|finally|null|break|continue|boolean|bool|void|byte|word|string|String|array|int|long|integer|double)\\b/,\n  builtin: /\\b(?:KeyboardController|MouseController|SoftwareSerial|EthernetServer|EthernetClient|LiquidCrystal|LiquidCrystal_I2C|RobotControl|GSMVoiceCall|EthernetUDP|EsploraTFT|HttpClient|RobotMotor|WiFiClient|GSMScanner|FileSystem|Scheduler|GSMServer|YunClient|YunServer|IPAddress|GSMClient|GSMModem|Keyboard|Ethernet|Console|GSMBand|Esplora|Stepper|Process|WiFiUDP|GSM_SMS|Mailbox|USBHost|Firmata|PImage|Client|Server|GSMPIN|FileIO|Bridge|Serial|EEPROM|Stream|Mouse|Audio|Servo|File|Task|GPRS|WiFi|Wire|TFT|GSM|SPI|SD|runShellCommandAsynchronously|analogWriteResolution|retrieveCallingNumber|printFirmwareVersion|analogReadResolution|sendDigitalPortPair|noListenOnLocalhost|readJoystickButton|setFirmwareVersion|readJoystickSwitch|scrollDisplayRight|getVoiceCallStatus|scrollDisplayLeft|writeMicroseconds|delayMicroseconds|beginTransmission|getSignalStrength|runAsynchronously|getAsynchronously|listenOnLocalhost|getCurrentCarrier|readAccelerometer|messageAvailable|sendDigitalPorts|lineFollowConfig|countryNameWrite|runShellCommand|readStringUntil|rewindDirectory|readTemperature|setClockDivider|readLightSensor|endTransmission|analogReference|detachInterrupt|countryNameRead|attachInterrupt|encryptionType|readBytesUntil|robotNameWrite|readMicrophone|robotNameRead|cityNameWrite|userNameWrite|readJoystickY|readJoystickX|mouseReleased|openNextFile|scanNetworks|noInterrupts|digitalWrite|beginSpeaker|mousePressed|isActionDone|mouseDragged|displayLogos|noAutoscroll|addParameter|remoteNumber|getModifiers|keyboardRead|userNameRead|waitContinue|processInput|parseCommand|printVersion|readNetworks|writeMessage|blinkVersion|cityNameRead|readMessage|setDataMode|parsePacket|isListening|setBitOrder|beginPacket|isDirectory|motorsWrite|drawCompass|digitalRead|clearScreen|serialEvent|rightToLeft|setTextSize|leftToRight|requestFrom|keyReleased|compassRead|analogWrite|interrupts|WiFiServer|disconnect|playMelody|parseFloat|autoscroll|getPINUsed|setPINUsed|setTimeout|sendAnalog|readSlider|analogRead|beginWrite|createChar|motorsStop|keyPressed|tempoWrite|readButton|subnetMask|debugPrint|macAddress|writeGreen|randomSeed|attachGPRS|readString|sendString|remotePort|releaseAll|mouseMoved|background|getXChange|getYChange|answerCall|getResult|voiceCall|endPacket|constrain|getSocket|writeJSON|getButton|available|connected|findUntil|readBytes|exitValue|readGreen|writeBlue|startLoop|IPAddress|isPressed|sendSysex|pauseMode|gatewayIP|setCursor|getOemKey|tuneWrite|noDisplay|loadImage|switchPIN|onRequest|onReceive|changePIN|playFile|noBuffer|parseInt|overflow|checkPIN|knobRead|beginTFT|bitClear|updateIR|bitWrite|position|writeRGB|highByte|writeRed|setSpeed|readBlue|noStroke|remoteIP|transfer|shutdown|hangCall|beginSMS|endWrite|attached|maintain|noCursor|checkReg|checkPUK|shiftOut|isValid|shiftIn|pulseIn|connect|println|localIP|pinMode|getIMEI|display|noBlink|process|getBand|running|beginSD|drawBMP|lowByte|setBand|release|bitRead|prepare|pointTo|readRed|setMode|noFill|remove|listen|stroke|detach|attach|noTone|exists|buffer|height|bitSet|circle|config|cursor|random|IRread|setDNS|endSMS|getKey|micros|millis|begin|print|write|ready|flush|width|isPIN|blink|clear|press|mkdir|rmdir|close|point|yield|image|BSSID|click|delay|read|text|move|peek|beep|rect|line|open|seek|fill|size|turn|stop|home|find|step|tone|sqrt|RSSI|SSID|end|bit|tan|cos|sin|pow|map|abs|max|min|get|run|put)\\b/,\n  constant: /\\b(?:DIGITAL_MESSAGE|FIRMATA_STRING|ANALOG_MESSAGE|REPORT_DIGITAL|REPORT_ANALOG|INPUT_PULLUP|SET_PIN_MODE|INTERNAL2V56|SYSTEM_RESET|LED_BUILTIN|INTERNAL1V1|SYSEX_START|INTERNAL|EXTERNAL|DEFAULT|OUTPUT|INPUT|HIGH|LOW)\\b/\n}), Prism.languages.arff = {\n  comment: /%.*/,\n  string: {\n    pattern: /([\"'])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: !0\n  },\n  keyword: /@(?:attribute|data|end|relation)\\b/i,\n  number: /\\b\\d+(?:\\.\\d+)?\\b/,\n  punctuation: /[{},]/\n}, function (e) {\n  var t = {\n    pattern: /(^[ \\t]*)\\[(?!\\[)(?:([\"'$`])(?:(?!\\2)[^\\\\]|\\\\.)*\\2|\\[(?:[^\\]\\\\]|\\\\.)*\\]|[^\\]\\\\]|\\\\.)*\\]/m,\n    lookbehind: !0,\n    inside: {\n      quoted: {\n        pattern: /([$`])(?:(?!\\1)[^\\\\]|\\\\.)*\\1/,\n        inside: {\n          punctuation: /^[$`]|[$`]$/\n        }\n      },\n      interpreted: {\n        pattern: /'(?:[^'\\\\]|\\\\.)*'/,\n        inside: {\n          punctuation: /^'|'$/\n        }\n      },\n      string: /\"(?:[^\"\\\\]|\\\\.)*\"/,\n      variable: /\\w+(?==)/,\n      punctuation: /^\\[|\\]$|,/,\n      operator: /=/,\n      \"attr-value\": /(?!^\\s+$).+/\n    }\n  };\n  e.languages.asciidoc = {\n    \"comment-block\": {\n      pattern: /^(\\/{4,})(?:\\r?\\n|\\r)(?:[\\s\\S]*(?:\\r?\\n|\\r))??\\1/m,\n      alias: \"comment\"\n    },\n    table: {\n      pattern: /^\\|={3,}(?:(?:\\r?\\n|\\r).*)*?(?:\\r?\\n|\\r)\\|={3,}$/m,\n      inside: {\n        specifiers: {\n          pattern: /(?!\\|)(?:(?:(?:\\d+(?:\\.\\d+)?|\\.\\d+)[+*])?(?:[<^>](?:\\.[<^>])?|\\.[<^>])?[a-z]*)(?=\\|)/,\n          alias: \"attr-value\"\n        },\n        punctuation: {\n          pattern: /(^|[^\\\\])[|!]=*/,\n          lookbehind: !0\n        }\n      }\n    },\n    \"passthrough-block\": {\n      pattern: /^(\\+{4,})(?:\\r?\\n|\\r)(?:[\\s\\S]*(?:\\r?\\n|\\r))??\\1$/m,\n      inside: {\n        punctuation: /^\\++|\\++$/\n      }\n    },\n    \"literal-block\": {\n      pattern: /^(-{4,}|\\.{4,})(?:\\r?\\n|\\r)(?:[\\s\\S]*(?:\\r?\\n|\\r))??\\1$/m,\n      inside: {\n        punctuation: /^(?:-+|\\.+)|(?:-+|\\.+)$/\n      }\n    },\n    \"other-block\": {\n      pattern: /^(--|\\*{4,}|_{4,}|={4,})(?:\\r?\\n|\\r)(?:[\\s\\S]*(?:\\r?\\n|\\r))??\\1$/m,\n      inside: {\n        punctuation: /^(?:-+|\\*+|_+|=+)|(?:-+|\\*+|_+|=+)$/\n      }\n    },\n    \"list-punctuation\": {\n      pattern: /(^[ \\t]*)(?:-|\\*{1,5}|\\.{1,5}|(?:[a-z]|\\d+)\\.|[xvi]+\\))(?= )/im,\n      lookbehind: !0,\n      alias: \"punctuation\"\n    },\n    \"list-label\": {\n      pattern: /(^[ \\t]*)[a-z\\d].+(?::{2,4}|;;)(?=\\s)/im,\n      lookbehind: !0,\n      alias: \"symbol\"\n    },\n    \"indented-block\": {\n      pattern: /((\\r?\\n|\\r)\\2)([ \\t]+)\\S.*(?:(?:\\r?\\n|\\r)\\3.+)*(?=\\2{2}|$)/,\n      lookbehind: !0\n    },\n    comment: /^\\/\\/.*/m,\n    title: {\n      pattern: /^.+(?:\\r?\\n|\\r)(?:={3,}|-{3,}|~{3,}|\\^{3,}|\\+{3,})$|^={1,5} +.+|^\\.(?![\\s.]).*/m,\n      alias: \"important\",\n      inside: {\n        punctuation: /^(?:\\.|=+)|(?:=+|-+|~+|\\^+|\\++)$/\n      }\n    },\n    \"attribute-entry\": {\n      pattern: /^:[^:\\r\\n]+:(?: .*?(?: \\+(?:\\r?\\n|\\r).*?)*)?$/m,\n      alias: \"tag\"\n    },\n    attributes: t,\n    hr: {\n      pattern: /^'{3,}$/m,\n      alias: \"punctuation\"\n    },\n    \"page-break\": {\n      pattern: /^<{3,}$/m,\n      alias: \"punctuation\"\n    },\n    admonition: {\n      pattern: /^(?:TIP|NOTE|IMPORTANT|WARNING|CAUTION):/m,\n      alias: \"keyword\"\n    },\n    callout: [{\n      pattern: /(^[ \\t]*)<?\\d*>/m,\n      lookbehind: !0,\n      alias: \"symbol\"\n    }, {\n      pattern: /<\\d+>/,\n      alias: \"symbol\"\n    }],\n    macro: {\n      pattern: /\\b[a-z\\d][a-z\\d-]*::?(?:(?:\\S+)??\\[(?:[^\\]\\\\\"]|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*\\1|\\\\.)*\\])/,\n      inside: {\n        function: /^[a-z\\d-]+(?=:)/,\n        punctuation: /^::?/,\n        attributes: {\n          pattern: /(?:\\[(?:[^\\]\\\\\"]|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*\\1|\\\\.)*\\])/,\n          inside: t.inside\n        }\n      }\n    },\n    inline: {\n      pattern: /(^|[^\\\\])(?:(?:\\B\\[(?:[^\\]\\\\\"]|([\"'])(?:(?!\\2)[^\\\\]|\\\\.)*\\2|\\\\.)*\\])?(?:\\b_(?!\\s)(?: _|[^_\\\\\\r\\n]|\\\\.)+(?:(?:\\r?\\n|\\r)(?: _|[^_\\\\\\r\\n]|\\\\.)+)*_\\b|\\B``(?!\\s).+?(?:(?:\\r?\\n|\\r).+?)*''\\B|\\B`(?!\\s)(?: ['`]|.)+?(?:(?:\\r?\\n|\\r)(?: ['`]|.)+?)*['`]\\B|\\B(['*+#])(?!\\s)(?: \\3|(?!\\3)[^\\\\\\r\\n]|\\\\.)+(?:(?:\\r?\\n|\\r)(?: \\3|(?!\\3)[^\\\\\\r\\n]|\\\\.)+)*\\3\\B)|(?:\\[(?:[^\\]\\\\\"]|([\"'])(?:(?!\\4)[^\\\\]|\\\\.)*\\4|\\\\.)*\\])?(?:(__|\\*\\*|\\+\\+\\+?|##|\\$\\$|[~^]).+?(?:(?:\\r?\\n|\\r).+?)*\\5|\\{[^}\\r\\n]+\\}|\\[\\[\\[?.+?(?:(?:\\r?\\n|\\r).+?)*\\]?\\]\\]|<<.+?(?:(?:\\r?\\n|\\r).+?)*>>|\\(\\(\\(?.+?(?:(?:\\r?\\n|\\r).+?)*\\)?\\)\\)))/m,\n      lookbehind: !0,\n      inside: {\n        attributes: t,\n        url: {\n          pattern: /^(?:\\[\\[\\[?.+?\\]?\\]\\]|<<.+?>>)$/,\n          inside: {\n            punctuation: /^(?:\\[\\[\\[?|<<)|(?:\\]\\]\\]?|>>)$/\n          }\n        },\n        \"attribute-ref\": {\n          pattern: /^\\{.+\\}$/,\n          inside: {\n            variable: {\n              pattern: /(^\\{)[a-z\\d,+_-]+/,\n              lookbehind: !0\n            },\n            operator: /^[=?!#%@$]|!(?=[:}])/,\n            punctuation: /^\\{|\\}$|::?/\n          }\n        },\n        italic: {\n          pattern: /^(['_])[\\s\\S]+\\1$/,\n          inside: {\n            punctuation: /^(?:''?|__?)|(?:''?|__?)$/\n          }\n        },\n        bold: {\n          pattern: /^\\*[\\s\\S]+\\*$/,\n          inside: {\n            punctuation: /^\\*\\*?|\\*\\*?$/\n          }\n        },\n        punctuation: /^(?:``?|\\+{1,3}|##?|\\$\\$|[~^]|\\(\\(\\(?)|(?:''?|\\+{1,3}|##?|\\$\\$|[~^`]|\\)?\\)\\))$/\n      }\n    },\n    replacement: {\n      pattern: /\\((?:C|TM|R)\\)/,\n      alias: \"builtin\"\n    },\n    entity: /&#?[\\da-z]{1,8};/i,\n    \"line-continuation\": {\n      pattern: /(^| )\\+$/m,\n      lookbehind: !0,\n      alias: \"punctuation\"\n    }\n  }, t.inside.interpreted.inside.rest = {\n    macro: e.languages.asciidoc.macro,\n    inline: e.languages.asciidoc.inline,\n    replacement: e.languages.asciidoc.replacement,\n    entity: e.languages.asciidoc.entity\n  }, e.languages.asciidoc[\"passthrough-block\"].inside.rest = {\n    macro: e.languages.asciidoc.macro\n  }, e.languages.asciidoc[\"literal-block\"].inside.rest = {\n    callout: e.languages.asciidoc.callout\n  }, e.languages.asciidoc.table.inside.rest = {\n    \"comment-block\": e.languages.asciidoc[\"comment-block\"],\n    \"passthrough-block\": e.languages.asciidoc[\"passthrough-block\"],\n    \"literal-block\": e.languages.asciidoc[\"literal-block\"],\n    \"other-block\": e.languages.asciidoc[\"other-block\"],\n    \"list-punctuation\": e.languages.asciidoc[\"list-punctuation\"],\n    \"indented-block\": e.languages.asciidoc[\"indented-block\"],\n    comment: e.languages.asciidoc.comment,\n    title: e.languages.asciidoc.title,\n    \"attribute-entry\": e.languages.asciidoc[\"attribute-entry\"],\n    attributes: e.languages.asciidoc.attributes,\n    hr: e.languages.asciidoc.hr,\n    \"page-break\": e.languages.asciidoc[\"page-break\"],\n    admonition: e.languages.asciidoc.admonition,\n    \"list-label\": e.languages.asciidoc[\"list-label\"],\n    callout: e.languages.asciidoc.callout,\n    macro: e.languages.asciidoc.macro,\n    inline: e.languages.asciidoc.inline,\n    replacement: e.languages.asciidoc.replacement,\n    entity: e.languages.asciidoc.entity,\n    \"line-continuation\": e.languages.asciidoc[\"line-continuation\"]\n  }, e.languages.asciidoc[\"other-block\"].inside.rest = {\n    table: e.languages.asciidoc.table,\n    \"list-punctuation\": e.languages.asciidoc[\"list-punctuation\"],\n    \"indented-block\": e.languages.asciidoc[\"indented-block\"],\n    comment: e.languages.asciidoc.comment,\n    \"attribute-entry\": e.languages.asciidoc[\"attribute-entry\"],\n    attributes: e.languages.asciidoc.attributes,\n    hr: e.languages.asciidoc.hr,\n    \"page-break\": e.languages.asciidoc[\"page-break\"],\n    admonition: e.languages.asciidoc.admonition,\n    \"list-label\": e.languages.asciidoc[\"list-label\"],\n    macro: e.languages.asciidoc.macro,\n    inline: e.languages.asciidoc.inline,\n    replacement: e.languages.asciidoc.replacement,\n    entity: e.languages.asciidoc.entity,\n    \"line-continuation\": e.languages.asciidoc[\"line-continuation\"]\n  }, e.languages.asciidoc.title.inside.rest = {\n    macro: e.languages.asciidoc.macro,\n    inline: e.languages.asciidoc.inline,\n    replacement: e.languages.asciidoc.replacement,\n    entity: e.languages.asciidoc.entity\n  }, e.hooks.add(\"wrap\", function (e) {\n    \"entity\" === e.type && (e.attributes.title = e.content.replace(/&amp;/, \"&\"));\n  });\n}(Prism), Prism.languages.asm6502 = {\n  comment: /;.*/,\n  directive: {\n    pattern: /\\.\\w+(?= )/,\n    alias: \"keyword\"\n  },\n  string: /([\"'`])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n  opcode: {\n    pattern: /\\b(?:adc|and|asl|bcc|bcs|beq|bit|bmi|bne|bpl|brk|bvc|bvs|clc|cld|cli|clv|cmp|cpx|cpy|dec|dex|dey|eor|inc|inx|iny|jmp|jsr|lda|ldx|ldy|lsr|nop|ora|pha|php|pla|plp|rol|ror|rti|rts|sbc|sec|sed|sei|sta|stx|sty|tax|tay|tsx|txa|txs|tya|ADC|AND|ASL|BCC|BCS|BEQ|BIT|BMI|BNE|BPL|BRK|BVC|BVS|CLC|CLD|CLI|CLV|CMP|CPX|CPY|DEC|DEX|DEY|EOR|INC|INX|INY|JMP|JSR|LDA|LDX|LDY|LSR|NOP|ORA|PHA|PHP|PLA|PLP|ROL|ROR|RTI|RTS|SBC|SEC|SED|SEI|STA|STX|STY|TAX|TAY|TSX|TXA|TXS|TYA)\\b/,\n    alias: \"property\"\n  },\n  hexnumber: {\n    pattern: /#?\\$[\\da-f]{2,4}/i,\n    alias: \"string\"\n  },\n  binarynumber: {\n    pattern: /#?%[01]+/,\n    alias: \"string\"\n  },\n  decimalnumber: {\n    pattern: /#?\\d+/,\n    alias: \"string\"\n  },\n  register: {\n    pattern: /\\b[xya]\\b/i,\n    alias: \"variable\"\n  }\n}, Prism.languages.aspnet = Prism.languages.extend(\"markup\", {\n  \"page-directive tag\": {\n    pattern: /<%\\s*@.*%>/i,\n    inside: {\n      \"page-directive tag\": /<%\\s*@\\s*(?:Assembly|Control|Implements|Import|Master(?:Type)?|OutputCache|Page|PreviousPageType|Reference|Register)?|%>/i,\n      rest: Prism.languages.markup.tag.inside\n    }\n  },\n  \"directive tag\": {\n    pattern: /<%.*%>/i,\n    inside: {\n      \"directive tag\": /<%\\s*?[$=%#:]{0,2}|%>/i,\n      rest: Prism.languages.csharp\n    }\n  }\n}), Prism.languages.aspnet.tag.pattern = /<(?!%)\\/?[^\\s>\\/]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+))?)*\\s*\\/?>/i, Prism.languages.insertBefore(\"inside\", \"punctuation\", {\n  \"directive tag\": Prism.languages.aspnet[\"directive tag\"]\n}, Prism.languages.aspnet.tag.inside[\"attr-value\"]), Prism.languages.insertBefore(\"aspnet\", \"comment\", {\n  \"asp comment\": /<%--[\\s\\S]*?--%>/\n}), Prism.languages.insertBefore(\"aspnet\", Prism.languages.javascript ? \"script\" : \"tag\", {\n  \"asp script\": {\n    pattern: /(<script(?=.*runat=['\"]?server['\"]?)[\\s\\S]*?>)[\\s\\S]*?(?=<\\/script>)/i,\n    lookbehind: !0,\n    inside: Prism.languages.csharp || {}\n  }\n}), Prism.languages.autohotkey = {\n  comment: {\n    pattern: /(^[^\";\\n]*(\"[^\"\\n]*?\"[^\"\\n]*?)*)(?:;.*$|^\\s*\\/\\*[\\s\\S]*\\n\\*\\/)/m,\n    lookbehind: !0\n  },\n  string: /\"(?:[^\"\\n\\r]|\"\")*\"/m,\n  function: /[^(); \\t,\\n+*\\-=?>:\\\\\\/<&%\\[\\]]+?(?=\\()/m,\n  tag: /^[ \\t]*[^\\s:]+?(?=:(?:[^:]|$))/m,\n  variable: /%\\w+%/,\n  number: /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee]-?\\d+)?/,\n  operator: /\\?|\\/\\/?=?|:=|\\|[=|]?|&[=&]?|\\+[=+]?|-[=-]?|\\*[=*]?|<(?:<=?|>|=)?|>>?=?|[.^!=~]=?|\\b(?:AND|NOT|OR)\\b/,\n  punctuation: /[{}[\\]():,]/,\n  boolean: /\\b(?:true|false)\\b/,\n  selector: /\\b(?:AutoTrim|BlockInput|Break|Click|ClipWait|Continue|Control|ControlClick|ControlFocus|ControlGet|ControlGetFocus|ControlGetPos|ControlGetText|ControlMove|ControlSend|ControlSendRaw|ControlSetText|CoordMode|Critical|DetectHiddenText|DetectHiddenWindows|Drive|DriveGet|DriveSpaceFree|EnvAdd|EnvDiv|EnvGet|EnvMult|EnvSet|EnvSub|EnvUpdate|Exit|ExitApp|FileAppend|FileCopy|FileCopyDir|FileCreateDir|FileCreateShortcut|FileDelete|FileEncoding|FileGetAttrib|FileGetShortcut|FileGetSize|FileGetTime|FileGetVersion|FileInstall|FileMove|FileMoveDir|FileRead|FileReadLine|FileRecycle|FileRecycleEmpty|FileRemoveDir|FileSelectFile|FileSelectFolder|FileSetAttrib|FileSetTime|FormatTime|GetKeyState|Gosub|Goto|GroupActivate|GroupAdd|GroupClose|GroupDeactivate|Gui|GuiControl|GuiControlGet|Hotkey|ImageSearch|IniDelete|IniRead|IniWrite|Input|InputBox|KeyWait|ListHotkeys|ListLines|ListVars|Loop|Menu|MouseClick|MouseClickDrag|MouseGetPos|MouseMove|MsgBox|OnExit|OutputDebug|Pause|PixelGetColor|PixelSearch|PostMessage|Process|Progress|Random|RegDelete|RegRead|RegWrite|Reload|Repeat|Return|Run|RunAs|RunWait|Send|SendEvent|SendInput|SendMessage|SendMode|SendPlay|SendRaw|SetBatchLines|SetCapslockState|SetControlDelay|SetDefaultMouseSpeed|SetEnv|SetFormat|SetKeyDelay|SetMouseDelay|SetNumlockState|SetScrollLockState|SetStoreCapslockMode|SetTimer|SetTitleMatchMode|SetWinDelay|SetWorkingDir|Shutdown|Sleep|Sort|SoundBeep|SoundGet|SoundGetWaveVolume|SoundPlay|SoundSet|SoundSetWaveVolume|SplashImage|SplashTextOff|SplashTextOn|SplitPath|StatusBarGetText|StatusBarWait|StringCaseSense|StringGetPos|StringLeft|StringLen|StringLower|StringMid|StringReplace|StringRight|StringSplit|StringTrimLeft|StringTrimRight|StringUpper|Suspend|SysGet|Thread|ToolTip|Transform|TrayTip|URLDownloadToFile|WinActivate|WinActivateBottom|WinClose|WinGet|WinGetActiveStats|WinGetActiveTitle|WinGetClass|WinGetPos|WinGetText|WinGetTitle|WinHide|WinKill|WinMaximize|WinMenuSelectItem|WinMinimize|WinMinimizeAll|WinMinimizeAllUndo|WinMove|WinRestore|WinSet|WinSetTitle|WinShow|WinWait|WinWaitActive|WinWaitClose|WinWaitNotActive)\\b/i,\n  constant: /\\b(?:a_ahkpath|a_ahkversion|a_appdata|a_appdatacommon|a_autotrim|a_batchlines|a_caretx|a_carety|a_computername|a_controldelay|a_cursor|a_dd|a_ddd|a_dddd|a_defaultmousespeed|a_desktop|a_desktopcommon|a_detecthiddentext|a_detecthiddenwindows|a_endchar|a_eventinfo|a_exitreason|a_formatfloat|a_formatinteger|a_gui|a_guievent|a_guicontrol|a_guicontrolevent|a_guiheight|a_guiwidth|a_guix|a_guiy|a_hour|a_iconfile|a_iconhidden|a_iconnumber|a_icontip|a_index|a_ipaddress1|a_ipaddress2|a_ipaddress3|a_ipaddress4|a_isadmin|a_iscompiled|a_iscritical|a_ispaused|a_issuspended|a_isunicode|a_keydelay|a_language|a_lasterror|a_linefile|a_linenumber|a_loopfield|a_loopfileattrib|a_loopfiledir|a_loopfileext|a_loopfilefullpath|a_loopfilelongpath|a_loopfilename|a_loopfileshortname|a_loopfileshortpath|a_loopfilesize|a_loopfilesizekb|a_loopfilesizemb|a_loopfiletimeaccessed|a_loopfiletimecreated|a_loopfiletimemodified|a_loopreadline|a_loopregkey|a_loopregname|a_loopregsubkey|a_loopregtimemodified|a_loopregtype|a_mday|a_min|a_mm|a_mmm|a_mmmm|a_mon|a_mousedelay|a_msec|a_mydocuments|a_now|a_nowutc|a_numbatchlines|a_ostype|a_osversion|a_priorhotkey|programfiles|a_programfiles|a_programs|a_programscommon|a_screenheight|a_screenwidth|a_scriptdir|a_scriptfullpath|a_scriptname|a_sec|a_space|a_startmenu|a_startmenucommon|a_startup|a_startupcommon|a_stringcasesense|a_tab|a_temp|a_thisfunc|a_thishotkey|a_thislabel|a_thismenu|a_thismenuitem|a_thismenuitempos|a_tickcount|a_timeidle|a_timeidlephysical|a_timesincepriorhotkey|a_timesincethishotkey|a_titlematchmode|a_titlematchmodespeed|a_username|a_wday|a_windelay|a_windir|a_workingdir|a_yday|a_year|a_yweek|a_yyyy|clipboard|clipboardall|comspec|errorlevel)\\b/i,\n  builtin: /\\b(?:abs|acos|asc|asin|atan|ceil|chr|class|cos|dllcall|exp|fileexist|Fileopen|floor|il_add|il_create|il_destroy|instr|substr|isfunc|islabel|IsObject|ln|log|lv_add|lv_delete|lv_deletecol|lv_getcount|lv_getnext|lv_gettext|lv_insert|lv_insertcol|lv_modify|lv_modifycol|lv_setimagelist|mod|onmessage|numget|numput|registercallback|regexmatch|regexreplace|round|sin|tan|sqrt|strlen|sb_seticon|sb_setparts|sb_settext|strsplit|tv_add|tv_delete|tv_getchild|tv_getcount|tv_getnext|tv_get|tv_getparent|tv_getprev|tv_getselection|tv_gettext|tv_modify|varsetcapacity|winactive|winexist|__New|__Call|__Get|__Set)\\b/i,\n  symbol: /\\b(?:alt|altdown|altup|appskey|backspace|browser_back|browser_favorites|browser_forward|browser_home|browser_refresh|browser_search|browser_stop|bs|capslock|ctrl|ctrlbreak|ctrldown|ctrlup|del|delete|down|end|enter|esc|escape|f1|f10|f11|f12|f13|f14|f15|f16|f17|f18|f19|f2|f20|f21|f22|f23|f24|f3|f4|f5|f6|f7|f8|f9|home|ins|insert|joy1|joy10|joy11|joy12|joy13|joy14|joy15|joy16|joy17|joy18|joy19|joy2|joy20|joy21|joy22|joy23|joy24|joy25|joy26|joy27|joy28|joy29|joy3|joy30|joy31|joy32|joy4|joy5|joy6|joy7|joy8|joy9|joyaxes|joybuttons|joyinfo|joyname|joypov|joyr|joyu|joyv|joyx|joyy|joyz|lalt|launch_app1|launch_app2|launch_mail|launch_media|lbutton|lcontrol|lctrl|left|lshift|lwin|lwindown|lwinup|mbutton|media_next|media_play_pause|media_prev|media_stop|numlock|numpad0|numpad1|numpad2|numpad3|numpad4|numpad5|numpad6|numpad7|numpad8|numpad9|numpadadd|numpadclear|numpaddel|numpaddiv|numpaddot|numpaddown|numpadend|numpadenter|numpadhome|numpadins|numpadleft|numpadmult|numpadpgdn|numpadpgup|numpadright|numpadsub|numpadup|pgdn|pgup|printscreen|ralt|rbutton|rcontrol|rctrl|right|rshift|rwin|rwindown|rwinup|scrolllock|shift|shiftdown|shiftup|space|tab|up|volume_down|volume_mute|volume_up|wheeldown|wheelleft|wheelright|wheelup|xbutton1|xbutton2)\\b/i,\n  important: /#\\b(?:AllowSameLineComments|ClipboardTimeout|CommentFlag|ErrorStdOut|EscapeChar|HotkeyInterval|HotkeyModifierTimeout|Hotstring|IfWinActive|IfWinExist|IfWinNotActive|IfWinNotExist|Include|IncludeAgain|InstallKeybdHook|InstallMouseHook|KeyHistory|LTrim|MaxHotkeysPerInterval|MaxMem|MaxThreads|MaxThreadsBuffer|MaxThreadsPerHotkey|NoEnv|NoTrayIcon|Persistent|SingleInstance|UseHook|WinActivateForce)\\b/i,\n  keyword: /\\b(?:Abort|AboveNormal|Add|ahk_class|ahk_group|ahk_id|ahk_pid|All|Alnum|Alpha|AltSubmit|AltTab|AltTabAndMenu|AltTabMenu|AltTabMenuDismiss|AlwaysOnTop|AutoSize|Background|BackgroundTrans|BelowNormal|between|BitAnd|BitNot|BitOr|BitShiftLeft|BitShiftRight|BitXOr|Bold|Border|Button|ByRef|Checkbox|Checked|CheckedGray|Choose|ChooseString|Close|Color|ComboBox|Contains|ControlList|Count|Date|DateTime|Days|DDL|Default|DeleteAll|Delimiter|Deref|Destroy|Digit|Disable|Disabled|DropDownList|Edit|Eject|Else|Enable|Enabled|Error|Exist|Expand|ExStyle|FileSystem|First|Flash|Float|FloatFast|Focus|Font|for|global|Grid|Group|GroupBox|GuiClose|GuiContextMenu|GuiDropFiles|GuiEscape|GuiSize|Hdr|Hidden|Hide|High|HKCC|HKCR|HKCU|HKEY_CLASSES_ROOT|HKEY_CURRENT_CONFIG|HKEY_CURRENT_USER|HKEY_LOCAL_MACHINE|HKEY_USERS|HKLM|HKU|Hours|HScroll|Icon|IconSmall|ID|IDLast|If|IfEqual|IfExist|IfGreater|IfGreaterOrEqual|IfInString|IfLess|IfLessOrEqual|IfMsgBox|IfNotEqual|IfNotExist|IfNotInString|IfWinActive|IfWinExist|IfWinNotActive|IfWinNotExist|Ignore|ImageList|in|Integer|IntegerFast|Interrupt|is|italic|Join|Label|LastFound|LastFoundExist|Limit|Lines|List|ListBox|ListView|local|Lock|Logoff|Low|Lower|Lowercase|MainWindow|Margin|Maximize|MaximizeBox|MaxSize|Minimize|MinimizeBox|MinMax|MinSize|Minutes|MonthCal|Mouse|Move|Multi|NA|No|NoActivate|NoDefault|NoHide|NoIcon|NoMainWindow|norm|Normal|NoSort|NoSortHdr|NoStandard|Not|NoTab|NoTimers|Number|Off|Ok|On|OwnDialogs|Owner|Parse|Password|Picture|Pixel|Pos|Pow|Priority|ProcessName|Radio|Range|Read|ReadOnly|Realtime|Redraw|REG_BINARY|REG_DWORD|REG_EXPAND_SZ|REG_MULTI_SZ|REG_SZ|Region|Relative|Rename|Report|Resize|Restore|Retry|RGB|Screen|Seconds|Section|Serial|SetLabel|ShiftAltTab|Show|Single|Slider|SortDesc|Standard|static|Status|StatusBar|StatusCD|strike|Style|Submit|SysMenu|Tab2|TabStop|Text|Theme|Tile|ToggleCheck|ToggleEnable|ToolWindow|Top|Topmost|TransColor|Transparent|Tray|TreeView|TryAgain|Type|UnCheck|underline|Unicode|Unlock|UpDown|Upper|Uppercase|UseErrorLevel|Vis|VisFirst|Visible|VScroll|Wait|WaitClose|WantCtrlA|WantF2|WantReturn|While|Wrap|Xdigit|xm|xp|xs|Yes|ym|yp|ys)\\b/i\n}, Prism.languages.autoit = {\n  comment: [/;.*/, {\n    pattern: /(^\\s*)#(?:comments-start|cs)[\\s\\S]*?^\\s*#(?:comments-end|ce)/m,\n    lookbehind: !0\n  }],\n  url: {\n    pattern: /(^\\s*#include\\s+)(?:<[^\\r\\n>]+>|\"[^\\r\\n\"]+\")/m,\n    lookbehind: !0\n  },\n  string: {\n    pattern: /([\"'])(?:\\1\\1|(?!\\1)[^\\r\\n])*\\1/,\n    greedy: !0,\n    inside: {\n      variable: /([%$@])\\w+\\1/\n    }\n  },\n  directive: {\n    pattern: /(^\\s*)#\\w+/m,\n    lookbehind: !0,\n    alias: \"keyword\"\n  },\n  function: /\\b\\w+(?=\\()/,\n  variable: /[$@]\\w+/,\n  keyword: /\\b(?:Case|Const|Continue(?:Case|Loop)|Default|Dim|Do|Else(?:If)?|End(?:Func|If|Select|Switch|With)|Enum|Exit(?:Loop)?|For|Func|Global|If|In|Local|Next|Null|ReDim|Select|Static|Step|Switch|Then|To|Until|Volatile|WEnd|While|With)\\b/i,\n  number: /\\b(?:0x[\\da-f]+|\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?)\\b/i,\n  boolean: /\\b(?:True|False)\\b/i,\n  operator: /<[=>]?|[-+*\\/=&>]=?|[?^]|\\b(?:And|Or|Not)\\b/i,\n  punctuation: /[\\[\\]().,:]/\n}, function (e) {\n  var t = {\n    variable: [{\n      pattern: /\\$?\\(\\([\\s\\S]+?\\)\\)/,\n      inside: {\n        variable: [{\n          pattern: /(^\\$\\(\\([\\s\\S]+)\\)\\)/,\n          lookbehind: !0\n        }, /^\\$\\(\\(/],\n        number: /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee]-?\\d+)?/,\n        operator: /--?|-=|\\+\\+?|\\+=|!=?|~|\\*\\*?|\\*=|\\/=?|%=?|<<=?|>>=?|<=?|>=?|==?|&&?|&=|\\^=?|\\|\\|?|\\|=|\\?|:/,\n        punctuation: /\\(\\(?|\\)\\)?|,|;/\n      }\n    }, {\n      pattern: /\\$\\([^)]+\\)|`[^`]+`/,\n      greedy: !0,\n      inside: {\n        variable: /^\\$\\(|^`|\\)$|`$/\n      }\n    }, /\\$(?:[\\w#?*!@]+|\\{[^}]+\\})/i]\n  };\n  e.languages.bash = {\n    shebang: {\n      pattern: /^#!\\s*\\/bin\\/bash|^#!\\s*\\/bin\\/sh/,\n      alias: \"important\"\n    },\n    comment: {\n      pattern: /(^|[^\"{\\\\])#.*/,\n      lookbehind: !0\n    },\n    string: [{\n      pattern: /((?:^|[^<])<<\\s*)[\"']?(\\w+?)[\"']?\\s*\\r?\\n(?:[\\s\\S])*?\\r?\\n\\2/,\n      lookbehind: !0,\n      greedy: !0,\n      inside: t\n    }, {\n      pattern: /([\"'])(?:\\\\[\\s\\S]|\\$\\([^)]+\\)|`[^`]+`|(?!\\1)[^\\\\])*\\1/,\n      greedy: !0,\n      inside: t\n    }],\n    variable: t.variable,\n    function: {\n      pattern: /(^|[\\s;|&])(?:alias|apropos|apt-get|aptitude|aspell|awk|basename|bash|bc|bg|builtin|bzip2|cal|cat|cd|cfdisk|chgrp|chmod|chown|chroot|chkconfig|cksum|clear|cmp|comm|command|cp|cron|crontab|csplit|curl|cut|date|dc|dd|ddrescue|df|diff|diff3|dig|dir|dircolors|dirname|dirs|dmesg|du|egrep|eject|enable|env|ethtool|eval|exec|expand|expect|export|expr|fdformat|fdisk|fg|fgrep|file|find|fmt|fold|format|free|fsck|ftp|fuser|gawk|getopts|git|grep|groupadd|groupdel|groupmod|groups|gzip|hash|head|help|hg|history|hostname|htop|iconv|id|ifconfig|ifdown|ifup|import|install|jobs|join|kill|killall|less|link|ln|locate|logname|logout|look|lpc|lpr|lprint|lprintd|lprintq|lprm|ls|lsof|make|man|mkdir|mkfifo|mkisofs|mknod|more|most|mount|mtools|mtr|mv|mmv|nano|netstat|nice|nl|nohup|notify-send|npm|nslookup|open|op|passwd|paste|pathchk|ping|pkill|popd|pr|printcap|printenv|printf|ps|pushd|pv|pwd|quota|quotacheck|quotactl|ram|rar|rcp|read|readarray|readonly|reboot|rename|renice|remsync|rev|rm|rmdir|rsync|screen|scp|sdiff|sed|seq|service|sftp|shift|shopt|shutdown|sleep|slocate|sort|source|split|ssh|stat|strace|su|sudo|sum|suspend|sync|tail|tar|tee|test|time|timeout|times|touch|top|traceroute|trap|tr|tsort|tty|type|ulimit|umask|umount|unalias|uname|unexpand|uniq|units|unrar|unshar|uptime|useradd|userdel|usermod|users|uuencode|uudecode|v|vdir|vi|vmstat|wait|watch|wc|wget|whereis|which|who|whoami|write|xargs|xdg-open|yes|zip)(?=$|[\\s;|&])/,\n      lookbehind: !0\n    },\n    keyword: {\n      pattern: /(^|[\\s;|&])(?:let|:|\\.|if|then|else|elif|fi|for|break|continue|while|in|case|function|select|do|done|until|echo|exit|return|set|declare)(?=$|[\\s;|&])/,\n      lookbehind: !0\n    },\n    boolean: {\n      pattern: /(^|[\\s;|&])(?:true|false)(?=$|[\\s;|&])/,\n      lookbehind: !0\n    },\n    operator: /&&?|\\|\\|?|==?|!=?|<<<?|>>|<=?|>=?|=~/,\n    punctuation: /\\$?\\(\\(?|\\)\\)?|\\.\\.|[{}[\\];]/\n  };\n  var n = t.variable[1].inside;\n  n.string = e.languages.bash.string, n.function = e.languages.bash.function, n.keyword = e.languages.bash.keyword, n.boolean = e.languages.bash.boolean, n.operator = e.languages.bash.operator, n.punctuation = e.languages.bash.punctuation, e.languages.shell = e.languages.bash;\n}(Prism), Prism.languages.basic = {\n  comment: {\n    pattern: /(?:!|REM\\b).+/i,\n    inside: {\n      keyword: /^REM/i\n    }\n  },\n  string: {\n    pattern: /\"(?:\"\"|[!#$%&'()*,\\/:;<=>?^_ +\\-.A-Z\\d])*\"/i,\n    greedy: !0\n  },\n  number: /(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:E[+-]?\\d+)?/i,\n  keyword: /\\b(?:AS|BEEP|BLOAD|BSAVE|CALL(?: ABSOLUTE)?|CASE|CHAIN|CHDIR|CLEAR|CLOSE|CLS|COM|COMMON|CONST|DATA|DECLARE|DEF(?: FN| SEG|DBL|INT|LNG|SNG|STR)|DIM|DO|DOUBLE|ELSE|ELSEIF|END|ENVIRON|ERASE|ERROR|EXIT|FIELD|FILES|FOR|FUNCTION|GET|GOSUB|GOTO|IF|INPUT|INTEGER|IOCTL|KEY|KILL|LINE INPUT|LOCATE|LOCK|LONG|LOOP|LSET|MKDIR|NAME|NEXT|OFF|ON(?: COM| ERROR| KEY| TIMER)?|OPEN|OPTION BASE|OUT|POKE|PUT|READ|REDIM|REM|RESTORE|RESUME|RETURN|RMDIR|RSET|RUN|SHARED|SINGLE|SELECT CASE|SHELL|SLEEP|STATIC|STEP|STOP|STRING|SUB|SWAP|SYSTEM|THEN|TIMER|TO|TROFF|TRON|TYPE|UNLOCK|UNTIL|USING|VIEW PRINT|WAIT|WEND|WHILE|WRITE)(?:\\$|\\b)/i,\n  function: /\\b(?:ABS|ACCESS|ACOS|ANGLE|AREA|ARITHMETIC|ARRAY|ASIN|ASK|AT|ATN|BASE|BEGIN|BREAK|CAUSE|CEIL|CHR|CLIP|COLLATE|COLOR|CON|COS|COSH|COT|CSC|DATE|DATUM|DEBUG|DECIMAL|DEF|DEG|DEGREES|DELETE|DET|DEVICE|DISPLAY|DOT|ELAPSED|EPS|ERASABLE|EXLINE|EXP|EXTERNAL|EXTYPE|FILETYPE|FIXED|FP|GO|GRAPH|HANDLER|IDN|IMAGE|IN|INT|INTERNAL|IP|IS|KEYED|LBOUND|LCASE|LEFT|LEN|LENGTH|LET|LINE|LINES|LOG|LOG10|LOG2|LTRIM|MARGIN|MAT|MAX|MAXNUM|MID|MIN|MISSING|MOD|NATIVE|NUL|NUMERIC|OF|OPTION|ORD|ORGANIZATION|OUTIN|OUTPUT|PI|POINT|POINTER|POINTS|POS|PRINT|PROGRAM|PROMPT|RAD|RADIANS|RANDOMIZE|RECORD|RECSIZE|RECTYPE|RELATIVE|REMAINDER|REPEAT|REST|RETRY|REWRITE|RIGHT|RND|ROUND|RTRIM|SAME|SEC|SELECT|SEQUENTIAL|SET|SETTER|SGN|SIN|SINH|SIZE|SKIP|SQR|STANDARD|STATUS|STR|STREAM|STYLE|TAB|TAN|TANH|TEMPLATE|TEXT|THERE|TIME|TIMEOUT|TRACE|TRANSFORM|TRUNCATE|UBOUND|UCASE|USE|VAL|VARIABLE|VIEWPORT|WHEN|WINDOW|WITH|ZER|ZONEWIDTH)(?:\\$|\\b)/i,\n  operator: /<[=>]?|>=?|[+\\-*\\/^=&]|\\b(?:AND|EQV|IMP|NOT|OR|XOR)\\b/i,\n  punctuation: /[,;:()]/\n}, Prism.languages.vbnet = Prism.languages.extend(\"basic\", {\n  keyword: /(?:\\b(?:ADDHANDLER|ADDRESSOF|ALIAS|AND|ANDALSO|AS|BEEP|BLOAD|BOOLEAN|BSAVE|BYREF|BYTE|BYVAL|CALL(?: ABSOLUTE)?|CASE|CATCH|CBOOL|CBYTE|CCHAR|CDATE|CDEC|CDBL|CHAIN|CHAR|CHDIR|CINT|CLASS|CLEAR|CLNG|CLOSE|CLS|COBJ|COM|COMMON|CONST|CONTINUE|CSBYTE|CSHORT|CSNG|CSTR|CTYPE|CUINT|CULNG|CUSHORT|DATA|DATE|DECIMAL|DECLARE|DEFAULT|DEF(?: FN| SEG|DBL|INT|LNG|SNG|STR)|DELEGATE|DIM|DIRECTCAST|DO|DOUBLE|ELSE|ELSEIF|END|ENUM|ENVIRON|ERASE|ERROR|EVENT|EXIT|FALSE|FIELD|FILES|FINALLY|FOR(?: EACH)?|FRIEND|FUNCTION|GET|GETTYPE|GETXMLNAMESPACE|GLOBAL|GOSUB|GOTO|HANDLES|IF|IMPLEMENTS|IMPORTS|IN|INHERITS|INPUT|INTEGER|INTERFACE|IOCTL|IS|ISNOT|KEY|KILL|LINE INPUT|LET|LIB|LIKE|LOCATE|LOCK|LONG|LOOP|LSET|ME|MKDIR|MOD|MODULE|MUSTINHERIT|MUSTOVERRIDE|MYBASE|MYCLASS|NAME|NAMESPACE|NARROWING|NEW|NEXT|NOT|NOTHING|NOTINHERITABLE|NOTOVERRIDABLE|OBJECT|OF|OFF|ON(?: COM| ERROR| KEY| TIMER)?|OPERATOR|OPEN|OPTION(?: BASE)?|OPTIONAL|OR|ORELSE|OUT|OVERLOADS|OVERRIDABLE|OVERRIDES|PARAMARRAY|PARTIAL|POKE|PRIVATE|PROPERTY|PROTECTED|PUBLIC|PUT|RAISEEVENT|READ|READONLY|REDIM|REM|REMOVEHANDLER|RESTORE|RESUME|RETURN|RMDIR|RSET|RUN|SBYTE|SELECT(?: CASE)?|SET|SHADOWS|SHARED|SHORT|SINGLE|SHELL|SLEEP|STATIC|STEP|STOP|STRING|STRUCTURE|SUB|SYNCLOCK|SWAP|SYSTEM|THEN|THROW|TIMER|TO|TROFF|TRON|TRUE|TRY|TRYCAST|TYPE|TYPEOF|UINTEGER|ULONG|UNLOCK|UNTIL|USHORT|USING|VIEW PRINT|WAIT|WEND|WHEN|WHILE|WIDENING|WITH|WITHEVENTS|WRITE|WRITEONLY|XOR)|\\B(?:#CONST|#ELSE|#ELSEIF|#END|#IF))(?:\\$|\\b)/i,\n  comment: [{\n    pattern: /(?:!|REM\\b).+/i,\n    inside: {\n      keyword: /^REM/i\n    }\n  }, {\n    pattern: /(^|[^\\\\:])'.*/,\n    lookbehind: !0\n  }]\n}), function (e) {\n  var t = /%%?[~:\\w]+%?|!\\S+!/,\n      n = {\n    pattern: /\\/[a-z?]+(?=[ :]|$):?|-[a-z]\\b|--[a-z-]+\\b/im,\n    alias: \"attr-name\",\n    inside: {\n      punctuation: /:/\n    }\n  },\n      a = /\"[^\"]*\"/,\n      i = /(?:\\b|-)\\d+\\b/;\n  e.languages.batch = {\n    comment: [/^::.*/m, {\n      pattern: /((?:^|[&(])[ \\t]*)rem\\b(?:[^^&)\\r\\n]|\\^(?:\\r\\n|[\\s\\S]))*/im,\n      lookbehind: !0\n    }],\n    label: {\n      pattern: /^:.*/m,\n      alias: \"property\"\n    },\n    command: [{\n      pattern: /((?:^|[&(])[ \\t]*)for(?: ?\\/[a-z?](?:[ :](?:\"[^\"]*\"|\\S+))?)* \\S+ in \\([^)]+\\) do/im,\n      lookbehind: !0,\n      inside: {\n        keyword: /^for\\b|\\b(?:in|do)\\b/i,\n        string: a,\n        parameter: n,\n        variable: t,\n        number: i,\n        punctuation: /[()',]/\n      }\n    }, {\n      pattern: /((?:^|[&(])[ \\t]*)if(?: ?\\/[a-z?](?:[ :](?:\"[^\"]*\"|\\S+))?)* (?:not )?(?:cmdextversion \\d+|defined \\w+|errorlevel \\d+|exist \\S+|(?:\"[^\"]*\"|\\S+)?(?:==| (?:equ|neq|lss|leq|gtr|geq) )(?:\"[^\"]*\"|\\S+))/im,\n      lookbehind: !0,\n      inside: {\n        keyword: /^if\\b|\\b(?:not|cmdextversion|defined|errorlevel|exist)\\b/i,\n        string: a,\n        parameter: n,\n        variable: t,\n        number: i,\n        operator: /\\^|==|\\b(?:equ|neq|lss|leq|gtr|geq)\\b/i\n      }\n    }, {\n      pattern: /((?:^|[&()])[ \\t]*)else\\b/im,\n      lookbehind: !0,\n      inside: {\n        keyword: /^else\\b/i\n      }\n    }, {\n      pattern: /((?:^|[&(])[ \\t]*)set(?: ?\\/[a-z](?:[ :](?:\"[^\"]*\"|\\S+))?)* (?:[^^&)\\r\\n]|\\^(?:\\r\\n|[\\s\\S]))*/im,\n      lookbehind: !0,\n      inside: {\n        keyword: /^set\\b/i,\n        string: a,\n        parameter: n,\n        variable: [t, /\\w+(?=(?:[*\\/%+\\-&^|]|<<|>>)?=)/],\n        number: i,\n        operator: /[*\\/%+\\-&^|]=?|<<=?|>>=?|[!~_=]/,\n        punctuation: /[()',]/\n      }\n    }, {\n      pattern: /((?:^|[&(])[ \\t]*@?)\\w+\\b(?:[^^&)\\r\\n]|\\^(?:\\r\\n|[\\s\\S]))*/im,\n      lookbehind: !0,\n      inside: {\n        keyword: /^\\w+\\b/i,\n        string: a,\n        parameter: n,\n        label: {\n          pattern: /(^\\s*):\\S+/m,\n          lookbehind: !0,\n          alias: \"property\"\n        },\n        variable: t,\n        number: i,\n        operator: /\\^/\n      }\n    }],\n    operator: /[&@]/,\n    punctuation: /[()']/\n  };\n}(Prism), Prism.languages.bison = Prism.languages.extend(\"c\", {}), Prism.languages.insertBefore(\"bison\", \"comment\", {\n  bison: {\n    pattern: /^[\\s\\S]*?%%[\\s\\S]*?%%/,\n    inside: {\n      c: {\n        pattern: /%\\{[\\s\\S]*?%\\}|\\{(?:\\{[^}]*\\}|[^{}])*\\}/,\n        inside: {\n          delimiter: {\n            pattern: /^%?\\{|%?\\}$/,\n            alias: \"punctuation\"\n          },\n          \"bison-variable\": {\n            pattern: /[$@](?:<[^\\s>]+>)?[\\w$]+/,\n            alias: \"variable\",\n            inside: {\n              punctuation: /<|>/\n            }\n          },\n          rest: Prism.languages.c\n        }\n      },\n      comment: Prism.languages.c.comment,\n      string: Prism.languages.c.string,\n      property: /\\S+(?=:)/,\n      keyword: /%\\w+/,\n      number: {\n        pattern: /(^|[^@])\\b(?:0x[\\da-f]+|\\d+)/i,\n        lookbehind: !0\n      },\n      punctuation: /%[%?]|[|:;\\[\\]<>]/\n    }\n  }\n}), Prism.languages.brainfuck = {\n  pointer: {\n    pattern: /<|>/,\n    alias: \"keyword\"\n  },\n  increment: {\n    pattern: /\\+/,\n    alias: \"inserted\"\n  },\n  decrement: {\n    pattern: /-/,\n    alias: \"deleted\"\n  },\n  branching: {\n    pattern: /\\[|\\]/,\n    alias: \"important\"\n  },\n  operator: /[.,]/,\n  comment: /\\S+/\n}, Prism.languages.bro = {\n  comment: {\n    pattern: /(^|[^\\\\$])#.*/,\n    lookbehind: !0,\n    inside: {\n      italic: /\\b(?:TODO|FIXME|XXX)\\b/\n    }\n  },\n  string: {\n    pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: !0\n  },\n  boolean: /\\b[TF]\\b/,\n  function: {\n    pattern: /(?:function|hook|event) \\w+(?:::\\w+)?/,\n    inside: {\n      keyword: /^(?:function|hook|event)/\n    }\n  },\n  variable: {\n    pattern: /(?:global|local) \\w+/i,\n    inside: {\n      keyword: /(?:global|local)/\n    }\n  },\n  builtin: /(?:@(?:load(?:-(?:sigs|plugin))?|unload|prefixes|ifn?def|else|(?:end)?if|DIR|FILENAME))|(?:&?(?:redef|priority|log|optional|default|add_func|delete_func|expire_func|read_expire|write_expire|create_expire|synchronized|persistent|rotate_interval|rotate_size|encrypt|raw_output|mergeable|group|error_handler|type_column))/,\n  constant: {\n    pattern: /const \\w+/i,\n    inside: {\n      keyword: /const/\n    }\n  },\n  keyword: /\\b(?:break|next|continue|alarm|using|of|add|delete|export|print|return|schedule|when|timeout|addr|any|bool|count|double|enum|file|int|interval|pattern|opaque|port|record|set|string|subnet|table|time|vector|for|if|else|in|module|function)\\b/,\n  operator: /--?|\\+\\+?|!=?=?|<=?|>=?|==?=?|&&|\\|\\|?|\\?|\\*|\\/|~|\\^|%/,\n  number: /\\b0x[\\da-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n  punctuation: /[{}[\\];(),.:]/\n}, Prism.languages.clojure = {\n  comment: /;+.*/,\n  string: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n  operator: /(?:::|[:|'])\\b[a-z][\\w*+!?-]*\\b/i,\n  keyword: {\n    pattern: /([^\\w+*'?-])(?:def|if|do|let|\\.\\.|quote|var|->>|->|fn|loop|recur|throw|try|monitor-enter|\\.|new|set!|def\\-|defn|defn\\-|defmacro|defmulti|defmethod|defstruct|defonce|declare|definline|definterface|defprotocol|==|defrecord|>=|deftype|<=|defproject|ns|\\*|\\+|\\-|\\/|<|=|>|accessor|agent|agent-errors|aget|alength|all-ns|alter|and|append-child|apply|array-map|aset|aset-boolean|aset-byte|aset-char|aset-double|aset-float|aset-int|aset-long|aset-short|assert|assoc|await|await-for|bean|binding|bit-and|bit-not|bit-or|bit-shift-left|bit-shift-right|bit-xor|boolean|branch\\?|butlast|byte|cast|char|children|class|clear-agent-errors|comment|commute|comp|comparator|complement|concat|conj|cons|constantly|cond|if-not|construct-proxy|contains\\?|count|create-ns|create-struct|cycle|dec|deref|difference|disj|dissoc|distinct|doall|doc|dorun|doseq|dosync|dotimes|doto|double|down|drop|drop-while|edit|end\\?|ensure|eval|every\\?|false\\?|ffirst|file-seq|filter|find|find-doc|find-ns|find-var|first|float|flush|for|fnseq|frest|gensym|get-proxy-class|get|hash-map|hash-set|identical\\?|identity|if-let|import|in-ns|inc|index|insert-child|insert-left|insert-right|inspect-table|inspect-tree|instance\\?|int|interleave|intersection|into|into-array|iterate|join|key|keys|keyword|keyword\\?|last|lazy-cat|lazy-cons|left|lefts|line-seq|list\\*|list|load|load-file|locking|long|loop|macroexpand|macroexpand-1|make-array|make-node|map|map-invert|map\\?|mapcat|max|max-key|memfn|merge|merge-with|meta|min|min-key|name|namespace|neg\\?|new|newline|next|nil\\?|node|not|not-any\\?|not-every\\?|not=|ns-imports|ns-interns|ns-map|ns-name|ns-publics|ns-refers|ns-resolve|ns-unmap|nth|nthrest|or|parse|partial|path|peek|pop|pos\\?|pr|pr-str|print|print-str|println|println-str|prn|prn-str|project|proxy|proxy-mappings|quot|rand|rand-int|range|re-find|re-groups|re-matcher|re-matches|re-pattern|re-seq|read|read-line|reduce|ref|ref-set|refer|rem|remove|remove-method|remove-ns|rename|rename-keys|repeat|replace|replicate|resolve|rest|resultset-seq|reverse|rfirst|right|rights|root|rrest|rseq|second|select|select-keys|send|send-off|seq|seq-zip|seq\\?|set|short|slurp|some|sort|sort-by|sorted-map|sorted-map-by|sorted-set|special-symbol\\?|split-at|split-with|str|string\\?|struct|struct-map|subs|subvec|symbol|symbol\\?|sync|take|take-nth|take-while|test|time|to-array|to-array-2d|tree-seq|true\\?|union|up|update-proxy|val|vals|var-get|var-set|var\\?|vector|vector-zip|vector\\?|when|when-first|when-let|when-not|with-local-vars|with-meta|with-open|with-out-str|xml-seq|xml-zip|zero\\?|zipmap|zipper)(?=[^\\w+*'?-])/,\n    lookbehind: !0\n  },\n  boolean: /\\b(?:true|false|nil)\\b/,\n  number: /\\b[0-9A-Fa-f]+\\b/,\n  punctuation: /[{}\\[\\](),]/\n}, function (e) {\n  var t = /#(?!\\{).+/,\n      n = {\n    pattern: /#\\{[^}]+\\}/,\n    alias: \"variable\"\n  };\n  e.languages.coffeescript = e.languages.extend(\"javascript\", {\n    comment: t,\n    string: [{\n      pattern: /'(?:\\\\[\\s\\S]|[^\\\\'])*'/,\n      greedy: !0\n    }, {\n      pattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,\n      greedy: !0,\n      inside: {\n        interpolation: n\n      }\n    }],\n    keyword: /\\b(?:and|break|by|catch|class|continue|debugger|delete|do|each|else|extend|extends|false|finally|for|if|in|instanceof|is|isnt|let|loop|namespace|new|no|not|null|of|off|on|or|own|return|super|switch|then|this|throw|true|try|typeof|undefined|unless|until|when|while|window|with|yes|yield)\\b/,\n    \"class-member\": {\n      pattern: /@(?!\\d)\\w+/,\n      alias: \"variable\"\n    }\n  }), e.languages.insertBefore(\"coffeescript\", \"comment\", {\n    \"multiline-comment\": {\n      pattern: /###[\\s\\S]+?###/,\n      alias: \"comment\"\n    },\n    \"block-regex\": {\n      pattern: /\\/{3}[\\s\\S]*?\\/{3}/,\n      alias: \"regex\",\n      inside: {\n        comment: t,\n        interpolation: n\n      }\n    }\n  }), e.languages.insertBefore(\"coffeescript\", \"string\", {\n    \"inline-javascript\": {\n      pattern: /`(?:\\\\[\\s\\S]|[^\\\\`])*`/,\n      inside: {\n        delimiter: {\n          pattern: /^`|`$/,\n          alias: \"punctuation\"\n        },\n        rest: e.languages.javascript\n      }\n    },\n    \"multiline-string\": [{\n      pattern: /'''[\\s\\S]*?'''/,\n      greedy: !0,\n      alias: \"string\"\n    }, {\n      pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n      greedy: !0,\n      alias: \"string\",\n      inside: {\n        interpolation: n\n      }\n    }]\n  }), e.languages.insertBefore(\"coffeescript\", \"keyword\", {\n    property: /(?!\\d)\\w+(?=\\s*:(?!:))/\n  }), delete e.languages.coffeescript[\"template-string\"];\n}(Prism);\nvar prismCore = createCommonjsModule(function (e) {\n  var t = \"undefined\" != typeof window ? window : \"undefined\" != typeof WorkerGlobalScope && self instanceof WorkerGlobalScope ? self : {},\n      n = function () {\n    var e = /\\blang(?:uage)?-([\\w-]+)\\b/i,\n        n = 0,\n        a = t.Prism = {\n      manual: t.Prism && t.Prism.manual,\n      disableWorkerMessageHandler: t.Prism && t.Prism.disableWorkerMessageHandler,\n      util: {\n        encode: function encode(e) {\n          return e instanceof i ? new i(e.type, a.util.encode(e.content), e.alias) : \"Array\" === a.util.type(e) ? e.map(a.util.encode) : e.replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/\\u00a0/g, \" \");\n        },\n        type: function type(e) {\n          return Object.prototype.toString.call(e).match(/\\[object (\\w+)\\]/)[1];\n        },\n        objId: function objId(e) {\n          return e.__id || Object.defineProperty(e, \"__id\", {\n            value: ++n\n          }), e.__id;\n        },\n        clone: function clone(e, t) {\n          var n = a.util.type(e);\n\n          switch (t = t || {}, n) {\n            case \"Object\":\n              if (t[a.util.objId(e)]) return t[a.util.objId(e)];\n              var i = {};\n\n              for (var r in t[a.util.objId(e)] = i, e) {\n                e.hasOwnProperty(r) && (i[r] = a.util.clone(e[r], t));\n              }\n\n              return i;\n\n            case \"Array\":\n              return t[a.util.objId(e)] ? t[a.util.objId(e)] : (i = [], t[a.util.objId(e)] = i, e.forEach(function (e, n) {\n                i[n] = a.util.clone(e, t);\n              }), i);\n          }\n\n          return e;\n        }\n      },\n      languages: {\n        extend: function extend(e, t) {\n          var n = a.util.clone(a.languages[e]);\n\n          for (var i in t) {\n            n[i] = t[i];\n          }\n\n          return n;\n        },\n        insertBefore: function insertBefore(e, t, n, i) {\n          var r = (i = i || a.languages)[e];\n\n          if (2 == arguments.length) {\n            for (var o in n = arguments[1]) {\n              n.hasOwnProperty(o) && (r[o] = n[o]);\n            }\n\n            return r;\n          }\n\n          var s = {};\n\n          for (var l in r) {\n            if (r.hasOwnProperty(l)) {\n              if (l == t) for (var o in n) {\n                n.hasOwnProperty(o) && (s[o] = n[o]);\n              }\n              s[l] = r[l];\n            }\n          }\n\n          return a.languages.DFS(a.languages, function (t, n) {\n            n === i[e] && t != e && (this[t] = s);\n          }), i[e] = s;\n        },\n        DFS: function DFS(e, t, n, i) {\n          for (var r in i = i || {}, e) {\n            e.hasOwnProperty(r) && (t.call(e, r, e[r], n || r), \"Object\" !== a.util.type(e[r]) || i[a.util.objId(e[r])] ? \"Array\" !== a.util.type(e[r]) || i[a.util.objId(e[r])] || (i[a.util.objId(e[r])] = !0, a.languages.DFS(e[r], t, r, i)) : (i[a.util.objId(e[r])] = !0, a.languages.DFS(e[r], t, null, i)));\n          }\n        }\n      },\n      plugins: {},\n      highlightAll: function highlightAll(e, t) {\n        a.highlightAllUnder(document, e, t);\n      },\n      highlightAllUnder: function highlightAllUnder(e, t, n) {\n        var i = {\n          callback: n,\n          selector: 'code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code'\n        };\n        a.hooks.run(\"before-highlightall\", i);\n\n        for (var r, o = i.elements || e.querySelectorAll(i.selector), s = 0; r = o[s++];) {\n          a.highlightElement(r, !0 === t, i.callback);\n        }\n      },\n      highlightElement: function highlightElement(n, i, r) {\n        for (var o, s, l = n; l && !e.test(l.className);) {\n          l = l.parentNode;\n        }\n\n        l && (o = (l.className.match(e) || [, \"\"])[1].toLowerCase(), s = a.languages[o]), n.className = n.className.replace(e, \"\").replace(/\\s+/g, \" \") + \" language-\" + o, n.parentNode && /pre/i.test((l = n.parentNode).nodeName) && (l.className = l.className.replace(e, \"\").replace(/\\s+/g, \" \") + \" language-\" + o);\n        var d = {\n          element: n,\n          language: o,\n          grammar: s,\n          code: n.textContent\n        };\n        if (a.hooks.run(\"before-sanity-check\", d), !d.code || !d.grammar) return d.code && (a.hooks.run(\"before-highlight\", d), d.element.textContent = d.code, a.hooks.run(\"after-highlight\", d)), void a.hooks.run(\"complete\", d);\n\n        if (a.hooks.run(\"before-highlight\", d), i && t.Worker) {\n          var c = new Worker(a.filename);\n          c.onmessage = function (e) {\n            d.highlightedCode = e.data, a.hooks.run(\"before-insert\", d), d.element.innerHTML = d.highlightedCode, r && r.call(d.element), a.hooks.run(\"after-highlight\", d), a.hooks.run(\"complete\", d);\n          }, c.postMessage(JSON.stringify({\n            language: d.language,\n            code: d.code,\n            immediateClose: !0\n          }));\n        } else d.highlightedCode = a.highlight(d.code, d.grammar, d.language), a.hooks.run(\"before-insert\", d), d.element.innerHTML = d.highlightedCode, r && r.call(n), a.hooks.run(\"after-highlight\", d), a.hooks.run(\"complete\", d);\n      },\n      highlight: function highlight(e, t, n) {\n        var r = {\n          code: e,\n          grammar: t,\n          language: n\n        };\n        return a.hooks.run(\"before-tokenize\", r), r.tokens = a.tokenize(r.code, r.grammar), a.hooks.run(\"after-tokenize\", r), i.stringify(a.util.encode(r.tokens), r.language);\n      },\n      matchGrammar: function matchGrammar(e, t, n, i, r, o, s) {\n        var l = a.Token;\n\n        for (var d in n) {\n          if (n.hasOwnProperty(d) && n[d]) {\n            if (d == s) return;\n            var c = n[d];\n            c = \"Array\" === a.util.type(c) ? c : [c];\n\n            for (var p = 0; p < c.length; ++p) {\n              var u = c[p],\n                  g = u.inside,\n                  m = !!u.lookbehind,\n                  b = !!u.greedy,\n                  f = 0,\n                  h = u.alias;\n\n              if (b && !u.pattern.global) {\n                var E = u.pattern.toString().match(/[imuy]*$/)[0];\n                u.pattern = RegExp(u.pattern.source, E + \"g\");\n              }\n\n              u = u.pattern || u;\n\n              for (var S = i, y = r; S < t.length; y += t[S].length, ++S) {\n                var _ = t[S];\n                if (t.length > e.length) return;\n\n                if (!(_ instanceof l)) {\n                  if (b && S != t.length - 1) {\n                    if (u.lastIndex = y, !(w = u.exec(e))) break;\n\n                    for (var A = w.index + (m ? w[1].length : 0), T = w.index + w[0].length, I = S, R = y, v = t.length; I < v && (R < T || !t[I].type && !t[I - 1].greedy); ++I) {\n                      A >= (R += t[I].length) && (++S, y = R);\n                    }\n\n                    if (t[S] instanceof l) continue;\n                    C = I - S, _ = e.slice(y, R), w.index -= y;\n                  } else {\n                    u.lastIndex = 0;\n                    var w = u.exec(_),\n                        C = 1;\n                  }\n\n                  if (w) {\n                    m && (f = w[1] ? w[1].length : 0), T = (A = w.index + f) + (w = w[0].slice(f)).length;\n\n                    var N = _.slice(0, A),\n                        k = _.slice(T),\n                        P = [S, C];\n\n                    N && (++S, y += N.length, P.push(N));\n                    var L = new l(d, g ? a.tokenize(w, g) : w, h, w, b);\n                    if (P.push(L), k && P.push(k), Array.prototype.splice.apply(t, P), 1 != C && a.matchGrammar(e, t, n, S, y, !0, d), o) break;\n                  } else if (o) break;\n                }\n              }\n            }\n          }\n        }\n      },\n      tokenize: function tokenize(e, t, n) {\n        var i = [e],\n            r = t.rest;\n\n        if (r) {\n          for (var o in r) {\n            t[o] = r[o];\n          }\n\n          delete t.rest;\n        }\n\n        return a.matchGrammar(e, i, t, 0, 0, !1), i;\n      },\n      hooks: {\n        all: {},\n        add: function add(e, t) {\n          var n = a.hooks.all;\n          n[e] = n[e] || [], n[e].push(t);\n        },\n        run: function run(e, t) {\n          var n = a.hooks.all[e];\n          if (n && n.length) for (var i, r = 0; i = n[r++];) {\n            i(t);\n          }\n        }\n      }\n    },\n        i = a.Token = function (e, t, n, a, i) {\n      this.type = e, this.content = t, this.alias = n, this.length = 0 | (a || \"\").length, this.greedy = !!i;\n    };\n\n    if (i.stringify = function (e, t, n) {\n      if (\"string\" == typeof e) return e;\n      if (\"Array\" === a.util.type(e)) return e.map(function (n) {\n        return i.stringify(n, t, e);\n      }).join(\"\");\n      var r = {\n        type: e.type,\n        content: i.stringify(e.content, t, n),\n        tag: \"span\",\n        classes: [\"token\", e.type],\n        attributes: {},\n        language: t,\n        parent: n\n      };\n\n      if (e.alias) {\n        var o = \"Array\" === a.util.type(e.alias) ? e.alias : [e.alias];\n        Array.prototype.push.apply(r.classes, o);\n      }\n\n      a.hooks.run(\"wrap\", r);\n      var s = Object.keys(r.attributes).map(function (e) {\n        return e + '=\"' + (r.attributes[e] || \"\").replace(/\"/g, \"&quot;\") + '\"';\n      }).join(\" \");\n      return \"<\" + r.tag + ' class=\"' + r.classes.join(\" \") + '\"' + (s ? \" \" + s : \"\") + \">\" + r.content + \"</\" + r.tag + \">\";\n    }, !t.document) return t.addEventListener ? (a.disableWorkerMessageHandler || t.addEventListener(\"message\", function (e) {\n      var n = JSON.parse(e.data),\n          i = n.language,\n          r = n.immediateClose;\n      t.postMessage(a.highlight(n.code, a.languages[i], i)), r && t.close();\n    }, !1), t.Prism) : t.Prism;\n    var r = document.currentScript || [].slice.call(document.getElementsByTagName(\"script\")).pop();\n    return r && (a.filename = r.src, a.manual || r.hasAttribute(\"data-manual\") || (\"loading\" !== document.readyState ? window.requestAnimationFrame ? window.requestAnimationFrame(a.highlightAll) : window.setTimeout(a.highlightAll, 16) : document.addEventListener(\"DOMContentLoaded\", a.highlightAll))), t.Prism;\n  }();\n\n  e.exports && (e.exports = n), void 0 !== commonjsGlobal && (commonjsGlobal.Prism = n);\n});\nPrism.languages.clike = {\n  comment: [{\n    pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n    lookbehind: !0\n  }, {\n    pattern: /(^|[^\\\\:])\\/\\/.*/,\n    lookbehind: !0,\n    greedy: !0\n  }],\n  string: {\n    pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: !0\n  },\n  \"class-name\": {\n    pattern: /((?:\\b(?:class|interface|extends|implements|trait|instanceof|new)\\s+)|(?:catch\\s+\\())[\\w.\\\\]+/i,\n    lookbehind: !0,\n    inside: {\n      punctuation: /[.\\\\]/\n    }\n  },\n  keyword: /\\b(?:if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\\b/,\n  boolean: /\\b(?:true|false)\\b/,\n  function: /[a-z0-9_]+(?=\\()/i,\n  number: /\\b0x[\\da-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n  operator: /--?|\\+\\+?|!=?=?|<=?|>=?|==?=?|&&?|\\|\\|?|\\?|\\*|\\/|~|\\^|%/,\n  punctuation: /[{}[\\];(),.:]/\n}, function (e) {\n  e.languages.ruby = e.languages.extend(\"clike\", {\n    comment: [/#.*/, {\n      pattern: /^=begin(?:\\r?\\n|\\r)(?:.*(?:\\r?\\n|\\r))*?=end/m,\n      greedy: !0\n    }],\n    keyword: /\\b(?:alias|and|BEGIN|begin|break|case|class|def|define_method|defined|do|each|else|elsif|END|end|ensure|false|for|if|in|module|new|next|nil|not|or|protected|private|public|raise|redo|require|rescue|retry|return|self|super|then|throw|true|undef|unless|until|when|while|yield)\\b/\n  });\n  var t = {\n    pattern: /#\\{[^}]+\\}/,\n    inside: {\n      delimiter: {\n        pattern: /^#\\{|\\}$/,\n        alias: \"tag\"\n      },\n      rest: e.languages.ruby\n    }\n  };\n  e.languages.insertBefore(\"ruby\", \"keyword\", {\n    regex: [{\n      pattern: /%r([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1[gim]{0,3}/,\n      greedy: !0,\n      inside: {\n        interpolation: t\n      }\n    }, {\n      pattern: /%r\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)[gim]{0,3}/,\n      greedy: !0,\n      inside: {\n        interpolation: t\n      }\n    }, {\n      pattern: /%r\\{(?:[^#{}\\\\]|#(?:\\{[^}]+\\})?|\\\\[\\s\\S])*\\}[gim]{0,3}/,\n      greedy: !0,\n      inside: {\n        interpolation: t\n      }\n    }, {\n      pattern: /%r\\[(?:[^\\[\\]\\\\]|\\\\[\\s\\S])*\\][gim]{0,3}/,\n      greedy: !0,\n      inside: {\n        interpolation: t\n      }\n    }, {\n      pattern: /%r<(?:[^<>\\\\]|\\\\[\\s\\S])*>[gim]{0,3}/,\n      greedy: !0,\n      inside: {\n        interpolation: t\n      }\n    }, {\n      pattern: /(^|[^\\/])\\/(?!\\/)(\\[.+?]|\\\\.|[^\\/\\\\\\r\\n])+\\/[gim]{0,3}(?=\\s*($|[\\r\\n,.;})]))/,\n      lookbehind: !0,\n      greedy: !0\n    }],\n    variable: /[@$]+[a-zA-Z_]\\w*(?:[?!]|\\b)/,\n    symbol: {\n      pattern: /(^|[^:]):[a-zA-Z_]\\w*(?:[?!]|\\b)/,\n      lookbehind: !0\n    }\n  }), e.languages.insertBefore(\"ruby\", \"number\", {\n    builtin: /\\b(?:Array|Bignum|Binding|Class|Continuation|Dir|Exception|FalseClass|File|Stat|Fixnum|Float|Hash|Integer|IO|MatchData|Method|Module|NilClass|Numeric|Object|Proc|Range|Regexp|String|Struct|TMS|Symbol|ThreadGroup|Thread|Time|TrueClass)\\b/,\n    constant: /\\b[A-Z]\\w*(?:[?!]|\\b)/\n  }), e.languages.ruby.string = [{\n    pattern: /%[qQiIwWxs]?([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/,\n    greedy: !0,\n    inside: {\n      interpolation: t\n    }\n  }, {\n    pattern: /%[qQiIwWxs]?\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)/,\n    greedy: !0,\n    inside: {\n      interpolation: t\n    }\n  }, {\n    pattern: /%[qQiIwWxs]?\\{(?:[^#{}\\\\]|#(?:\\{[^}]+\\})?|\\\\[\\s\\S])*\\}/,\n    greedy: !0,\n    inside: {\n      interpolation: t\n    }\n  }, {\n    pattern: /%[qQiIwWxs]?\\[(?:[^\\[\\]\\\\]|\\\\[\\s\\S])*\\]/,\n    greedy: !0,\n    inside: {\n      interpolation: t\n    }\n  }, {\n    pattern: /%[qQiIwWxs]?<(?:[^<>\\\\]|\\\\[\\s\\S])*>/,\n    greedy: !0,\n    inside: {\n      interpolation: t\n    }\n  }, {\n    pattern: /(\"|')(?:#\\{[^}]+\\}|\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: !0,\n    inside: {\n      interpolation: t\n    }\n  }];\n}(Prism), function (e) {\n  e.languages.crystal = e.languages.extend(\"ruby\", {\n    keyword: [/\\b(?:abstract|alias|as|asm|begin|break|case|class|def|do|else|elsif|end|ensure|enum|extend|for|fun|if|include|instance_sizeof|lib|macro|module|next|of|out|pointerof|private|protected|rescue|return|require|select|self|sizeof|struct|super|then|type|typeof|uninitialized|union|unless|until|when|while|with|yield|__DIR__|__END_LINE__|__FILE__|__LINE__)\\b/, {\n      pattern: /(\\.\\s*)(?:is_a|responds_to)\\?/,\n      lookbehind: !0\n    }],\n    number: /\\b(?:0b[01_]*[01]|0o[0-7_]*[0-7]|0x[\\da-fA-F_]*[\\da-fA-F]|(?:\\d(?:[\\d_]*\\d)?)(?:\\.[\\d_]*\\d)?(?:[eE][+-]?[\\d_]*\\d)?)(?:_(?:[uif](?:8|16|32|64))?)?\\b/\n  }), e.languages.insertBefore(\"crystal\", \"string\", {\n    attribute: {\n      pattern: /@\\[.+?\\]/,\n      alias: \"attr-name\",\n      inside: {\n        delimiter: {\n          pattern: /^@\\[|\\]$/,\n          alias: \"tag\"\n        },\n        rest: e.languages.crystal\n      }\n    },\n    expansion: [{\n      pattern: /\\{\\{.+?\\}\\}/,\n      inside: {\n        delimiter: {\n          pattern: /^\\{\\{|\\}\\}$/,\n          alias: \"tag\"\n        },\n        rest: e.languages.crystal\n      }\n    }, {\n      pattern: /\\{%.+?%\\}/,\n      inside: {\n        delimiter: {\n          pattern: /^\\{%|%\\}$/,\n          alias: \"tag\"\n        },\n        rest: e.languages.crystal\n      }\n    }]\n  });\n}(Prism), Prism.languages.csharp = Prism.languages.extend(\"clike\", {\n  keyword: /\\b(?:abstract|add|alias|as|ascending|async|await|base|bool|break|byte|case|catch|char|checked|class|const|continue|decimal|default|delegate|descending|do|double|dynamic|else|enum|event|explicit|extern|false|finally|fixed|float|for|foreach|from|get|global|goto|group|if|implicit|in|int|interface|internal|into|is|join|let|lock|long|namespace|new|null|object|operator|orderby|out|override|params|partial|private|protected|public|readonly|ref|remove|return|sbyte|sealed|select|set|short|sizeof|stackalloc|static|string|struct|switch|this|throw|true|try|typeof|uint|ulong|unchecked|unsafe|ushort|using|value|var|virtual|void|volatile|where|while|yield)\\b/,\n  string: [{\n    pattern: /@(\"|')(?:\\1\\1|\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\n    greedy: !0\n  }, {\n    pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*?\\1/,\n    greedy: !0\n  }],\n  \"class-name\": [{\n    pattern: /\\b[A-Z]\\w*(?:\\.\\w+)*\\b(?=\\s+\\w+)/,\n    inside: {\n      punctuation: /\\./\n    }\n  }, {\n    pattern: /(\\[)[A-Z]\\w*(?:\\.\\w+)*\\b/,\n    lookbehind: !0,\n    inside: {\n      punctuation: /\\./\n    }\n  }, {\n    pattern: /(\\b(?:class|interface)\\s+[A-Z]\\w*(?:\\.\\w+)*\\s*:\\s*)[A-Z]\\w*(?:\\.\\w+)*\\b/,\n    lookbehind: !0,\n    inside: {\n      punctuation: /\\./\n    }\n  }, {\n    pattern: /((?:\\b(?:class|interface|new)\\s+)|(?:catch\\s+\\())[A-Z]\\w*(?:\\.\\w+)*\\b/,\n    lookbehind: !0,\n    inside: {\n      punctuation: /\\./\n    }\n  }],\n  number: /\\b0x[\\da-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)f?/i\n}), Prism.languages.insertBefore(\"csharp\", \"class-name\", {\n  \"generic-method\": {\n    pattern: /\\w+\\s*<[^>\\r\\n]+?>\\s*(?=\\()/,\n    inside: {\n      function: /^\\w+/,\n      \"class-name\": {\n        pattern: /\\b[A-Z]\\w*(?:\\.\\w+)*\\b/,\n        inside: {\n          punctuation: /\\./\n        }\n      },\n      keyword: Prism.languages.csharp.keyword,\n      punctuation: /[<>(),.:]/\n    }\n  },\n  preprocessor: {\n    pattern: /(^\\s*)#.*/m,\n    lookbehind: !0,\n    alias: \"property\",\n    inside: {\n      directive: {\n        pattern: /(\\s*#)\\b(?:define|elif|else|endif|endregion|error|if|line|pragma|region|undef|warning)\\b/,\n        lookbehind: !0,\n        alias: \"keyword\"\n      }\n    }\n  }\n}), Prism.languages.dotnet = Prism.languages.csharp, Prism.languages[\"markup-templating\"] = {}, Object.defineProperties(Prism.languages[\"markup-templating\"], {\n  buildPlaceholders: {\n    value: function value(e, t, n, a) {\n      e.language === t && (e.tokenStack = [], e.code = e.code.replace(n, function (n) {\n        if (\"function\" == typeof a && !a(n)) return n;\n\n        for (var i = e.tokenStack.length; -1 !== e.code.indexOf(\"___\" + t.toUpperCase() + i + \"___\");) {\n          ++i;\n        }\n\n        return e.tokenStack[i] = n, \"___\" + t.toUpperCase() + i + \"___\";\n      }), e.grammar = Prism.languages.markup);\n    }\n  },\n  tokenizePlaceholders: {\n    value: function value(e, t) {\n      if (e.language === t && e.tokenStack) {\n        e.grammar = Prism.languages[t];\n\n        var n = 0,\n            a = Object.keys(e.tokenStack),\n            i = function i(r) {\n          if (!(n >= a.length)) for (var o = 0; o < r.length; o++) {\n            var s = r[o];\n\n            if (\"string\" == typeof s || s.content && \"string\" == typeof s.content) {\n              var l = a[n],\n                  d = e.tokenStack[l],\n                  c = \"string\" == typeof s ? s : s.content,\n                  p = c.indexOf(\"___\" + t.toUpperCase() + l + \"___\");\n\n              if (p > -1) {\n                ++n;\n                var u,\n                    g = c.substring(0, p),\n                    m = new Prism.Token(t, Prism.tokenize(d, e.grammar, t), \"language-\" + t, d),\n                    b = c.substring(p + (\"___\" + t.toUpperCase() + l + \"___\").length);\n                if (g || b ? (u = [g, m, b].filter(function (e) {\n                  return !!e;\n                }), i(u)) : u = m, \"string\" == typeof s ? Array.prototype.splice.apply(r, [o, 1].concat(u)) : s.content = u, n >= a.length) break;\n              }\n            } else s.content && \"string\" != typeof s.content && i(s.content);\n          }\n        };\n\n        i(e.tokens);\n      }\n    }\n  }\n}), Prism.languages.markup = {\n  comment: /<!--[\\s\\S]*?-->/,\n  prolog: /<\\?[\\s\\S]+?\\?>/,\n  doctype: /<!DOCTYPE[\\s\\S]+?>/i,\n  cdata: /<!\\[CDATA\\[[\\s\\S]*?]]>/i,\n  tag: {\n    pattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+))?)*\\s*\\/?>/i,\n    greedy: !0,\n    inside: {\n      tag: {\n        pattern: /^<\\/?[^\\s>\\/]+/i,\n        inside: {\n          punctuation: /^<\\/?/,\n          namespace: /^[^\\s>\\/:]+:/\n        }\n      },\n      \"attr-value\": {\n        pattern: /=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+)/i,\n        inside: {\n          punctuation: [/^=/, {\n            pattern: /(^|[^\\\\])[\"']/,\n            lookbehind: !0\n          }]\n        }\n      },\n      punctuation: /\\/?>/,\n      \"attr-name\": {\n        pattern: /[^\\s>\\/]+/,\n        inside: {\n          namespace: /^[^\\s>\\/:]+:/\n        }\n      }\n    }\n  },\n  entity: /&#?[\\da-z]{1,8};/i\n}, Prism.languages.markup.tag.inside[\"attr-value\"].inside.entity = Prism.languages.markup.entity, Prism.hooks.add(\"wrap\", function (e) {\n  \"entity\" === e.type && (e.attributes.title = e.content.replace(/&amp;/, \"&\"));\n}), Prism.languages.xml = Prism.languages.markup, Prism.languages.html = Prism.languages.markup, Prism.languages.mathml = Prism.languages.markup, Prism.languages.svg = Prism.languages.markup;\nvar _django_template = {\n  property: {\n    pattern: /(?:{{|{%)[\\s\\S]*?(?:%}|}})/g,\n    greedy: !0,\n    inside: {\n      string: {\n        pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n        greedy: !0\n      },\n      keyword: /\\b(?:\\||load|verbatim|widthratio|ssi|firstof|for|url|ifchanged|csrf_token|lorem|ifnotequal|autoescape|now|templatetag|debug|cycle|ifequal|regroup|comment|filter|endfilter|if|spaceless|with|extends|block|include|else|empty|endif|endfor|as|endblock|endautoescape|endverbatim|trans|endtrans|[Tt]rue|[Ff]alse|[Nn]one|in|is|static|macro|endmacro|call|endcall|set|endset|raw|endraw)\\b/,\n      operator: /[-+=]=?|!=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]|\\b(?:or|and|not)\\b/,\n      function: /\\b(?:_|abs|add|addslashes|attr|batch|callable|capfirst|capitalize|center|count|cut|d|date|default|default_if_none|defined|dictsort|dictsortreversed|divisibleby|e|equalto|escape|escaped|escapejs|even|filesizeformat|first|float|floatformat|force_escape|forceescape|format|get_digit|groupby|indent|int|iriencode|iterable|join|last|length|length_is|linebreaks|linebreaksbr|linenumbers|list|ljust|lower|make_list|map|mapping|number|odd|phone2numeric|pluralize|pprint|random|reject|rejectattr|removetags|replace|reverse|rjust|round|safe|safeseq|sameas|select|selectattr|sequence|slice|slugify|sort|string|stringformat|striptags|sum|time|timesince|timeuntil|title|trim|truncate|truncatechars|truncatechars_html|truncatewords|truncatewords_html|undefined|unordered_list|upper|urlencode|urlize|urlizetrunc|wordcount|wordwrap|xmlattr|yesno)\\b/,\n      important: /\\b-?\\d+(?:\\.\\d+)?\\b/,\n      variable: /\\b\\w+?\\b/,\n      punctuation: /[[\\];(),.:]/\n    }\n  }\n};\nPrism.languages.django = Prism.languages.extend(\"markup\", {\n  comment: /(?:<!--|{#)[\\s\\S]*?(?:#}|-->)/\n}), Prism.languages.django.tag.pattern = /<\\/?(?!\\d)[^\\s>\\/=$<]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^>=]+))?)*\\s*\\/?>/i, Prism.languages.insertBefore(\"django\", \"entity\", _django_template), Prism.languages.insertBefore(\"inside\", \"tag\", _django_template, Prism.languages.django.tag), Prism.languages.javascript && (Prism.languages.insertBefore(\"inside\", \"string\", _django_template, Prism.languages.django.script), Prism.languages.django.script.inside.string.inside = _django_template), Prism.languages.css && (Prism.languages.insertBefore(\"inside\", \"atrule\", {\n  tag: _django_template.property\n}, Prism.languages.django.style), Prism.languages.django.style.inside.string.inside = _django_template), Prism.languages.jinja2 = Prism.languages.django, Prism.languages.javascript = Prism.languages.extend(\"clike\", {\n  keyword: /\\b(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|var|void|while|with|yield)\\b/,\n  number: /\\b(?:0[xX][\\dA-Fa-f]+|0[bB][01]+|0[oO][0-7]+|NaN|Infinity)\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee][+-]?\\d+)?/,\n  function: /[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*\\()/i,\n  operator: /-[-=]?|\\+[+=]?|!=?=?|<<?=?|>>?>?=?|=(?:==?|>)?|&[&=]?|\\|[|=]?|\\*\\*?=?|\\/=?|~|\\^=?|%=?|\\?|\\.{3}/\n}), Prism.languages.insertBefore(\"javascript\", \"keyword\", {\n  regex: {\n    pattern: /((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s])\\s*)\\/(\\[[^\\]\\r\\n]+]|\\\\.|[^\\/\\\\\\[\\r\\n])+\\/[gimyu]{0,5}(?=\\s*($|[\\r\\n,.;})\\]]))/,\n    lookbehind: !0,\n    greedy: !0\n  },\n  \"function-variable\": {\n    pattern: /[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*=\\s*(?:function\\b|(?:\\([^()]*\\)|[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*)\\s*=>))/i,\n    alias: \"function\"\n  },\n  constant: /\\b[A-Z][A-Z\\d_]*\\b/\n}), Prism.languages.insertBefore(\"javascript\", \"string\", {\n  \"template-string\": {\n    pattern: /`(?:\\\\[\\s\\S]|\\${[^}]+}|[^\\\\`])*`/,\n    greedy: !0,\n    inside: {\n      interpolation: {\n        pattern: /\\${[^}]+}/,\n        inside: {\n          \"interpolation-punctuation\": {\n            pattern: /^\\${|}$/,\n            alias: \"punctuation\"\n          },\n          rest: null\n        }\n      },\n      string: /[\\s\\S]+/\n    }\n  }\n}), Prism.languages.javascript[\"template-string\"].inside.interpolation.inside.rest = Prism.languages.javascript, Prism.languages.markup && Prism.languages.insertBefore(\"markup\", \"tag\", {\n  script: {\n    pattern: /(<script[\\s\\S]*?>)[\\s\\S]*?(?=<\\/script>)/i,\n    lookbehind: !0,\n    inside: Prism.languages.javascript,\n    alias: \"language-javascript\",\n    greedy: !0\n  }\n}), Prism.languages.js = Prism.languages.javascript, Prism.languages.csp = {\n  directive: {\n    pattern: /\\b(?:(?:base-uri|form-action|frame-ancestors|plugin-types|referrer|reflected-xss|report-to|report-uri|require-sri-for|sandbox) |(?:block-all-mixed-content|disown-opener|upgrade-insecure-requests)(?: |;)|(?:child|connect|default|font|frame|img|manifest|media|object|script|style|worker)-src )/i,\n    alias: \"keyword\"\n  },\n  safe: {\n    pattern: /'(?:self|none|strict-dynamic|(?:nonce-|sha(?:256|384|512)-)[a-zA-Z\\d+=\\/]+)'/,\n    alias: \"selector\"\n  },\n  unsafe: {\n    pattern: /(?:'unsafe-inline'|'unsafe-eval'|'unsafe-hashed-attributes'|\\*)/,\n    alias: \"function\"\n  }\n}, Prism.languages.css = {\n  comment: /\\/\\*[\\s\\S]*?\\*\\//,\n  atrule: {\n    pattern: /@[\\w-]+?.*?(?:;|(?=\\s*\\{))/i,\n    inside: {\n      rule: /@[\\w-]+/\n    }\n  },\n  url: /url\\((?:([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1|.*?)\\)/i,\n  selector: /[^{}\\s][^{};]*?(?=\\s*\\{)/,\n  string: {\n    pattern: /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: !0\n  },\n  property: /[-_a-z\\xA0-\\uFFFF][-\\w\\xA0-\\uFFFF]*(?=\\s*:)/i,\n  important: /\\B!important\\b/i,\n  function: /[-a-z0-9]+(?=\\()/i,\n  punctuation: /[(){};:]/\n}, Prism.languages.css.atrule.inside.rest = Prism.languages.css, Prism.languages.markup && (Prism.languages.insertBefore(\"markup\", \"tag\", {\n  style: {\n    pattern: /(<style[\\s\\S]*?>)[\\s\\S]*?(?=<\\/style>)/i,\n    lookbehind: !0,\n    inside: Prism.languages.css,\n    alias: \"language-css\",\n    greedy: !0\n  }\n}), Prism.languages.insertBefore(\"inside\", \"attr-value\", {\n  \"style-attr\": {\n    pattern: /\\s*style=(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/i,\n    inside: {\n      \"attr-name\": {\n        pattern: /^\\s*style/i,\n        inside: Prism.languages.markup.tag.inside\n      },\n      punctuation: /^\\s*=\\s*['\"]|['\"]\\s*$/,\n      \"attr-value\": {\n        pattern: /.+/i,\n        inside: Prism.languages.css\n      }\n    },\n    alias: \"language-css\"\n  }\n}, Prism.languages.markup.tag)), Prism.languages.css.selector = {\n  pattern: /[^{}\\s][^{}]*(?=\\s*\\{)/,\n  inside: {\n    \"pseudo-element\": /:(?:after|before|first-letter|first-line|selection)|::[-\\w]+/,\n    \"pseudo-class\": /:[-\\w]+(?:\\(.*\\))?/,\n    class: /\\.[-:.\\w]+/,\n    id: /#[-:.\\w]+/,\n    attribute: /\\[[^\\]]+\\]/\n  }\n}, Prism.languages.insertBefore(\"css\", \"function\", {\n  hexcode: /#[\\da-f]{3,8}/i,\n  entity: /\\\\[\\da-f]{1,8}/i,\n  number: /[\\d%.]+/\n}), Prism.languages.d = Prism.languages.extend(\"clike\", {\n  string: [/\\b[rx]\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"[cwd]?/, /\\bq\"(?:\\[[\\s\\S]*?\\]|\\([\\s\\S]*?\\)|<[\\s\\S]*?>|\\{[\\s\\S]*?\\})\"/, /\\bq\"([_a-zA-Z][_a-zA-Z\\d]*)(?:\\r?\\n|\\r)[\\s\\S]*?(?:\\r?\\n|\\r)\\1\"/, /\\bq\"(.)[\\s\\S]*?\\1\"/, /'(?:\\\\'|\\\\?[^']+)'/, /([\"`])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1[cwd]?/],\n  number: [/\\b0x\\.?[a-f\\d_]+(?:(?!\\.\\.)\\.[a-f\\d_]*)?(?:p[+-]?[a-f\\d_]+)?[ulfi]*/i, {\n    pattern: /((?:\\.\\.)?)(?:\\b0b\\.?|\\b|\\.)\\d[\\d_]*(?:(?!\\.\\.)\\.[\\d_]*)?(?:e[+-]?\\d[\\d_]*)?[ulfi]*/i,\n    lookbehind: !0\n  }],\n  keyword: /\\$|\\b(?:abstract|alias|align|asm|assert|auto|body|bool|break|byte|case|cast|catch|cdouble|cent|cfloat|char|class|const|continue|creal|dchar|debug|default|delegate|delete|deprecated|do|double|else|enum|export|extern|false|final|finally|float|for|foreach|foreach_reverse|function|goto|idouble|if|ifloat|immutable|import|inout|int|interface|invariant|ireal|lazy|long|macro|mixin|module|new|nothrow|null|out|override|package|pragma|private|protected|public|pure|real|ref|return|scope|shared|short|static|struct|super|switch|synchronized|template|this|throw|true|try|typedef|typeid|typeof|ubyte|ucent|uint|ulong|union|unittest|ushort|version|void|volatile|wchar|while|with|__(?:(?:FILE|MODULE|LINE|FUNCTION|PRETTY_FUNCTION|DATE|EOF|TIME|TIMESTAMP|VENDOR|VERSION)__|gshared|traits|vector|parameters)|string|wstring|dstring|size_t|ptrdiff_t)\\b/,\n  operator: /\\|[|=]?|&[&=]?|\\+[+=]?|-[-=]?|\\.?\\.\\.|=[>=]?|!(?:i[ns]\\b|<>?=?|>=?|=)?|\\bi[ns]\\b|(?:<[<>]?|>>?>?|\\^\\^|[*\\/%^~])=?/\n}), Prism.languages.d.comment = [/^\\s*#!.+/, {\n  pattern: /(^|[^\\\\])\\/\\+(?:\\/\\+[\\s\\S]*?\\+\\/|[\\s\\S])*?\\+\\//,\n  lookbehind: !0\n}].concat(Prism.languages.d.comment), Prism.languages.insertBefore(\"d\", \"comment\", {\n  \"token-string\": {\n    pattern: /\\bq\\{(?:\\{[^}]*\\}|[^}])*\\}/,\n    alias: \"string\"\n  }\n}), Prism.languages.insertBefore(\"d\", \"keyword\", {\n  property: /\\B@\\w*/\n}), Prism.languages.insertBefore(\"d\", \"function\", {\n  register: {\n    pattern: /\\b(?:[ABCD][LHX]|E[ABCD]X|E?(?:BP|SP|DI|SI)|[ECSDGF]S|CR[0234]|DR[012367]|TR[3-7]|X?MM[0-7]|R[ABCD]X|[BS]PL|R[BS]P|[DS]IL|R[DS]I|R(?:[89]|1[0-5])[BWD]?|XMM(?:[89]|1[0-5])|YMM(?:1[0-5]|\\d))\\b|\\bST(?:\\([0-7]\\)|\\b)/,\n    alias: \"variable\"\n  }\n}), Prism.languages.dart = Prism.languages.extend(\"clike\", {\n  string: [{\n    pattern: /r?(\"\"\"|''')[\\s\\S]*?\\1/,\n    greedy: !0\n  }, {\n    pattern: /r?(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: !0\n  }],\n  keyword: [/\\b(?:async|sync|yield)\\*/, /\\b(?:abstract|assert|async|await|break|case|catch|class|const|continue|default|deferred|do|dynamic|else|enum|export|external|extends|factory|final|finally|for|get|if|implements|import|in|library|new|null|operator|part|rethrow|return|set|static|super|switch|this|throw|try|typedef|var|void|while|with|yield)\\b/],\n  operator: /\\bis!|\\b(?:as|is)\\b|\\+\\+|--|&&|\\|\\||<<=?|>>=?|~(?:\\/=?)?|[+\\-*\\/%&^|=!<>]=?|\\?/\n}), Prism.languages.insertBefore(\"dart\", \"function\", {\n  metadata: {\n    pattern: /@\\w+/,\n    alias: \"symbol\"\n  }\n}), Prism.languages.diff = {\n  coord: [/^(?:\\*{3}|-{3}|\\+{3}).*$/m, /^@@.*@@$/m, /^\\d+.*$/m],\n  deleted: /^[-<].*$/m,\n  inserted: /^[+>].*$/m,\n  diff: {\n    pattern: /^!(?!!).+$/m,\n    alias: \"important\"\n  }\n}, Prism.languages.docker = {\n  keyword: {\n    pattern: /(^\\s*)(?:ADD|ARG|CMD|COPY|ENTRYPOINT|ENV|EXPOSE|FROM|HEALTHCHECK|LABEL|MAINTAINER|ONBUILD|RUN|SHELL|STOPSIGNAL|USER|VOLUME|WORKDIR)(?=\\s)/im,\n    lookbehind: !0\n  },\n  string: /(\"|')(?:(?!\\1)[^\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\\1/,\n  comment: /#.*/,\n  punctuation: /---|\\.\\.\\.|[:[\\]{}\\-,|>?]/\n}, Prism.languages.dockerfile = Prism.languages.docker, Prism.languages.eiffel = {\n  comment: /--.*/,\n  string: [{\n    pattern: /\"([^[]*)\\[[\\s\\S]*?\\]\\1\"/,\n    greedy: !0\n  }, {\n    pattern: /\"([^{]*)\\{[\\s\\S]*?\\}\\1\"/,\n    greedy: !0\n  }, {\n    pattern: /\"(?:%\\s+%|%.|[^%\"\\r\\n])*\"/,\n    greedy: !0\n  }],\n  char: /'(?:%.|[^%'\\r\\n])+'/,\n  keyword: /\\b(?:across|agent|alias|all|and|attached|as|assign|attribute|check|class|convert|create|Current|debug|deferred|detachable|do|else|elseif|end|ensure|expanded|export|external|feature|from|frozen|if|implies|inherit|inspect|invariant|like|local|loop|not|note|obsolete|old|once|or|Precursor|redefine|rename|require|rescue|Result|retry|select|separate|some|then|undefine|until|variant|Void|when|xor)\\b/i,\n  boolean: /\\b(?:True|False)\\b/i,\n  \"class-name\": {\n    pattern: /\\b[A-Z][\\dA-Z_]*\\b/,\n    alias: \"builtin\"\n  },\n  number: [/\\b0[xcb][\\da-f](?:_*[\\da-f])*\\b/i, /(?:\\d(?:_*\\d)*)?\\.(?:(?:\\d(?:_*\\d)*)?e[+-]?)?\\d(?:_*\\d)*|\\d(?:_*\\d)*\\.?/i],\n  punctuation: /:=|<<|>>|\\(\\||\\|\\)|->|\\.(?=\\w)|[{}[\\];(),:?]/,\n  operator: /\\\\\\\\|\\|\\.\\.\\||\\.\\.|\\/[~\\/=]?|[><]=?|[-+*^=~]/\n}, Prism.languages.elixir = {\n  comment: {\n    pattern: /#.*/m,\n    lookbehind: !0\n  },\n  regex: {\n    pattern: /~[rR](?:(\"\"\"|''')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])+\\1|([\\/|\"'])(?:\\\\.|(?!\\2)[^\\\\\\r\\n])+\\2|\\((?:\\\\.|[^\\\\)\\r\\n])+\\)|\\[(?:\\\\.|[^\\\\\\]\\r\\n])+\\]|\\{(?:\\\\.|[^\\\\}\\r\\n])+\\}|<(?:\\\\.|[^\\\\>\\r\\n])+>)[uismxfr]*/,\n    greedy: !0\n  },\n  string: [{\n    pattern: /~[cCsSwW](?:(\"\"\"|''')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])+\\1|([\\/|\"'])(?:\\\\.|(?!\\2)[^\\\\\\r\\n])+\\2|\\((?:\\\\.|[^\\\\)\\r\\n])+\\)|\\[(?:\\\\.|[^\\\\\\]\\r\\n])+\\]|\\{(?:\\\\.|#\\{[^}]+\\}|[^\\\\}\\r\\n])+\\}|<(?:\\\\.|[^\\\\>\\r\\n])+>)[csa]?/,\n    greedy: !0,\n    inside: {}\n  }, {\n    pattern: /(\"\"\"|''')[\\s\\S]*?\\1/,\n    greedy: !0,\n    inside: {}\n  }, {\n    pattern: /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: !0,\n    inside: {}\n  }],\n  atom: {\n    pattern: /(^|[^:]):\\w+/,\n    lookbehind: !0,\n    alias: \"symbol\"\n  },\n  \"attr-name\": /\\w+:(?!:)/,\n  capture: {\n    pattern: /(^|[^&])&(?:[^&\\s\\d()][^\\s()]*|(?=\\())/,\n    lookbehind: !0,\n    alias: \"function\"\n  },\n  argument: {\n    pattern: /(^|[^&])&\\d+/,\n    lookbehind: !0,\n    alias: \"variable\"\n  },\n  attribute: {\n    pattern: /@\\w+/,\n    alias: \"variable\"\n  },\n  number: /\\b(?:0[box][a-f\\d_]+|\\d[\\d_]*)(?:\\.[\\d_]+)?(?:e[+-]?[\\d_]+)?\\b/i,\n  keyword: /\\b(?:after|alias|and|case|catch|cond|def(?:callback|exception|impl|module|p|protocol|struct)?|do|else|end|fn|for|if|import|not|or|require|rescue|try|unless|use|when)\\b/,\n  boolean: /\\b(?:true|false|nil)\\b/,\n  operator: [/\\bin\\b|&&?|\\|[|>]?|\\\\\\\\|::|\\.\\.\\.?|\\+\\+?|-[->]?|<[-=>]|>=|!==?|\\B!|=(?:==?|[>~])?|[*\\/^]/, {\n    pattern: /([^<])<(?!<)/,\n    lookbehind: !0\n  }, {\n    pattern: /([^>])>(?!>)/,\n    lookbehind: !0\n  }],\n  punctuation: /<<|>>|[.,%\\[\\]{}()]/\n}, Prism.languages.elixir.string.forEach(function (e) {\n  e.inside = {\n    interpolation: {\n      pattern: /#\\{[^}]+\\}/,\n      inside: {\n        delimiter: {\n          pattern: /^#\\{|\\}$/,\n          alias: \"punctuation\"\n        },\n        rest: Prism.languages.elixir\n      }\n    }\n  };\n}), Prism.languages.elm = {\n  comment: /--.*|{-[\\s\\S]*?-}/,\n  char: {\n    pattern: /'(?:[^\\\\'\\r\\n]|\\\\(?:[abfnrtv\\\\']|\\d+|x[0-9a-fA-F]+))'/,\n    greedy: !0\n  },\n  string: [{\n    pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n    greedy: !0\n  }, {\n    pattern: /\"(?:[^\\\\\"\\r\\n]|\\\\(?:[abfnrtv\\\\\"]|\\d+|x[0-9a-fA-F]+))*\"/,\n    greedy: !0\n  }],\n  import_statement: {\n    pattern: /^\\s*import\\s+[A-Z]\\w*(?:\\.[A-Z]\\w*)*(?:\\s+as\\s+([A-Z]\\w*)(?:\\.[A-Z]\\w*)*)?(?:\\s+exposing\\s+)?/m,\n    inside: {\n      keyword: /\\b(?:import|as|exposing)\\b/\n    }\n  },\n  keyword: /\\b(?:alias|as|case|else|exposing|if|in|infixl|infixr|let|module|of|then|type)\\b/,\n  builtin: /\\b(?:abs|acos|always|asin|atan|atan2|ceiling|clamp|compare|cos|curry|degrees|e|flip|floor|fromPolar|identity|isInfinite|isNaN|logBase|max|min|negate|never|not|pi|radians|rem|round|sin|sqrt|tan|toFloat|toPolar|toString|truncate|turns|uncurry|xor)\\b/,\n  number: /\\b(?:\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?|0x[0-9a-f]+)\\b/i,\n  operator: /\\s\\.\\s|[+\\-\\/*=.$<>:&|^?%#@~!]{2,}|[+\\-\\/*=$<>:&|^?%#@~!]/,\n  hvariable: /\\b(?:[A-Z]\\w*\\.)*[a-z]\\w*\\b/,\n  constant: /\\b(?:[A-Z]\\w*\\.)*[A-Z]\\w*\\b/,\n  punctuation: /[{}[\\]|(),.:]/\n}, function (e) {\n  e.languages.erb = e.languages.extend(\"ruby\", {}), e.languages.insertBefore(\"erb\", \"comment\", {\n    delimiter: {\n      pattern: /^<%=?|%>$/,\n      alias: \"punctuation\"\n    }\n  }), e.hooks.add(\"before-tokenize\", function (t) {\n    e.languages[\"markup-templating\"].buildPlaceholders(t, \"erb\", /<%=?[\\s\\S]+?%>/g);\n  }), e.hooks.add(\"after-tokenize\", function (t) {\n    e.languages[\"markup-templating\"].tokenizePlaceholders(t, \"erb\");\n  });\n}(Prism), Prism.languages.erlang = {\n  comment: /%.+/,\n  string: {\n    pattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n    greedy: !0\n  },\n  \"quoted-function\": {\n    pattern: /'(?:\\\\.|[^\\\\'\\r\\n])+'(?=\\()/,\n    alias: \"function\"\n  },\n  \"quoted-atom\": {\n    pattern: /'(?:\\\\.|[^\\\\'\\r\\n])+'/,\n    alias: \"atom\"\n  },\n  boolean: /\\b(?:true|false)\\b/,\n  keyword: /\\b(?:fun|when|case|of|end|if|receive|after|try|catch)\\b/,\n  number: [/\\$\\\\?./, /\\d+#[a-z0-9]+/i, /(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?/i],\n  function: /\\b[a-z][\\w@]*(?=\\()/,\n  variable: {\n    pattern: /(^|[^@])(?:\\b|\\?)[A-Z_][\\w@]*/,\n    lookbehind: !0\n  },\n  operator: [/[=\\/<>:]=|=[:\\/]=|\\+\\+?|--?|[=*\\/!]|\\b(?:bnot|div|rem|band|bor|bxor|bsl|bsr|not|and|or|xor|orelse|andalso)\\b/, {\n    pattern: /(^|[^<])<(?!<)/,\n    lookbehind: !0\n  }, {\n    pattern: /(^|[^>])>(?!>)/,\n    lookbehind: !0\n  }],\n  atom: /\\b[a-z][\\w@]*/,\n  punctuation: /[()[\\]{}:;,.#|]|<<|>>/\n}, function (e) {\n  e.languages.flow = e.languages.extend(\"javascript\", {}), e.languages.insertBefore(\"flow\", \"keyword\", {\n    type: [{\n      pattern: /\\b(?:[Nn]umber|[Ss]tring|[Bb]oolean|Function|any|mixed|null|void)\\b/,\n      alias: \"tag\"\n    }]\n  }), e.languages.flow[\"function-variable\"].pattern = /[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*=\\s*(?:function\\b|(?:\\([^()]*\\)(?:\\s*:\\s*\\w+)?|[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*)\\s*=>))/i, e.languages.insertBefore(\"flow\", \"operator\", {\n    \"flow-punctuation\": {\n      pattern: /\\{\\||\\|\\}/,\n      alias: \"punctuation\"\n    }\n  }), \"Array\" !== e.util.type(e.languages.flow.keyword) && (e.languages.flow.keyword = [e.languages.flow.keyword]), e.languages.flow.keyword.unshift({\n    pattern: /(^|[^$]\\b)(?:type|opaque|declare|Class)\\b(?!\\$)/,\n    lookbehind: !0\n  }, {\n    pattern: /(^|[^$]\\B)\\$(?:await|Diff|Exact|Keys|ObjMap|PropertyType|Shape|Record|Supertype|Subtype|Enum)\\b(?!\\$)/,\n    lookbehind: !0\n  });\n}(Prism), Prism.languages.fortran = {\n  \"quoted-number\": {\n    pattern: /[BOZ](['\"])[A-F0-9]+\\1/i,\n    alias: \"number\"\n  },\n  string: {\n    pattern: /(?:\\w+_)?(['\"])(?:\\1\\1|&(?:\\r\\n?|\\n)(?:\\s*!.+(?:\\r\\n?|\\n))?|(?!\\1).)*(?:\\1|&)/,\n    inside: {\n      comment: {\n        pattern: /(&(?:\\r\\n?|\\n)\\s*)!.*/,\n        lookbehind: !0\n      }\n    }\n  },\n  comment: {\n    pattern: /!.*/,\n    greedy: !0\n  },\n  boolean: /\\.(?:TRUE|FALSE)\\.(?:_\\w+)?/i,\n  number: /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[ED][+-]?\\d+)?(?:_\\w+)?/i,\n  keyword: [/\\b(?:INTEGER|REAL|DOUBLE ?PRECISION|COMPLEX|CHARACTER|LOGICAL)\\b/i, /\\b(?:END ?)?(?:BLOCK ?DATA|DO|FILE|FORALL|FUNCTION|IF|INTERFACE|MODULE(?! PROCEDURE)|PROGRAM|SELECT|SUBROUTINE|TYPE|WHERE)\\b/i, /\\b(?:ALLOCATABLE|ALLOCATE|BACKSPACE|CALL|CASE|CLOSE|COMMON|CONTAINS|CONTINUE|CYCLE|DATA|DEALLOCATE|DIMENSION|DO|END|EQUIVALENCE|EXIT|EXTERNAL|FORMAT|GO ?TO|IMPLICIT(?: NONE)?|INQUIRE|INTENT|INTRINSIC|MODULE PROCEDURE|NAMELIST|NULLIFY|OPEN|OPTIONAL|PARAMETER|POINTER|PRINT|PRIVATE|PUBLIC|READ|RETURN|REWIND|SAVE|SELECT|STOP|TARGET|WHILE|WRITE)\\b/i, /\\b(?:ASSIGNMENT|DEFAULT|ELEMENTAL|ELSE|ELSEWHERE|ELSEIF|ENTRY|IN|INCLUDE|INOUT|KIND|NULL|ONLY|OPERATOR|OUT|PURE|RECURSIVE|RESULT|SEQUENCE|STAT|THEN|USE)\\b/i],\n  operator: [/\\*\\*|\\/\\/|=>|[=\\/]=|[<>]=?|::|[+\\-*=%]|\\.(?:EQ|NE|LT|LE|GT|GE|NOT|AND|OR|EQV|NEQV)\\.|\\.[A-Z]+\\./i, {\n    pattern: /(^|(?!\\().)\\/(?!\\))/,\n    lookbehind: !0\n  }],\n  punctuation: /\\(\\/|\\/\\)|[(),;:&]/\n}, Prism.languages.fsharp = Prism.languages.extend(\"clike\", {\n  comment: [{\n    pattern: /(^|[^\\\\])\\(\\*[\\s\\S]*?\\*\\)/,\n    lookbehind: !0\n  }, {\n    pattern: /(^|[^\\\\:])\\/\\/.*/,\n    lookbehind: !0\n  }],\n  keyword: /\\b(?:let|return|use|yield)(?:!\\B|\\b)|\\b(abstract|and|as|assert|base|begin|class|default|delegate|do|done|downcast|downto|elif|else|end|exception|extern|false|finally|for|fun|function|global|if|in|inherit|inline|interface|internal|lazy|match|member|module|mutable|namespace|new|not|null|of|open|or|override|private|public|rec|select|static|struct|then|to|true|try|type|upcast|val|void|when|while|with|asr|land|lor|lsl|lsr|lxor|mod|sig|atomic|break|checked|component|const|constraint|constructor|continue|eager|event|external|fixed|functor|include|method|mixin|object|parallel|process|protected|pure|sealed|tailcall|trait|virtual|volatile)\\b/,\n  string: {\n    pattern: /(?:\"\"\"[\\s\\S]*?\"\"\"|@\"(?:\"\"|[^\"])*\"|(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1)B?/,\n    greedy: !0\n  },\n  number: [/\\b0x[\\da-fA-F]+(?:un|lf|LF)?\\b/, /\\b0b[01]+(?:y|uy)?\\b/, /(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[fm]|e[+-]?\\d+)?\\b/i, /\\b\\d+(?:[IlLsy]|u[lsy]?|UL)?\\b/]\n}), Prism.languages.insertBefore(\"fsharp\", \"keyword\", {\n  preprocessor: {\n    pattern: /^[^\\r\\n\\S]*#.*/m,\n    alias: \"property\",\n    inside: {\n      directive: {\n        pattern: /(\\s*#)\\b(?:else|endif|if|light|line|nowarn)\\b/,\n        lookbehind: !0,\n        alias: \"keyword\"\n      }\n    }\n  }\n}), Prism.languages.gedcom = {\n  \"line-value\": {\n    pattern: /(^\\s*\\d+ +(?:@\\w[\\w!\"$%&'()*+,\\-.\\/:;<=>?[\\\\\\]^`{|}~\\x80-\\xfe #]*@ +)?\\w+ +).+/m,\n    lookbehind: !0,\n    inside: {\n      pointer: {\n        pattern: /^@\\w[\\w!\"$%&'()*+,\\-.\\/:;<=>?[\\\\\\]^`{|}~\\x80-\\xfe #]*@$/,\n        alias: \"variable\"\n      }\n    }\n  },\n  tag: {\n    pattern: /(^\\s*\\d+ +(?:@\\w[\\w!\"$%&'()*+,\\-.\\/:;<=>?[\\\\\\]^`{|}~\\x80-\\xfe #]*@ +)?)\\w+/m,\n    lookbehind: !0,\n    alias: \"string\"\n  },\n  level: {\n    pattern: /(^\\s*)\\d+/m,\n    lookbehind: !0,\n    alias: \"number\"\n  },\n  pointer: {\n    pattern: /@\\w[\\w!\"$%&'()*+,\\-.\\/:;<=>?[\\\\\\]^`{|}~\\x80-\\xfe #]*@/,\n    alias: \"variable\"\n  }\n}, Prism.languages.gherkin = {\n  pystring: {\n    pattern: /(\"\"\"|''')[\\s\\S]+?\\1/,\n    alias: \"string\"\n  },\n  comment: {\n    pattern: /((?:^|\\r?\\n|\\r)[ \\t]*)#.*/,\n    lookbehind: !0\n  },\n  tag: {\n    pattern: /((?:^|\\r?\\n|\\r)[ \\t]*)@\\S*/,\n    lookbehind: !0\n  },\n  feature: {\n    pattern: /((?:^|\\r?\\n|\\r)[ \\t]*)(?:Ability|Ahoy matey!|Arwedd|Aspekt|Besigheid Behoefte|Business Need|Caracteristica|Característica|Egenskab|Egenskap|Eiginleiki|Feature|Fīča|Fitur|Fonctionnalité|Fonksyonalite|Funcionalidade|Funcionalitat|Functionalitate|Funcţionalitate|Funcționalitate|Functionaliteit|Fungsi|Funkcia|Funkcija|Funkcionalitāte|Funkcionalnost|Funkcja|Funksie|Funktionalität|Funktionalitéit|Funzionalità|Hwaet|Hwæt|Jellemző|Karakteristik|laH|Lastnost|Mak|Mogucnost|Mogućnost|Moznosti|Možnosti|OH HAI|Omadus|Ominaisuus|Osobina|Özellik|perbogh|poQbogh malja'|Potrzeba biznesowa|Požadavek|Požiadavka|Pretty much|Qap|Qu'meH 'ut|Savybė|Tính năng|Trajto|Vermoë|Vlastnosť|Właściwość|Značilnost|Δυνατότητα|Λειτουργία|Могућност|Мөмкинлек|Особина|Свойство|Үзенчәлеклелек|Функционал|Функционалност|Функция|Функціонал|תכונה|خاصية|خصوصیت|صلاحیت|کاروبار کی ضرورت|وِیژگی|रूप लेख|ਖਾਸੀਅਤ|ਨਕਸ਼ ਨੁਹਾਰ|ਮੁਹਾਂਦਰਾ|గుణము|ಹೆಚ್ಚಳ|ความต้องการทางธุรกิจ|ความสามารถ|โครงหลัก|기능|フィーチャ|功能|機能):(?:[^:]+(?:\\r?\\n|\\r|$))*/,\n    lookbehind: !0,\n    inside: {\n      important: {\n        pattern: /(:)[^\\r\\n]+/,\n        lookbehind: !0\n      },\n      keyword: /[^:\\r\\n]+:/\n    }\n  },\n  scenario: {\n    pattern: /((?:^|\\r?\\n|\\r)[ \\t]*)(?:Abstract Scenario|Abstrakt Scenario|Achtergrond|Aer|Ær|Agtergrond|All y'all|Antecedentes|Antecedents|Atburðarás|Atburðarásir|Awww, look mate|B4|Background|Baggrund|Bakgrund|Bakgrunn|Bakgrunnur|Beispiele|Beispiller|Bối cảnh|Cefndir|Cenario|Cenário|Cenario de Fundo|Cenário de Fundo|Cenarios|Cenários|Contesto|Context|Contexte|Contexto|Conto|Contoh|Contone|Dæmi|Dasar|Dead men tell no tales|Delineacao do Cenario|Delineação do Cenário|Dis is what went down|Dữ liệu|Dyagram senaryo|Dyagram Senaryo|Egzanp|Ejemplos|Eksempler|Ekzemploj|Enghreifftiau|Esbozo do escenario|Escenari|Escenario|Esempi|Esquema de l'escenari|Esquema del escenario|Esquema do Cenario|Esquema do Cenário|Examples|EXAMPLZ|Exempel|Exemple|Exemples|Exemplos|First off|Fono|Forgatókönyv|Forgatókönyv vázlat|Fundo|Geçmiş|ghantoH|Grundlage|Hannergrond|Háttér|Heave to|Istorik|Juhtumid|Keadaan|Khung kịch bản|Khung tình huống|Kịch bản|Koncept|Konsep skenario|Kontèks|Kontekst|Kontekstas|Konteksts|Kontext|Konturo de la scenaro|Latar Belakang|lut|lut chovnatlh|lutmey|Lýsing Atburðarásar|Lýsing Dæma|Menggariskan Senario|MISHUN|MISHUN SRSLY|mo'|Náčrt Scenára|Náčrt Scénáře|Náčrt Scenáru|Oris scenarija|Örnekler|Osnova|Osnova Scenára|Osnova scénáře|Osnutek|Ozadje|Paraugs|Pavyzdžiai|Példák|Piemēri|Plan du scénario|Plan du Scénario|Plan senaryo|Plan Senaryo|Plang vum Szenario|Pozadí|Pozadie|Pozadina|Príklady|Příklady|Primer|Primeri|Primjeri|Przykłady|Raamstsenaarium|Reckon it's like|Rerefons|Scenár|Scénář|Scenarie|Scenarij|Scenarijai|Scenarijaus šablonas|Scenariji|Scenārijs|Scenārijs pēc parauga|Scenarijus|Scenario|Scénario|Scenario Amlinellol|Scenario Outline|Scenario Template|Scenariomal|Scenariomall|Scenarios|Scenariu|Scenariusz|Scenaro|Schema dello scenario|Se ðe|Se the|Se þe|Senario|Senaryo|Senaryo deskripsyon|Senaryo Deskripsyon|Senaryo taslağı|Shiver me timbers|Situācija|Situai|Situasie|Situasie Uiteensetting|Skenario|Skenario konsep|Skica|Structura scenariu|Structură scenariu|Struktura scenarija|Stsenaarium|Swa|Swa hwaer swa|Swa hwær swa|Szablon scenariusza|Szenario|Szenariogrundriss|Tapaukset|Tapaus|Tapausaihio|Taust|Tausta|Template Keadaan|Template Senario|Template Situai|The thing of it is|Tình huống|Variantai|Voorbeelde|Voorbeelden|Wharrimean is|Yo\\-ho\\-ho|You'll wanna|Założenia|Παραδείγματα|Περιγραφή Σεναρίου|Σενάρια|Σενάριο|Υπόβαθρο|Кереш|Контекст|Концепт|Мисаллар|Мисоллар|Основа|Передумова|Позадина|Предистория|Предыстория|Приклади|Пример|Примери|Примеры|Рамка на сценарий|Скица|Структура сценарија|Структура сценария|Структура сценарію|Сценарий|Сценарий структураси|Сценарийның төзелеше|Сценарији|Сценарио|Сценарій|Тарих|Үрнәкләр|דוגמאות|רקע|תבנית תרחיש|תרחיש|الخلفية|الگوی سناریو|امثلة|پس منظر|زمینه|سناریو|سيناريو|سيناريو مخطط|مثالیں|منظر نامے کا خاکہ|منظرنامہ|نمونه ها|उदाहरण|परिदृश्य|परिदृश्य रूपरेखा|पृष्ठभूमि|ਉਦਾਹਰਨਾਂ|ਪਟਕਥਾ|ਪਟਕਥਾ ਢਾਂਚਾ|ਪਟਕਥਾ ਰੂਪ ਰੇਖਾ|ਪਿਛੋਕੜ|ఉదాహరణలు|కథనం|నేపథ్యం|సన్నివేశం|ಉದಾಹರಣೆಗಳು|ಕಥಾಸಾರಾಂಶ|ವಿವರಣೆ|ಹಿನ್ನೆಲೆ|โครงสร้างของเหตุการณ์|ชุดของตัวอย่าง|ชุดของเหตุการณ์|แนวคิด|สรุปเหตุการณ์|เหตุการณ์|배경|시나리오|시나리오 개요|예|サンプル|シナリオ|シナリオアウトライン|シナリオテンプレ|シナリオテンプレート|テンプレ|例|例子|剧本|剧本大纲|劇本|劇本大綱|场景|场景大纲|場景|場景大綱|背景):[^:\\r\\n]*/,\n    lookbehind: !0,\n    inside: {\n      important: {\n        pattern: /(:)[^\\r\\n]*/,\n        lookbehind: !0\n      },\n      keyword: /[^:\\r\\n]+:/\n    }\n  },\n  \"table-body\": {\n    pattern: /((?:\\r?\\n|\\r)[ \\t]*\\|.+\\|[^\\r\\n]*)+/,\n    lookbehind: !0,\n    inside: {\n      outline: {\n        pattern: /<[^>]+?>/,\n        alias: \"variable\"\n      },\n      td: {\n        pattern: /\\s*[^\\s|][^|]*/,\n        alias: \"string\"\n      },\n      punctuation: /\\|/\n    }\n  },\n  \"table-head\": {\n    pattern: /(?:\\r?\\n|\\r)[ \\t]*\\|.+\\|[^\\r\\n]*/,\n    inside: {\n      th: {\n        pattern: /\\s*[^\\s|][^|]*/,\n        alias: \"variable\"\n      },\n      punctuation: /\\|/\n    }\n  },\n  atrule: {\n    pattern: /((?:\\r?\\n|\\r)[ \\t]+)(?:'ach|'a|'ej|7|a|A také|A taktiež|A tiež|A zároveň|Aber|Ac|Adott|Akkor|Ak|Aleshores|Ale|Ali|Allora|Alors|Als|Ama|Amennyiben|Amikor|Ampak|an|AN|Ananging|And y'all|And|Angenommen|Anrhegedig a|An|Apabila|Atès|Atesa|Atunci|Avast!|Aye|A|awer|Bagi|Banjur|Bet|Biết|Blimey!|Buh|But at the end of the day I reckon|But y'all|But|BUT|Cal|Când|Cando|Cand|Ce|Cuando|Če|Ða ðe|Ða|Dadas|Dada|Dados|Dado|DaH ghu' bejlu'|dann|Dann|Dano|Dan|Dar|Dat fiind|Data|Date fiind|Date|Dati fiind|Dati|Daţi fiind|Dați fiind|Dato|DEN|Den youse gotta|Dengan|De|Diberi|Diyelim ki|Donada|Donat|Donitaĵo|Do|Dun|Duota|Ðurh|Eeldades|Ef|Eğer ki|Entao|Então|Entón|Entonces|En|Epi|E|És|Etant donnée|Etant donné|Et|Étant données|Étant donnée|Étant donné|Etant données|Etant donnés|Étant donnés|Fakat|Gangway!|Gdy|Gegeben seien|Gegeben sei|Gegeven|Gegewe|ghu' noblu'|Gitt|Given y'all|Given|Givet|Givun|Ha|Cho|I CAN HAZ|In|Ir|It's just unbelievable|I|Ja|Jeśli|Jeżeli|Kadar|Kada|Kad|Kai|Kaj|Když|Keď|Kemudian|Ketika|Khi|Kiedy|Ko|Kuid|Kui|Kun|Lan|latlh|Le sa a|Let go and haul|Le|Lè sa a|Lè|Logo|Lorsqu'<|Lorsque|mä|Maar|Mais|Mając|Majd|Maka|Manawa|Mas|Ma|Menawa|Men|Mutta|Nalikaning|Nalika|Nanging|Når|När|Nato|Nhưng|Niin|Njuk|O zaman|Og|Och|Oletetaan|Onda|Ond|Oraz|Pak|Pero|Però|Podano|Pokiaľ|Pokud|Potem|Potom|Privzeto|Pryd|qaSDI'|Quando|Quand|Quan|Så|Sed|Se|Siis|Sipoze ke|Sipoze Ke|Sipoze|Si|Şi|Și|Soit|Stel|Tada|Tad|Takrat|Tak|Tapi|Ter|Tetapi|Tha the|Tha|Then y'all|Then|Thì|Thurh|Toda|Too right|ugeholl|Und|Un|Và|vaj|Vendar|Ve|wann|Wanneer|WEN|Wenn|When y'all|When|Wtedy|Wun|Y'know|Yeah nah|Yna|Youse know like when|Youse know when youse got|Y|Za predpokladu|Za předpokladu|Zadani|Zadano|Zadan|Zadate|Zadato|Zakładając|Zaradi|Zatati|Þa þe|Þa|Þá|Þegar|Þurh|Αλλά|Δεδομένου|Και|Όταν|Τότε|А також|Агар|Але|Али|Аммо|А|Әгәр|Әйтик|Әмма|Бирок|Ва|Вә|Дадено|Дано|Допустим|Если|Задате|Задати|Задато|И|І|К тому же|Када|Кад|Когато|Когда|Коли|Ләкин|Лекин|Нәтиҗәдә|Нехай|Но|Онда|Припустимо, що|Припустимо|Пусть|Также|Та|Тогда|Тоді|То|Унда|Һәм|Якщо|אבל|אזי|אז|בהינתן|וגם|כאשר|آنگاه|اذاً|اگر|اما|اور|با فرض|بالفرض|بفرض|پھر|تب|ثم|جب|عندما|فرض کیا|لكن|لیکن|متى|هنگامی|و|अगर|और|कदा|किन्तु|चूंकि|जब|तथा|तदा|तब|परन्तु|पर|यदि|ਅਤੇ|ਜਦੋਂ|ਜਿਵੇਂ ਕਿ|ਜੇਕਰ|ਤਦ|ਪਰ|అప్పుడు|ఈ పరిస్థితిలో|కాని|చెప్పబడినది|మరియు|ಆದರೆ|ನಂತರ|ನೀಡಿದ|ಮತ್ತು|ಸ್ಥಿತಿಯನ್ನು|กำหนดให้|ดังนั้น|แต่|เมื่อ|และ|그러면<|그리고<|단<|만약<|만일<|먼저<|조건<|하지만<|かつ<|しかし<|ただし<|ならば<|もし<|並且<|但し<|但是<|假如<|假定<|假設<|假设<|前提<|同时<|同時<|并且<|当<|當<|而且<|那么<|那麼<)(?=[ \\t]+)/,\n    lookbehind: !0\n  },\n  string: {\n    pattern: /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"|'(?:\\\\.|[^'\\\\\\r\\n])*'/,\n    inside: {\n      outline: {\n        pattern: /<[^>]+?>/,\n        alias: \"variable\"\n      }\n    }\n  },\n  outline: {\n    pattern: /<[^>]+?>/,\n    alias: \"variable\"\n  }\n}, Prism.languages.git = {\n  comment: /^#.*/m,\n  deleted: /^[-–].*/m,\n  inserted: /^\\+.*/m,\n  string: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/m,\n  command: {\n    pattern: /^.*\\$ git .*$/m,\n    inside: {\n      parameter: /\\s--?\\w+/m\n    }\n  },\n  coord: /^@@.*@@$/m,\n  commit_sha1: /^commit \\w{40}$/m\n}, Prism.languages.glsl = Prism.languages.extend(\"clike\", {\n  comment: [/\\/\\*[\\s\\S]*?\\*\\//, /\\/\\/(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n])*/],\n  number: /(?:\\b0x[\\da-f]+|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?)[ulf]*/i,\n  keyword: /\\b(?:attribute|const|uniform|varying|buffer|shared|coherent|volatile|restrict|readonly|writeonly|atomic_uint|layout|centroid|flat|smooth|noperspective|patch|sample|break|continue|do|for|while|switch|case|default|if|else|subroutine|in|out|inout|float|double|int|void|bool|true|false|invariant|precise|discard|return|d?mat[234](?:x[234])?|[ibdu]?vec[234]|uint|lowp|mediump|highp|precision|[iu]?sampler[123]D|[iu]?samplerCube|sampler[12]DShadow|samplerCubeShadow|[iu]?sampler[12]DArray|sampler[12]DArrayShadow|[iu]?sampler2DRect|sampler2DRectShadow|[iu]?samplerBuffer|[iu]?sampler2DMS(?:Array)?|[iu]?samplerCubeArray|samplerCubeArrayShadow|[iu]?image[123]D|[iu]?image2DRect|[iu]?imageCube|[iu]?imageBuffer|[iu]?image[12]DArray|[iu]?imageCubeArray|[iu]?image2DMS(?:Array)?|struct|common|partition|active|asm|class|union|enum|typedef|template|this|resource|goto|inline|noinline|public|static|extern|external|interface|long|short|half|fixed|unsigned|superp|input|output|hvec[234]|fvec[234]|sampler3DRect|filter|sizeof|cast|namespace|using)\\b/\n}), Prism.languages.insertBefore(\"glsl\", \"comment\", {\n  preprocessor: {\n    pattern: /(^[ \\t]*)#(?:(?:define|undef|if|ifdef|ifndef|else|elif|endif|error|pragma|extension|version|line)\\b)?/m,\n    lookbehind: !0,\n    alias: \"builtin\"\n  }\n}), Prism.languages.go = Prism.languages.extend(\"clike\", {\n  keyword: /\\b(?:break|case|chan|const|continue|default|defer|else|fallthrough|for|func|go(?:to)?|if|import|interface|map|package|range|return|select|struct|switch|type|var)\\b/,\n  builtin: /\\b(?:bool|byte|complex(?:64|128)|error|float(?:32|64)|rune|string|u?int(?:8|16|32|64)?|uintptr|append|cap|close|complex|copy|delete|imag|len|make|new|panic|print(?:ln)?|real|recover)\\b/,\n  boolean: /\\b(?:_|iota|nil|true|false)\\b/,\n  operator: /[*\\/%^!=]=?|\\+[=+]?|-[=-]?|\\|[=|]?|&(?:=|&|\\^=?)?|>(?:>=?|=)?|<(?:<=?|=|-)?|:=|\\.\\.\\./,\n  number: /(?:\\b0x[a-f\\d]+|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[-+]?\\d+)?)i?/i,\n  string: {\n    pattern: /([\"'`])(\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\n    greedy: !0\n  }\n}), delete Prism.languages.go[\"class-name\"], Prism.languages.graphql = {\n  comment: /#.*/,\n  string: {\n    pattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n    greedy: !0\n  },\n  number: /(?:\\B-|\\b)\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i,\n  boolean: /\\b(?:true|false)\\b/,\n  variable: /\\$[a-z_]\\w*/i,\n  directive: {\n    pattern: /@[a-z_]\\w*/i,\n    alias: \"function\"\n  },\n  \"attr-name\": /[a-z_]\\w*(?=\\s*:)/i,\n  keyword: [{\n    pattern: /(fragment\\s+(?!on)[a-z_]\\w*\\s+|\\.{3}\\s*)on\\b/,\n    lookbehind: !0\n  }, /\\b(?:query|fragment|mutation)\\b/],\n  operator: /!|=|\\.{3}/,\n  punctuation: /[!(){}\\[\\]:=,]/\n}, Prism.languages.groovy = Prism.languages.extend(\"clike\", {\n  keyword: /\\b(?:as|def|in|abstract|assert|boolean|break|byte|case|catch|char|class|const|continue|default|do|double|else|enum|extends|final|finally|float|for|goto|if|implements|import|instanceof|int|interface|long|native|new|package|private|protected|public|return|short|static|strictfp|super|switch|synchronized|this|throw|throws|trait|transient|try|void|volatile|while)\\b/,\n  string: [{\n    pattern: /(\"\"\"|''')[\\s\\S]*?\\1|(?:\\$\\/)(?:\\$\\/\\$|[\\s\\S])*?\\/\\$/,\n    greedy: !0\n  }, {\n    pattern: /([\"'\\/])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: !0\n  }],\n  number: /\\b(?:0b[01_]+|0x[\\da-f_]+(?:\\.[\\da-f_p\\-]+)?|[\\d_]+(?:\\.[\\d_]+)?(?:e[+-]?[\\d]+)?)[glidf]?\\b/i,\n  operator: {\n    pattern: /(^|[^.])(?:~|==?~?|\\?[.:]?|\\*(?:[.=]|\\*=?)?|\\.[@&]|\\.\\.<|\\.{1,2}(?!\\.)|-[-=>]?|\\+[+=]?|!=?|<(?:<=?|=>?)?|>(?:>>?=?|=)?|&[&=]?|\\|[|=]?|\\/=?|\\^=?|%=?)/,\n    lookbehind: !0\n  },\n  punctuation: /\\.+|[{}[\\];(),:$]/\n}), Prism.languages.insertBefore(\"groovy\", \"string\", {\n  shebang: {\n    pattern: /#!.+/,\n    alias: \"comment\"\n  }\n}), Prism.languages.insertBefore(\"groovy\", \"punctuation\", {\n  \"spock-block\": /\\b(?:setup|given|when|then|and|cleanup|expect|where):/\n}), Prism.languages.insertBefore(\"groovy\", \"function\", {\n  annotation: {\n    alias: \"punctuation\",\n    pattern: /(^|[^.])@\\w+/,\n    lookbehind: !0\n  }\n}), Prism.hooks.add(\"wrap\", function (e) {\n  if (\"groovy\" === e.language && \"string\" === e.type) {\n    var t = e.content[0];\n\n    if (\"'\" != t) {\n      var n = /([^\\\\])(?:\\$(?:\\{.*?\\}|[\\w.]+))/;\n      \"$\" === t && (n = /([^\\$])(?:\\$(?:\\{.*?\\}|[\\w.]+))/), e.content = e.content.replace(/&lt;/g, \"<\").replace(/&amp;/g, \"&\"), e.content = Prism.highlight(e.content, {\n        expression: {\n          pattern: n,\n          lookbehind: !0,\n          inside: Prism.languages.groovy\n        }\n      }), e.classes.push(\"/\" === t ? \"regex\" : \"gstring\");\n    }\n  }\n}), function (e) {\n  e.languages.haml = {\n    \"multiline-comment\": {\n      pattern: /((?:^|\\r?\\n|\\r)([\\t ]*))(?:\\/|-#).*(?:(?:\\r?\\n|\\r)\\2[\\t ]+.+)*/,\n      lookbehind: !0,\n      alias: \"comment\"\n    },\n    \"multiline-code\": [{\n      pattern: /((?:^|\\r?\\n|\\r)([\\t ]*)(?:[~-]|[&!]?=)).*,[\\t ]*(?:(?:\\r?\\n|\\r)\\2[\\t ]+.*,[\\t ]*)*(?:(?:\\r?\\n|\\r)\\2[\\t ]+.+)/,\n      lookbehind: !0,\n      inside: {\n        rest: e.languages.ruby\n      }\n    }, {\n      pattern: /((?:^|\\r?\\n|\\r)([\\t ]*)(?:[~-]|[&!]?=)).*\\|[\\t ]*(?:(?:\\r?\\n|\\r)\\2[\\t ]+.*\\|[\\t ]*)*/,\n      lookbehind: !0,\n      inside: {\n        rest: e.languages.ruby\n      }\n    }],\n    filter: {\n      pattern: /((?:^|\\r?\\n|\\r)([\\t ]*)):[\\w-]+(?:(?:\\r?\\n|\\r)(?:\\2[\\t ]+.+|\\s*?(?=\\r?\\n|\\r)))+/,\n      lookbehind: !0,\n      inside: {\n        \"filter-name\": {\n          pattern: /^:[\\w-]+/,\n          alias: \"variable\"\n        }\n      }\n    },\n    markup: {\n      pattern: /((?:^|\\r?\\n|\\r)[\\t ]*)<.+/,\n      lookbehind: !0,\n      inside: {\n        rest: e.languages.markup\n      }\n    },\n    doctype: {\n      pattern: /((?:^|\\r?\\n|\\r)[\\t ]*)!!!(?: .+)?/,\n      lookbehind: !0\n    },\n    tag: {\n      pattern: /((?:^|\\r?\\n|\\r)[\\t ]*)[%.#][\\w\\-#.]*[\\w\\-](?:\\([^)]+\\)|\\{(?:\\{[^}]+\\}|[^}])+\\}|\\[[^\\]]+\\])*[\\/<>]*/,\n      lookbehind: !0,\n      inside: {\n        attributes: [{\n          pattern: /(^|[^#])\\{(?:\\{[^}]+\\}|[^}])+\\}/,\n          lookbehind: !0,\n          inside: {\n            rest: e.languages.ruby\n          }\n        }, {\n          pattern: /\\([^)]+\\)/,\n          inside: {\n            \"attr-value\": {\n              pattern: /(=\\s*)(?:\"(?:\\\\.|[^\\\\\"\\r\\n])*\"|[^)\\s]+)/,\n              lookbehind: !0\n            },\n            \"attr-name\": /[\\w:-]+(?=\\s*!?=|\\s*[,)])/,\n            punctuation: /[=(),]/\n          }\n        }, {\n          pattern: /\\[[^\\]]+\\]/,\n          inside: {\n            rest: e.languages.ruby\n          }\n        }],\n        punctuation: /[<>]/\n      }\n    },\n    code: {\n      pattern: /((?:^|\\r?\\n|\\r)[\\t ]*(?:[~-]|[&!]?=)).+/,\n      lookbehind: !0,\n      inside: {\n        rest: e.languages.ruby\n      }\n    },\n    interpolation: {\n      pattern: /#\\{[^}]+\\}/,\n      inside: {\n        delimiter: {\n          pattern: /^#\\{|\\}$/,\n          alias: \"punctuation\"\n        },\n        rest: e.languages.ruby\n      }\n    },\n    punctuation: {\n      pattern: /((?:^|\\r?\\n|\\r)[\\t ]*)[~=\\-&!]+/,\n      lookbehind: !0\n    }\n  };\n\n  for (var t = [\"css\", {\n    filter: \"coffee\",\n    language: \"coffeescript\"\n  }, \"erb\", \"javascript\", \"less\", \"markdown\", \"ruby\", \"scss\", \"textile\"], n = {}, a = 0, i = t.length; a < i; a++) {\n    var r = t[a];\n    e.languages[(r = \"string\" == typeof r ? {\n      filter: r,\n      language: r\n    } : r).language] && (n[\"filter-\" + r.filter] = {\n      pattern: RegExp(\"((?:^|\\\\r?\\\\n|\\\\r)([\\\\t ]*)):{{filter_name}}(?:(?:\\\\r?\\\\n|\\\\r)(?:\\\\2[\\\\t ]+.+|\\\\s*?(?=\\\\r?\\\\n|\\\\r)))+\".replace(\"{{filter_name}}\", r.filter)),\n      lookbehind: !0,\n      inside: {\n        \"filter-name\": {\n          pattern: /^:[\\w-]+/,\n          alias: \"variable\"\n        },\n        rest: e.languages[r.language]\n      }\n    });\n  }\n\n  e.languages.insertBefore(\"haml\", \"filter\", n);\n}(Prism), function (e) {\n  e.languages.handlebars = {\n    comment: /\\{\\{![\\s\\S]*?\\}\\}/,\n    delimiter: {\n      pattern: /^\\{\\{\\{?|\\}\\}\\}?$/i,\n      alias: \"punctuation\"\n    },\n    string: /([\"'])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    number: /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee][+-]?\\d+)?/,\n    boolean: /\\b(?:true|false)\\b/,\n    block: {\n      pattern: /^(\\s*~?\\s*)[#\\/]\\S+?(?=\\s*~?\\s*$|\\s)/i,\n      lookbehind: !0,\n      alias: \"keyword\"\n    },\n    brackets: {\n      pattern: /\\[[^\\]]+\\]/,\n      inside: {\n        punctuation: /\\[|\\]/,\n        variable: /[\\s\\S]+/\n      }\n    },\n    punctuation: /[!\"#%&'()*+,.\\/;<=>@\\[\\\\\\]^`{|}~]/,\n    variable: /[^!\"#%&'()*+,.\\/;<=>@\\[\\\\\\]^`{|}~\\s]+/\n  }, e.hooks.add(\"before-tokenize\", function (t) {\n    e.languages[\"markup-templating\"].buildPlaceholders(t, \"handlebars\", /\\{\\{\\{[\\s\\S]+?\\}\\}\\}|\\{\\{[\\s\\S]+?\\}\\}/g);\n  }), e.hooks.add(\"after-tokenize\", function (t) {\n    e.languages[\"markup-templating\"].tokenizePlaceholders(t, \"handlebars\");\n  });\n}(Prism), Prism.languages.haskell = {\n  comment: {\n    pattern: /(^|[^-!#$%*+=?&@|~.:<>^\\\\\\/])(?:--[^-!#$%*+=?&@|~.:<>^\\\\\\/].*|{-[\\s\\S]*?-})/m,\n    lookbehind: !0\n  },\n  char: /'(?:[^\\\\']|\\\\(?:[abfnrtv\\\\\"'&]|\\^[A-Z@[\\]^_]|NUL|SOH|STX|ETX|EOT|ENQ|ACK|BEL|BS|HT|LF|VT|FF|CR|SO|SI|DLE|DC1|DC2|DC3|DC4|NAK|SYN|ETB|CAN|EM|SUB|ESC|FS|GS|RS|US|SP|DEL|\\d+|o[0-7]+|x[0-9a-fA-F]+))'/,\n  string: {\n    pattern: /\"(?:[^\\\\\"]|\\\\(?:[abfnrtv\\\\\"'&]|\\^[A-Z@[\\]^_]|NUL|SOH|STX|ETX|EOT|ENQ|ACK|BEL|BS|HT|LF|VT|FF|CR|SO|SI|DLE|DC1|DC2|DC3|DC4|NAK|SYN|ETB|CAN|EM|SUB|ESC|FS|GS|RS|US|SP|DEL|\\d+|o[0-7]+|x[0-9a-fA-F]+)|\\\\\\s+\\\\)*\"/,\n    greedy: !0\n  },\n  keyword: /\\b(?:case|class|data|deriving|do|else|if|in|infixl|infixr|instance|let|module|newtype|of|primitive|then|type|where)\\b/,\n  import_statement: {\n    pattern: /((?:\\r?\\n|\\r|^)\\s*)import\\s+(?:qualified\\s+)?(?:[A-Z][\\w']*)(?:\\.[A-Z][\\w']*)*(?:\\s+as\\s+(?:[A-Z][_a-zA-Z0-9']*)(?:\\.[A-Z][\\w']*)*)?(?:\\s+hiding\\b)?/m,\n    lookbehind: !0,\n    inside: {\n      keyword: /\\b(?:import|qualified|as|hiding)\\b/\n    }\n  },\n  builtin: /\\b(?:abs|acos|acosh|all|and|any|appendFile|approxRational|asTypeOf|asin|asinh|atan|atan2|atanh|basicIORun|break|catch|ceiling|chr|compare|concat|concatMap|const|cos|cosh|curry|cycle|decodeFloat|denominator|digitToInt|div|divMod|drop|dropWhile|either|elem|encodeFloat|enumFrom|enumFromThen|enumFromThenTo|enumFromTo|error|even|exp|exponent|fail|filter|flip|floatDigits|floatRadix|floatRange|floor|fmap|foldl|foldl1|foldr|foldr1|fromDouble|fromEnum|fromInt|fromInteger|fromIntegral|fromRational|fst|gcd|getChar|getContents|getLine|group|head|id|inRange|index|init|intToDigit|interact|ioError|isAlpha|isAlphaNum|isAscii|isControl|isDenormalized|isDigit|isHexDigit|isIEEE|isInfinite|isLower|isNaN|isNegativeZero|isOctDigit|isPrint|isSpace|isUpper|iterate|last|lcm|length|lex|lexDigits|lexLitChar|lines|log|logBase|lookup|map|mapM|mapM_|max|maxBound|maximum|maybe|min|minBound|minimum|mod|negate|not|notElem|null|numerator|odd|or|ord|otherwise|pack|pi|pred|primExitWith|print|product|properFraction|putChar|putStr|putStrLn|quot|quotRem|range|rangeSize|read|readDec|readFile|readFloat|readHex|readIO|readInt|readList|readLitChar|readLn|readOct|readParen|readSigned|reads|readsPrec|realToFrac|recip|rem|repeat|replicate|return|reverse|round|scaleFloat|scanl|scanl1|scanr|scanr1|seq|sequence|sequence_|show|showChar|showInt|showList|showLitChar|showParen|showSigned|showString|shows|showsPrec|significand|signum|sin|sinh|snd|sort|span|splitAt|sqrt|subtract|succ|sum|tail|take|takeWhile|tan|tanh|threadToIOResult|toEnum|toInt|toInteger|toLower|toRational|toUpper|truncate|uncurry|undefined|unlines|until|unwords|unzip|unzip3|userError|words|writeFile|zip|zip3|zipWith|zipWith3)\\b/,\n  number: /\\b(?:\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?|0o[0-7]+|0x[0-9a-f]+)\\b/i,\n  operator: /\\s\\.\\s|[-!#$%*+=?&@|~.:<>^\\\\\\/]*\\.[-!#$%*+=?&@|~.:<>^\\\\\\/]+|[-!#$%*+=?&@|~.:<>^\\\\\\/]+\\.[-!#$%*+=?&@|~.:<>^\\\\\\/]*|[-!#$%*+=?&@|~:<>^\\\\\\/]+|`([A-Z][\\w']*\\.)*[_a-z][\\w']*`/,\n  hvariable: /\\b(?:[A-Z][\\w']*\\.)*[_a-z][\\w']*\\b/,\n  constant: /\\b(?:[A-Z][\\w']*\\.)*[A-Z][\\w']*\\b/,\n  punctuation: /[{}[\\];(),.:]/\n}, Prism.languages.haxe = Prism.languages.extend(\"clike\", {\n  string: {\n    pattern: /([\"'])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/,\n    greedy: !0,\n    inside: {\n      interpolation: {\n        pattern: /(^|[^\\\\])\\$(?:\\w+|\\{[^}]+\\})/,\n        lookbehind: !0,\n        inside: {\n          interpolation: {\n            pattern: /^\\$\\w*/,\n            alias: \"variable\"\n          }\n        }\n      }\n    }\n  },\n  keyword: /\\bthis\\b|\\b(?:abstract|as|break|case|cast|catch|class|continue|default|do|dynamic|else|enum|extends|extern|from|for|function|if|implements|import|in|inline|interface|macro|new|null|override|public|private|return|static|super|switch|throw|to|try|typedef|using|var|while)(?!\\.)\\b/,\n  operator: /\\.{3}|\\+\\+?|-[->]?|[=!]=?|&&?|\\|\\|?|<[<=]?|>[>=]?|[*\\/%~^]/\n}), Prism.languages.insertBefore(\"haxe\", \"class-name\", {\n  regex: {\n    pattern: /~\\/(?:[^\\/\\\\\\r\\n]|\\\\.)+\\/[igmsu]*/,\n    greedy: !0\n  }\n}), Prism.languages.insertBefore(\"haxe\", \"keyword\", {\n  preprocessor: {\n    pattern: /#\\w+/,\n    alias: \"builtin\"\n  },\n  metadata: {\n    pattern: /@:?\\w+/,\n    alias: \"symbol\"\n  },\n  reification: {\n    pattern: /\\$(?:\\w+|(?=\\{))/,\n    alias: \"variable\"\n  }\n}), Prism.languages.haxe.string.inside.interpolation.inside.rest = Prism.languages.haxe, delete Prism.languages.haxe[\"class-name\"], Prism.languages.hpkp = {\n  directive: {\n    pattern: /\\b(?:(?:includeSubDomains|preload|strict)(?: |;)|pin-sha256=\"[a-zA-Z\\d+=\\/]+\"|(?:max-age|report-uri)=|report-to )/,\n    alias: \"keyword\"\n  },\n  safe: {\n    pattern: /\\d{7,}/,\n    alias: \"selector\"\n  },\n  unsafe: {\n    pattern: /\\d{0,6}/,\n    alias: \"function\"\n  }\n}, Prism.languages.hsts = {\n  directive: {\n    pattern: /\\b(?:max-age=|includeSubDomains|preload)/,\n    alias: \"keyword\"\n  },\n  safe: {\n    pattern: /\\d{8,}/,\n    alias: \"selector\"\n  },\n  unsafe: {\n    pattern: /\\d{0,7}/,\n    alias: \"function\"\n  }\n}, Prism.languages.http = {\n  \"request-line\": {\n    pattern: /^(?:POST|GET|PUT|DELETE|OPTIONS|PATCH|TRACE|CONNECT)\\s(?:https?:\\/\\/|\\/)\\S+\\sHTTP\\/[0-9.]+/m,\n    inside: {\n      property: /^(?:POST|GET|PUT|DELETE|OPTIONS|PATCH|TRACE|CONNECT)\\b/,\n      \"attr-name\": /:\\w+/\n    }\n  },\n  \"response-status\": {\n    pattern: /^HTTP\\/1.[01] \\d+.*/m,\n    inside: {\n      property: {\n        pattern: /(^HTTP\\/1.[01] )\\d+.*/i,\n        lookbehind: !0\n      }\n    }\n  },\n  \"header-name\": {\n    pattern: /^[\\w-]+:(?=.)/m,\n    alias: \"keyword\"\n  }\n};\nvar httpLanguages = {\n  \"application/json\": Prism.languages.javascript,\n  \"application/xml\": Prism.languages.markup,\n  \"text/xml\": Prism.languages.markup,\n  \"text/html\": Prism.languages.markup\n};\n\nfor (var contentType in httpLanguages) {\n  if (httpLanguages[contentType]) {\n    var options = {};\n    options[contentType] = {\n      pattern: new RegExp(\"(content-type:\\\\s*\" + contentType + \"[\\\\w\\\\W]*?)(?:\\\\r?\\\\n|\\\\r){2}[\\\\w\\\\W]*\", \"i\"),\n      lookbehind: !0,\n      inside: {\n        rest: httpLanguages[contentType]\n      }\n    }, Prism.languages.insertBefore(\"http\", \"header-name\", options);\n  }\n}\n\nPrism.languages.ichigojam = {\n  comment: /(?:\\B'|REM)(?:[^\\n\\r]*)/i,\n  string: {\n    pattern: /\"(?:\"\"|[!#$%&'()*,\\/:;<=>?^_ +\\-.A-Z\\d])*\"/i,\n    greedy: !0\n  },\n  number: /\\B#[0-9A-F]+|\\B`[01]+|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:E[+-]?\\d+)?/i,\n  keyword: /\\b(?:BEEP|BPS|CASE|CLEAR|CLK|CLO|CLP|CLS|CLT|CLV|CONT|COPY|ELSE|END|FILE|FILES|FOR|GOSUB|GSB|GOTO|IF|INPUT|KBD|LED|LET|LIST|LOAD|LOCATE|LRUN|NEW|NEXT|OUT|RIGHT|PLAY|POKE|PRINT|PWM|REM|RENUM|RESET|RETURN|RTN|RUN|SAVE|SCROLL|SLEEP|SRND|STEP|STOP|SUB|TEMPO|THEN|TO|UART|VIDEO|WAIT)(?:\\$|\\b)/i,\n  function: /\\b(?:ABS|ANA|ASC|BIN|BTN|DEC|END|FREE|HELP|HEX|I2CR|I2CW|IN|INKEY|LEN|LINE|PEEK|RND|SCR|SOUND|STR|TICK|USR|VER|VPEEK|ZER)(?:\\$|\\b)/i,\n  label: /(?:\\B@[^\\s]+)/i,\n  operator: /<[=>]?|>=?|\\|\\||&&|[+\\-*\\/=|&^~!]|\\b(?:AND|NOT|OR)\\b/i,\n  punctuation: /[\\[,;:()\\]]/\n}, Prism.languages.icon = {\n  comment: /#.*/,\n  string: {\n    pattern: /([\"'])(?:(?!\\1)[^\\\\\\r\\n_]|\\\\.|_(?!\\1)(?:\\r\\n|[\\s\\S]))*\\1/,\n    greedy: !0\n  },\n  number: /\\b(?:\\d+r[a-z\\d]+|\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?)\\b|\\.\\d+\\b/i,\n  \"builtin-keyword\": {\n    pattern: /&(?:allocated|ascii|clock|collections|cset|current|date|dateline|digits|dump|e|error(?:number|text|value)?|errout|fail|features|file|host|input|lcase|letters|level|line|main|null|output|phi|pi|pos|progname|random|regions|source|storage|subject|time|trace|ucase|version)\\b/,\n    alias: \"variable\"\n  },\n  directive: {\n    pattern: /\\$\\w+/,\n    alias: \"builtin\"\n  },\n  keyword: /\\b(?:break|by|case|create|default|do|else|end|every|fail|global|if|initial|invocable|link|local|next|not|of|procedure|record|repeat|return|static|suspend|then|to|until|while)\\b/,\n  function: /(?!\\d)\\w+(?=\\s*[({]|\\s*!\\s*\\[)/,\n  operator: /[+-]:(?!=)|(?:[\\/?@^%&]|\\+\\+?|--?|==?=?|~==?=?|\\*\\*?|\\|\\|\\|?|<(?:->?|<?=?)|>>?=?)(?::=)?|:(?:=:?)?|[!.\\\\|~]/,\n  punctuation: /[\\[\\](){},;]/\n}, Prism.languages.inform7 = {\n  string: {\n    pattern: /\"[^\"]*\"/,\n    inside: {\n      substitution: {\n        pattern: /\\[[^\\]]+\\]/,\n        inside: {\n          delimiter: {\n            pattern: /\\[|\\]/,\n            alias: \"punctuation\"\n          }\n        }\n      }\n    }\n  },\n  comment: {\n    pattern: /\\[[^\\]]+\\]/,\n    greedy: !0\n  },\n  title: {\n    pattern: /^[ \\t]*(?:volume|book|part(?! of)|chapter|section|table)\\b.+/im,\n    alias: \"important\"\n  },\n  number: {\n    pattern: /(^|[^-])(?:\\b\\d+(?:\\.\\d+)?(?:\\^\\d+)?\\w*|\\b(?:one|two|three|four|five|six|seven|eight|nine|ten|eleven|twelve))\\b(?!-)/i,\n    lookbehind: !0\n  },\n  verb: {\n    pattern: /(^|[^-])\\b(?:applying to|are|attacking|answering|asking|be(?:ing)?|burning|buying|called|carries|carry(?! out)|carrying|climbing|closing|conceal(?:s|ing)?|consulting|contain(?:s|ing)?|cutting|drinking|dropping|eating|enclos(?:es?|ing)|entering|examining|exiting|getting|giving|going|ha(?:ve|s|ving)|hold(?:s|ing)?|impl(?:y|ies)|incorporat(?:es?|ing)|inserting|is|jumping|kissing|listening|locking|looking|mean(?:s|ing)?|opening|provid(?:es?|ing)|pulling|pushing|putting|relat(?:es?|ing)|removing|searching|see(?:s|ing)?|setting|showing|singing|sleeping|smelling|squeezing|switching|support(?:s|ing)?|swearing|taking|tasting|telling|thinking|throwing|touching|turning|tying|unlock(?:s|ing)?|var(?:y|ies|ying)|waiting|waking|waving|wear(?:s|ing)?)\\b(?!-)/i,\n    lookbehind: !0,\n    alias: \"operator\"\n  },\n  keyword: {\n    pattern: /(^|[^-])\\b(?:after|before|carry out|check|continue the action|definition(?= *:)|do nothing|else|end (?:if|unless|the story)|every turn|if|include|instead(?: of)?|let|move|no|now|otherwise|repeat|report|resume the story|rule for|running through|say(?:ing)?|stop the action|test|try(?:ing)?|understand|unless|use|when|while|yes)\\b(?!-)/i,\n    lookbehind: !0\n  },\n  property: {\n    pattern: /(^|[^-])\\b(?:adjacent(?! to)|carried|closed|concealed|contained|dark|described|edible|empty|enclosed|enterable|even|female|fixed in place|full|handled|held|improper-named|incorporated|inedible|invisible|lighted|lit|lock(?:able|ed)|male|marked for listing|mentioned|negative|neuter|non-(?:empty|full|recurring)|odd|opaque|open(?:able)?|plural-named|portable|positive|privately-named|proper-named|provided|publically-named|pushable between rooms|recurring|related|rubbing|scenery|seen|singular-named|supported|swinging|switch(?:able|ed(?: on| off)?)|touch(?:able|ed)|transparent|unconcealed|undescribed|unlit|unlocked|unmarked for listing|unmentioned|unopenable|untouchable|unvisited|variable|visible|visited|wearable|worn)\\b(?!-)/i,\n    lookbehind: !0,\n    alias: \"symbol\"\n  },\n  position: {\n    pattern: /(^|[^-])\\b(?:above|adjacent to|back side of|below|between|down|east|everywhere|front side|here|in|inside(?: from)?|north(?:east|west)?|nowhere|on(?: top of)?|other side|outside(?: from)?|parts? of|regionally in|south(?:east|west)?|through|up|west|within)\\b(?!-)/i,\n    lookbehind: !0,\n    alias: \"keyword\"\n  },\n  type: {\n    pattern: /(^|[^-])\\b(?:actions?|activit(?:y|ies)|actors?|animals?|backdrops?|containers?|devices?|directions?|doors?|holders?|kinds?|lists?|m[ae]n|nobody|nothing|nouns?|numbers?|objects?|people|persons?|player(?:'s holdall)?|regions?|relations?|rooms?|rule(?:book)?s?|scenes?|someone|something|supporters?|tables?|texts?|things?|time|vehicles?|wom[ae]n)\\b(?!-)/i,\n    lookbehind: !0,\n    alias: \"variable\"\n  },\n  punctuation: /[.,:;(){}]/\n}, Prism.languages.inform7.string.inside.substitution.inside.rest = Prism.languages.inform7, Prism.languages.inform7.string.inside.substitution.inside.rest.text = {\n  pattern: /\\S(?:\\s*\\S)*/,\n  alias: \"comment\"\n}, Prism.languages.ini = {\n  comment: /^[ \\t]*;.*$/m,\n  selector: /^[ \\t]*\\[.*?\\]/m,\n  constant: /^[ \\t]*[^\\s=]+?(?=[ \\t]*=)/m,\n  \"attr-value\": {\n    pattern: /=.*/,\n    inside: {\n      punctuation: /^[=]/\n    }\n  }\n}, Prism.languages.io = {\n  comment: [{\n    pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n    lookbehind: !0\n  }, {\n    pattern: /(^|[^\\\\])\\/\\/.*/,\n    lookbehind: !0\n  }, {\n    pattern: /(^|[^\\\\])#.*/,\n    lookbehind: !0\n  }],\n  \"triple-quoted-string\": {\n    pattern: /\"\"\"(?:\\\\[\\s\\S]|(?!\"\"\")[^\\\\])*\"\"\"/,\n    greedy: !0,\n    alias: \"string\"\n  },\n  string: {\n    pattern: /\"(?:\\\\.|[^\\\\\\r\\n\"])*\"/,\n    greedy: !0\n  },\n  keyword: /\\b(?:activate|activeCoroCount|asString|block|break|catch|clone|collectGarbage|compileString|continue|do|doFile|doMessage|doString|else|elseif|exit|for|foreach|forward|getSlot|getEnvironmentVariable|hasSlot|if|ifFalse|ifNil|ifNilEval|ifTrue|isActive|isNil|isResumable|list|message|method|parent|pass|pause|perform|performWithArgList|print|println|proto|raise|raiseResumable|removeSlot|resend|resume|schedulerSleepSeconds|self|sender|setSchedulerSleepSeconds|setSlot|shallowCopy|slotNames|super|system|then|thisBlock|thisContext|call|try|type|uniqueId|updateSlot|wait|while|write|yield)\\b/,\n  builtin: /\\b(?:Array|AudioDevice|AudioMixer|Block|Box|Buffer|CFunction|CGI|Color|Curses|DBM|DNSResolver|DOConnection|DOProxy|DOServer|Date|Directory|Duration|DynLib|Error|Exception|FFT|File|Fnmatch|Font|Future|GL|GLE|GLScissor|GLU|GLUCylinder|GLUQuadric|GLUSphere|GLUT|Host|Image|Importer|LinkList|List|Lobby|Locals|MD5|MP3Decoder|MP3Encoder|Map|Message|Movie|Notification|Number|Object|OpenGL|Point|Protos|Regex|SGML|SGMLElement|SGMLParser|SQLite|Server|Sequence|ShowMessage|SleepyCat|SleepyCatCursor|Socket|SocketManager|Sound|Soup|Store|String|Tree|UDPSender|UPDReceiver|URL|User|Warning|WeakLink|Random|BigNum|Sequence)\\b/,\n  boolean: /\\b(?:true|false|nil)\\b/,\n  number: /\\b0x[\\da-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e-?\\d+)?/i,\n  operator: /[=!*\\/%+-^&|]=|>>?=?|<<?=?|:?:?=|\\+\\+?|--?|\\*\\*?|\\/\\/?|%|\\|\\|?|&&?|(\\b(?:return|and|or|not)\\b)|@@?|\\?\\??|\\.\\./,\n  punctuation: /[{}[\\];(),.:]/\n}, Prism.languages.j = {\n  comment: /\\bNB\\..*/,\n  string: {\n    pattern: /'(?:''|[^'\\r\\n])*'/,\n    greedy: !0\n  },\n  keyword: /\\b(?:(?:adverb|conjunction|CR|def|define|dyad|LF|monad|noun|verb)\\b|(?:assert|break|case|catch[dt]?|continue|do|else|elseif|end|fcase|for|for_\\w+|goto_\\w+|if|label_\\w+|return|select|throw|try|while|whilst)\\.)/,\n  verb: {\n    pattern: /(?!\\^:|;\\.|[=!][.:])(?:\\{(?:\\.|::?)?|p(?:\\.\\.?|:)|[=!\\]]|[<>+*\\-%$|,#][.:]?|[?^]\\.?|[;\\[]:?|[~}\"i][.:]|[ACeEIjLor]\\.|(?:[_\\/\\\\qsux]|_?\\d):)/,\n    alias: \"keyword\"\n  },\n  number: /\\b_?(?:(?!\\d:)\\d+(?:\\.\\d+)?(?:(?:[ejpx]|ad|ar)_?\\d+(?:\\.\\d+)?)*(?:b_?[\\da-z]+(?:\\.[\\da-z]+)?)?|_(?!\\.))/,\n  adverb: {\n    pattern: /[~}]|[\\/\\\\]\\.?|[bfM]\\.|t[.:]/,\n    alias: \"builtin\"\n  },\n  operator: /[=a][.:]|_\\./,\n  conjunction: {\n    pattern: /&(?:\\.:?|:)?|[.:@][.:]?|[!D][.:]|[;dHT]\\.|`:?|[\\^LS]:|\"/,\n    alias: \"variable\"\n  },\n  punctuation: /[()]/\n}, Prism.languages.java = Prism.languages.extend(\"clike\", {\n  keyword: /\\b(?:abstract|continue|for|new|switch|assert|default|goto|package|synchronized|boolean|do|if|private|this|break|double|implements|protected|throw|byte|else|import|public|throws|case|enum|instanceof|return|transient|catch|extends|int|short|try|char|final|interface|static|void|class|finally|long|strictfp|volatile|const|float|native|super|while)\\b/,\n  number: /\\b0b[01]+\\b|\\b0x[\\da-f]*\\.?[\\da-fp-]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?[df]?/i,\n  operator: {\n    pattern: /(^|[^.])(?:\\+[+=]?|-[-=]?|!=?|<<?=?|>>?>?=?|==?|&[&=]?|\\|[|=]?|\\*=?|\\/=?|%=?|\\^=?|[?:~])/m,\n    lookbehind: !0\n  }\n}), Prism.languages.insertBefore(\"java\", \"function\", {\n  annotation: {\n    alias: \"punctuation\",\n    pattern: /(^|[^.])@\\w+/,\n    lookbehind: !0\n  }\n}), Prism.languages.insertBefore(\"java\", \"class-name\", {\n  generics: {\n    pattern: /<\\s*\\w+(?:\\.\\w+)?(?:\\s*,\\s*\\w+(?:\\.\\w+)?)*>/i,\n    alias: \"function\",\n    inside: {\n      keyword: Prism.languages.java.keyword,\n      punctuation: /[<>(),.:]/\n    }\n  }\n}), Prism.languages.jolie = Prism.languages.extend(\"clike\", {\n  keyword: /\\b(?:include|define|is_defined|undef|main|init|outputPort|inputPort|Location|Protocol|Interfaces|RequestResponse|OneWay|type|interface|extender|throws|cset|csets|forward|Aggregates|Redirects|embedded|courier|execution|sequential|concurrent|single|scope|install|throw|comp|cH|default|global|linkIn|linkOut|synchronized|this|new|for|if|else|while|in|Jolie|Java|Javascript|nullProcess|spawn|constants|with|provide|until|exit|foreach|instanceof|over|service)\\b/,\n  builtin: /\\b(?:undefined|string|int|void|long|Byte|bool|double|float|char|any)\\b/,\n  number: /(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?l?/i,\n  operator: /-[-=>]?|\\+[+=]?|<[<=]?|[>=*!]=?|&&|\\|\\||[:?\\/%^]/,\n  symbol: /[|;@]/,\n  punctuation: /[,.]/,\n  string: {\n    pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: !0\n  }\n}), delete Prism.languages.jolie[\"class-name\"], delete Prism.languages.jolie.function, Prism.languages.insertBefore(\"jolie\", \"keyword\", {\n  function: {\n    pattern: /((?:\\b(?:outputPort|inputPort|in|service|courier)\\b|@)\\s*)\\w+/,\n    lookbehind: !0\n  },\n  aggregates: {\n    pattern: /(\\bAggregates\\s*:\\s*)(?:\\w+(?:\\s+with\\s+\\w+)?\\s*,\\s*)*\\w+(?:\\s+with\\s+\\w+)?/,\n    lookbehind: !0,\n    inside: {\n      withExtension: {\n        pattern: /\\bwith\\s+\\w+/,\n        inside: {\n          keyword: /\\bwith\\b/\n        }\n      },\n      function: {\n        pattern: /\\w+/\n      },\n      punctuation: {\n        pattern: /,/\n      }\n    }\n  },\n  redirects: {\n    pattern: /(\\bRedirects\\s*:\\s*)(?:\\w+\\s*=>\\s*\\w+\\s*,\\s*)*(?:\\w+\\s*=>\\s*\\w+)/,\n    lookbehind: !0,\n    inside: {\n      punctuation: {\n        pattern: /,/\n      },\n      function: {\n        pattern: /\\w+/\n      },\n      symbol: {\n        pattern: /=>/\n      }\n    }\n  }\n}), Prism.languages.json = {\n  property: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?=\\s*:)/i,\n  string: {\n    pattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?!\\s*:)/,\n    greedy: !0\n  },\n  number: /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee][+-]?\\d+)?/,\n  punctuation: /[{}[\\]);,]/,\n  operator: /:/g,\n  boolean: /\\b(?:true|false)\\b/i,\n  null: /\\bnull\\b/i\n}, Prism.languages.jsonp = Prism.languages.json, function (e) {\n  var t = e.util.clone(e.languages.javascript);\n  e.languages.jsx = e.languages.extend(\"markup\", t), e.languages.jsx.tag.pattern = /<\\/?(?:[\\w.:-]+\\s*(?:\\s+(?:[\\w.:-]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s{'\">=]+|\\{(?:\\{(?:\\{[^}]*\\}|[^{}])*\\}|[^{}])+\\}))?|\\{\\.{3}[a-z_$][\\w$]*(?:\\.[a-z_$][\\w$]*)*\\}))*\\s*\\/?)?>/i, e.languages.jsx.tag.inside.tag.pattern = /^<\\/?[^\\s>\\/]*/i, e.languages.jsx.tag.inside[\"attr-value\"].pattern = /=(?!\\{)(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">]+)/i, e.languages.insertBefore(\"inside\", \"attr-name\", {\n    spread: {\n      pattern: /\\{\\.{3}[a-z_$][\\w$]*(?:\\.[a-z_$][\\w$]*)*\\}/,\n      inside: {\n        punctuation: /\\.{3}|[{}.]/,\n        \"attr-value\": /\\w+/\n      }\n    }\n  }, e.languages.jsx.tag), e.languages.insertBefore(\"inside\", \"attr-value\", {\n    script: {\n      pattern: /=(\\{(?:\\{(?:\\{[^}]*\\}|[^}])*\\}|[^}])+\\})/i,\n      inside: {\n        \"script-punctuation\": {\n          pattern: /^=(?={)/,\n          alias: \"punctuation\"\n        },\n        rest: e.languages.jsx\n      },\n      alias: \"language-javascript\"\n    }\n  }, e.languages.jsx.tag);\n\n  var n = function n(e) {\n    return e ? \"string\" == typeof e ? e : \"string\" == typeof e.content ? e.content : e.content.map(n).join(\"\") : \"\";\n  },\n      a = function a(t) {\n    for (var i = [], r = 0; r < t.length; r++) {\n      var o = t[r],\n          s = !1;\n\n      if (\"string\" != typeof o && (\"tag\" === o.type && o.content[0] && \"tag\" === o.content[0].type ? \"</\" === o.content[0].content[0].content ? i.length > 0 && i[i.length - 1].tagName === n(o.content[0].content[1]) && i.pop() : \"/>\" === o.content[o.content.length - 1].content || i.push({\n        tagName: n(o.content[0].content[1]),\n        openedBraces: 0\n      }) : i.length > 0 && \"punctuation\" === o.type && \"{\" === o.content ? i[i.length - 1].openedBraces++ : i.length > 0 && i[i.length - 1].openedBraces > 0 && \"punctuation\" === o.type && \"}\" === o.content ? i[i.length - 1].openedBraces-- : s = !0), (s || \"string\" == typeof o) && i.length > 0 && 0 === i[i.length - 1].openedBraces) {\n        var l = n(o);\n        r < t.length - 1 && (\"string\" == typeof t[r + 1] || \"plain-text\" === t[r + 1].type) && (l += n(t[r + 1]), t.splice(r + 1, 1)), r > 0 && (\"string\" == typeof t[r - 1] || \"plain-text\" === t[r - 1].type) && (l = n(t[r - 1]) + l, t.splice(r - 1, 1), r--), t[r] = new e.Token(\"plain-text\", l, null, l);\n      }\n\n      o.content && \"string\" != typeof o.content && a(o.content);\n    }\n  };\n\n  e.hooks.add(\"after-tokenize\", function (e) {\n    \"jsx\" !== e.language && \"tsx\" !== e.language || a(e.tokens);\n  });\n}(Prism), Prism.languages.julia = {\n  comment: {\n    pattern: /(^|[^\\\\])#.*/,\n    lookbehind: !0\n  },\n  string: /(\"\"\"|''')[\\s\\S]+?\\1|(\"|')(?:\\\\.|(?!\\2)[^\\\\\\r\\n])*\\2/,\n  keyword: /\\b(?:abstract|baremodule|begin|bitstype|break|catch|ccall|const|continue|do|else|elseif|end|export|finally|for|function|global|if|immutable|import|importall|let|local|macro|module|print|println|quote|return|try|type|typealias|using|while)\\b/,\n  boolean: /\\b(?:true|false)\\b/,\n  number: /(?:\\b(?=\\d)|\\B(?=\\.))(?:0[box])?(?:[\\da-f]+\\.?\\d*|\\.\\d+)(?:[efp][+-]?\\d+)?j?/i,\n  operator: /[-+*^%÷&$\\\\]=?|\\/[\\/=]?|!=?=?|\\|[=>]?|<(?:<=?|[=:])?|>(?:=|>>?=?)?|==?=?|[~≠≤≥]/,\n  punctuation: /[{}[\\];(),.:]/\n}, Prism.languages.keyman = {\n  comment: /\\bc\\s.*/i,\n  function: /\\[\\s*(?:(?:CTRL|SHIFT|ALT|LCTRL|RCTRL|LALT|RALT|CAPS|NCAPS)\\s+)*(?:[TKU]_[\\w?]+|\".+?\"|'.+?')\\s*\\]/i,\n  string: /(\"|').*?\\1/,\n  bold: [/&(?:baselayout|bitmap|capsononly|capsalwaysoff|shiftfreescaps|copyright|ethnologuecode|hotkey|includecodes|keyboardversion|kmw_embedcss|kmw_embedjs|kmw_helpfile|kmw_helptext|kmw_rtl|language|layer|layoutfile|message|mnemoniclayout|name|oldcharposmatching|platform|targets|version|visualkeyboard|windowslanguages)\\b/i, /\\b(?:bitmap|bitmaps|caps on only|caps always off|shift frees caps|copyright|hotkey|language|layout|message|name|version)\\b/i],\n  keyword: /\\b(?:any|baselayout|beep|call|context|deadkey|dk|if|index|layer|notany|nul|outs|platform|return|reset|save|set|store|use)\\b/i,\n  atrule: /\\b(?:ansi|begin|unicode|group|using keys|match|nomatch)\\b/i,\n  number: /\\b(?:U\\+[\\dA-F]+|d\\d+|x[\\da-f]+|\\d+)\\b/i,\n  operator: /[+>\\\\,()]/,\n  tag: /\\$(?:keyman|kmfl|weaver|keymanweb|keymanonly):/i\n}, function (e) {\n  e.languages.kotlin = e.languages.extend(\"clike\", {\n    keyword: {\n      pattern: /(^|[^.])\\b(?:abstract|actual|annotation|as|break|by|catch|class|companion|const|constructor|continue|crossinline|data|do|dynamic|else|enum|expect|external|final|finally|for|fun|get|if|import|in|infix|init|inline|inner|interface|internal|is|lateinit|noinline|null|object|open|operator|out|override|package|private|protected|public|reified|return|sealed|set|super|suspend|tailrec|this|throw|to|try|typealias|val|var|vararg|when|where|while)\\b/,\n      lookbehind: !0\n    },\n    function: [/\\w+(?=\\s*\\()/, {\n      pattern: /(\\.)\\w+(?=\\s*\\{)/,\n      lookbehind: !0\n    }],\n    number: /\\b(?:0[xX][\\da-fA-F]+(?:_[\\da-fA-F]+)*|0[bB][01]+(?:_[01]+)*|\\d+(?:_\\d+)*(?:\\.\\d+(?:_\\d+)*)?(?:[eE][+-]?\\d+(?:_\\d+)*)?[fFL]?)\\b/,\n    operator: /\\+[+=]?|-[-=>]?|==?=?|!(?:!|==?)?|[\\/*%<>]=?|[?:]:?|\\.\\.|&&|\\|\\||\\b(?:and|inv|or|shl|shr|ushr|xor)\\b/\n  }), delete e.languages.kotlin[\"class-name\"], e.languages.insertBefore(\"kotlin\", \"string\", {\n    \"raw-string\": {\n      pattern: /(\"\"\"|''')[\\s\\S]*?\\1/,\n      alias: \"string\"\n    }\n  }), e.languages.insertBefore(\"kotlin\", \"keyword\", {\n    annotation: {\n      pattern: /\\B@(?:\\w+:)?(?:[A-Z]\\w*|\\[[^\\]]+\\])/,\n      alias: \"builtin\"\n    }\n  }), e.languages.insertBefore(\"kotlin\", \"function\", {\n    label: {\n      pattern: /\\w+@|@\\w+/,\n      alias: \"symbol\"\n    }\n  }), e.languages.kotlin.string.inside = e.languages.kotlin[\"raw-string\"].inside = {\n    interpolation: [{\n      pattern: /\\$\\{[^}]+\\}/,\n      inside: {\n        delimiter: {\n          pattern: /^\\$\\{|\\}$/,\n          alias: \"variable\"\n        },\n        rest: e.languages.kotlin\n      }\n    }, {\n      pattern: /\\$\\w+/,\n      alias: \"variable\"\n    }]\n  };\n}(Prism), function (e) {\n  var t = /\\\\(?:[^a-z()[\\]]|[a-z*]+)/i,\n      n = {\n    \"equation-command\": {\n      pattern: t,\n      alias: \"regex\"\n    }\n  };\n  e.languages.latex = {\n    comment: /%.*/m,\n    cdata: {\n      pattern: /(\\\\begin\\{((?:verbatim|lstlisting)\\*?)\\})[\\s\\S]*?(?=\\\\end\\{\\2\\})/,\n      lookbehind: !0\n    },\n    equation: [{\n      pattern: /\\$(?:\\\\[\\s\\S]|[^\\\\$])*\\$|\\\\\\([\\s\\S]*?\\\\\\)|\\\\\\[[\\s\\S]*?\\\\\\]/,\n      inside: n,\n      alias: \"string\"\n    }, {\n      pattern: /(\\\\begin\\{((?:equation|math|eqnarray|align|multline|gather)\\*?)\\})[\\s\\S]*?(?=\\\\end\\{\\2\\})/,\n      lookbehind: !0,\n      inside: n,\n      alias: \"string\"\n    }],\n    keyword: {\n      pattern: /(\\\\(?:begin|end|ref|cite|label|usepackage|documentclass)(?:\\[[^\\]]+\\])?\\{)[^}]+(?=\\})/,\n      lookbehind: !0\n    },\n    url: {\n      pattern: /(\\\\url\\{)[^}]+(?=\\})/,\n      lookbehind: !0\n    },\n    headline: {\n      pattern: /(\\\\(?:part|chapter|section|subsection|frametitle|subsubsection|paragraph|subparagraph|subsubparagraph|subsubsubparagraph)\\*?(?:\\[[^\\]]+\\])?\\{)[^}]+(?=\\}(?:\\[[^\\]]+\\])?)/,\n      lookbehind: !0,\n      alias: \"class-name\"\n    },\n    function: {\n      pattern: t,\n      alias: \"selector\"\n    },\n    punctuation: /[[\\]{}&]/\n  };\n}(Prism), Prism.languages.less = Prism.languages.extend(\"css\", {\n  comment: [/\\/\\*[\\s\\S]*?\\*\\//, {\n    pattern: /(^|[^\\\\])\\/\\/.*/,\n    lookbehind: !0\n  }],\n  atrule: {\n    pattern: /@[\\w-]+?(?:\\([^{}]+\\)|[^(){};])*?(?=\\s*\\{)/i,\n    inside: {\n      punctuation: /[:()]/\n    }\n  },\n  selector: {\n    pattern: /(?:@\\{[\\w-]+\\}|[^{};\\s@])(?:@\\{[\\w-]+\\}|\\([^{}]*\\)|[^{};@])*?(?=\\s*\\{)/,\n    inside: {\n      variable: /@+[\\w-]+/\n    }\n  },\n  property: /(?:@\\{[\\w-]+\\}|[\\w-])+(?:\\+_?)?(?=\\s*:)/i,\n  punctuation: /[{}();:,]/,\n  operator: /[+\\-*\\/]/\n}), Prism.languages.insertBefore(\"less\", \"punctuation\", {\n  function: Prism.languages.less.function\n}), Prism.languages.insertBefore(\"less\", \"property\", {\n  variable: [{\n    pattern: /@[\\w-]+\\s*:/,\n    inside: {\n      punctuation: /:/\n    }\n  }, /@@?[\\w-]+/],\n  \"mixin-usage\": {\n    pattern: /([{;]\\s*)[.#](?!\\d)[\\w-]+.*?(?=[(;])/,\n    lookbehind: !0,\n    alias: \"function\"\n  }\n}), Prism.languages.liquid = {\n  keyword: /\\b(?:comment|endcomment|if|elsif|else|endif|unless|endunless|for|endfor|case|endcase|when|in|break|assign|continue|limit|offset|range|reversed|raw|endraw|capture|endcapture|tablerow|endtablerow)\\b/,\n  number: /\\b0b[01]+\\b|\\b0x[\\da-f]*\\.?[\\da-fp-]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?[df]?/i,\n  operator: {\n    pattern: /(^|[^.])(?:\\+[+=]?|-[-=]?|!=?|<<?=?|>>?>?=?|==?|&[&=]?|\\|[|=]?|\\*=?|\\/=?|%=?|\\^=?|[?:~])/m,\n    lookbehind: !0\n  },\n  function: {\n    pattern: /(^|[\\s;|&])(?:append|prepend|capitalize|cycle|cols|increment|decrement|abs|at_least|at_most|ceil|compact|concat|date|default|divided_by|downcase|escape|escape_once|first|floor|join|last|lstrip|map|minus|modulo|newline_to_br|plus|remove|remove_first|replace|replace_first|reverse|round|rstrip|size|slice|sort|sort_natural|split|strip|strip_html|strip_newlines|times|truncate|truncatewords|uniq|upcase|url_decode|url_encode|include|paginate)(?=$|[\\s;|&])/,\n    lookbehind: !0\n  }\n}, function (e) {\n  function t(e) {\n    return new RegExp(\"(\\\\()\" + e + \"(?=[\\\\s\\\\)])\");\n  }\n\n  function n(e) {\n    return new RegExp(\"([\\\\s([])\" + e + \"(?=[\\\\s)])\");\n  }\n\n  var a = \"[-+*/_~!@$%^=<>{}\\\\w]+\",\n      i = \"(\\\\()\",\n      r = {\n    heading: {\n      pattern: /;;;.*/,\n      alias: [\"comment\", \"title\"]\n    },\n    comment: /;.*/,\n    string: {\n      pattern: /\"(?:[^\"\\\\]*|\\\\.)*\"/,\n      greedy: !0,\n      inside: {\n        argument: /[-A-Z]+(?=[.,\\s])/,\n        symbol: new RegExp(\"`\" + a + \"'\")\n      }\n    },\n    \"quoted-symbol\": {\n      pattern: new RegExp(\"#?'\" + a),\n      alias: [\"variable\", \"symbol\"]\n    },\n    \"lisp-property\": {\n      pattern: new RegExp(\":\" + a),\n      alias: \"property\"\n    },\n    splice: {\n      pattern: new RegExp(\",@?\" + a),\n      alias: [\"symbol\", \"variable\"]\n    },\n    keyword: [{\n      pattern: new RegExp(i + \"(?:(?:lexical-)?let\\\\*?|(?:cl-)?letf|if|when|while|unless|cons|cl-loop|and|or|not|cond|setq|error|message|null|require|provide|use-package)(?=\\\\s)\"),\n      lookbehind: !0\n    }, {\n      pattern: new RegExp(i + \"(?:for|do|collect|return|finally|append|concat|in|by)(?=\\\\s)\"),\n      lookbehind: !0\n    }],\n    declare: {\n      pattern: t(\"declare\"),\n      lookbehind: !0,\n      alias: \"keyword\"\n    },\n    interactive: {\n      pattern: t(\"interactive\"),\n      lookbehind: !0,\n      alias: \"keyword\"\n    },\n    boolean: {\n      pattern: n(\"(?:t|nil)\"),\n      lookbehind: !0\n    },\n    number: {\n      pattern: n(\"[-+]?\\\\d+(?:\\\\.\\\\d*)?\"),\n      lookbehind: !0\n    },\n    defvar: {\n      pattern: new RegExp(i + \"def(?:var|const|custom|group)\\\\s+\" + a),\n      lookbehind: !0,\n      inside: {\n        keyword: /^def[a-z]+/,\n        variable: new RegExp(a)\n      }\n    },\n    defun: {\n      pattern: new RegExp(i + \"(?:cl-)?(?:defun\\\\*?|defmacro)\\\\s+\" + a + \"\\\\s+\\\\([\\\\s\\\\S]*?\\\\)\"),\n      lookbehind: !0,\n      inside: {\n        keyword: /^(?:cl-)?def\\S+/,\n        arguments: null,\n        function: {\n          pattern: new RegExp(\"(^\\\\s)\" + a),\n          lookbehind: !0\n        },\n        punctuation: /[()]/\n      }\n    },\n    lambda: {\n      pattern: new RegExp(i + \"lambda\\\\s+\\\\((?:&?\" + a + \"\\\\s*)*\\\\)\"),\n      lookbehind: !0,\n      inside: {\n        keyword: /^lambda/,\n        arguments: null,\n        punctuation: /[()]/\n      }\n    },\n    car: {\n      pattern: new RegExp(i + a),\n      lookbehind: !0\n    },\n    punctuation: [/(['`,]?\\(|[)\\[\\]])/, {\n      pattern: /(\\s)\\.(?=\\s)/,\n      lookbehind: !0\n    }]\n  },\n      o = {\n    \"lisp-marker\": new RegExp(\"&[-+*/_~!@$%^=<>{}\\\\w]+\"),\n    rest: {\n      argument: {\n        pattern: new RegExp(a),\n        alias: \"variable\"\n      },\n      varform: {\n        pattern: new RegExp(i + a + \"\\\\s+\\\\S[\\\\s\\\\S]*(?=\\\\))\"),\n        lookbehind: !0,\n        inside: {\n          string: r.string,\n          boolean: r.boolean,\n          number: r.number,\n          symbol: r.symbol,\n          punctuation: /[()]/\n        }\n      }\n    }\n  },\n      s = \"\\\\S+(?:\\\\s+\\\\S+)*\",\n      l = {\n    pattern: new RegExp(i + \"[\\\\s\\\\S]*(?=\\\\))\"),\n    lookbehind: !0,\n    inside: {\n      \"rest-vars\": {\n        pattern: new RegExp(\"&(?:rest|body)\\\\s+\" + s),\n        inside: o\n      },\n      \"other-marker-vars\": {\n        pattern: new RegExp(\"&(?:optional|aux)\\\\s+\" + s),\n        inside: o\n      },\n      keys: {\n        pattern: new RegExp(\"&key\\\\s+\" + s + \"(?:\\\\s+&allow-other-keys)?\"),\n        inside: o\n      },\n      argument: {\n        pattern: new RegExp(a),\n        alias: \"variable\"\n      },\n      punctuation: /[()]/\n    }\n  };\n  r.lambda.inside.arguments = l, r.defun.inside.arguments = e.util.clone(l), r.defun.inside.arguments.inside.sublist = l, e.languages.lisp = r, e.languages.elisp = r, e.languages.emacs = r, e.languages[\"emacs-lisp\"] = r;\n}(Prism), Prism.languages.livescript = {\n  comment: [{\n    pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,\n    lookbehind: !0\n  }, {\n    pattern: /(^|[^\\\\])#.*/,\n    lookbehind: !0\n  }],\n  \"interpolated-string\": {\n    pattern: /(^|[^\"])(\"\"\"|\")(?:\\\\[\\s\\S]|(?!\\2)[^\\\\])*\\2(?!\")/,\n    lookbehind: !0,\n    greedy: !0,\n    inside: {\n      variable: {\n        pattern: /(^|[^\\\\])#[a-z_](?:-?[a-z]|[\\d_])*/m,\n        lookbehind: !0\n      },\n      interpolation: {\n        pattern: /(^|[^\\\\])#\\{[^}]+\\}/m,\n        lookbehind: !0,\n        inside: {\n          \"interpolation-punctuation\": {\n            pattern: /^#\\{|\\}$/,\n            alias: \"variable\"\n          }\n        }\n      },\n      string: /[\\s\\S]+/\n    }\n  },\n  string: [{\n    pattern: /('''|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\n    greedy: !0\n  }, {\n    pattern: /<\\[[\\s\\S]*?\\]>/,\n    greedy: !0\n  }, /\\\\[^\\s,;\\])}]+/],\n  regex: [{\n    pattern: /\\/\\/(\\[.+?]|\\\\.|(?!\\/\\/)[^\\\\])+\\/\\/[gimyu]{0,5}/,\n    greedy: !0,\n    inside: {\n      comment: {\n        pattern: /(^|[^\\\\])#.*/,\n        lookbehind: !0\n      }\n    }\n  }, {\n    pattern: /\\/(\\[.+?]|\\\\.|[^\\/\\\\\\r\\n])+\\/[gimyu]{0,5}/,\n    greedy: !0\n  }],\n  keyword: {\n    pattern: /(^|(?!-).)\\b(?:break|case|catch|class|const|continue|default|do|else|extends|fallthrough|finally|for(?: ever)?|function|if|implements|it|let|loop|new|null|otherwise|own|return|super|switch|that|then|this|throw|try|unless|until|var|void|when|while|yield)(?!-)\\b/m,\n    lookbehind: !0\n  },\n  \"keyword-operator\": {\n    pattern: /(^|[^-])\\b(?:(?:delete|require|typeof)!|(?:and|by|delete|export|from|import(?: all)?|in|instanceof|is(?:nt| not)?|not|of|or|til|to|typeof|with|xor)(?!-)\\b)/m,\n    lookbehind: !0,\n    alias: \"operator\"\n  },\n  boolean: {\n    pattern: /(^|[^-])\\b(?:false|no|off|on|true|yes)(?!-)\\b/m,\n    lookbehind: !0\n  },\n  argument: {\n    pattern: /(^|(?!\\.&\\.)[^&])&(?!&)\\d*/m,\n    lookbehind: !0,\n    alias: \"variable\"\n  },\n  number: /\\b(?:\\d+~[\\da-z]+|\\d[\\d_]*(?:\\.\\d[\\d_]*)?(?:[a-z]\\w*)?)/i,\n  identifier: /[a-z_](?:-?[a-z]|[\\d_])*/i,\n  operator: [{\n    pattern: /( )\\.(?= )/,\n    lookbehind: !0\n  }, /\\.(?:[=~]|\\.\\.?)|\\.(?:[&|^]|<<|>>>?)\\.|:(?:=|:=?)|&&|\\|[|>]|<(?:<<?<?|--?!?|~~?!?|[|=?])?|>[>=?]?|-(?:->?|>)?|\\+\\+?|@@?|%%?|\\*\\*?|!(?:~?=|--?>|~?~>)?|~(?:~?>|=)?|==?|\\^\\^?|[\\/?]/],\n  punctuation: /[(){}\\[\\]|.,:;`]/\n}, Prism.languages.livescript[\"interpolated-string\"].inside.interpolation.inside.rest = Prism.languages.livescript, Prism.languages.lolcode = {\n  comment: [/\\bOBTW\\s+[\\s\\S]*?\\s+TLDR\\b/, /\\bBTW.+/],\n  string: {\n    pattern: /\"(?::.|[^\"])*\"/,\n    inside: {\n      variable: /:\\{[^}]+\\}/,\n      symbol: [/:\\([a-f\\d]+\\)/i, /:\\[[^\\]]+\\]/, /:[)>o\":]/]\n    },\n    greedy: !0\n  },\n  number: /(?:\\B-)?(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)/,\n  symbol: {\n    pattern: /(^|\\s)(?:A )?(?:YARN|NUMBR|NUMBAR|TROOF|BUKKIT|NOOB)(?=\\s|,|$)/,\n    lookbehind: !0,\n    inside: {\n      keyword: /A(?=\\s)/\n    }\n  },\n  label: {\n    pattern: /((?:^|\\s)(?:IM IN YR|IM OUTTA YR) )[a-zA-Z]\\w*/,\n    lookbehind: !0,\n    alias: \"string\"\n  },\n  function: {\n    pattern: /((?:^|\\s)(?:I IZ|HOW IZ I|IZ) )[a-zA-Z]\\w*/,\n    lookbehind: !0\n  },\n  keyword: [{\n    pattern: /(^|\\s)(?:O HAI IM|KTHX|HAI|KTHXBYE|I HAS A|ITZ(?: A)?|R|AN|MKAY|SMOOSH|MAEK|IS NOW(?: A)?|VISIBLE|GIMMEH|O RLY\\?|YA RLY|NO WAI|OIC|MEBBE|WTF\\?|OMG|OMGWTF|GTFO|IM IN YR|IM OUTTA YR|FOUND YR|YR|TIL|WILE|UPPIN|NERFIN|I IZ|HOW IZ I|IF U SAY SO|SRS|HAS A|LIEK(?: A)?|IZ)(?=\\s|,|$)/,\n    lookbehind: !0\n  }, /'Z(?=\\s|,|$)/],\n  boolean: {\n    pattern: /(^|\\s)(?:WIN|FAIL)(?=\\s|,|$)/,\n    lookbehind: !0\n  },\n  variable: {\n    pattern: /(^|\\s)IT(?=\\s|,|$)/,\n    lookbehind: !0\n  },\n  operator: {\n    pattern: /(^|\\s)(?:NOT|BOTH SAEM|DIFFRINT|(?:SUM|DIFF|PRODUKT|QUOSHUNT|MOD|BIGGR|SMALLR|BOTH|EITHER|WON|ALL|ANY) OF)(?=\\s|,|$)/,\n    lookbehind: !0\n  },\n  punctuation: /\\.{3}|…|,|!/\n}, Prism.languages.lua = {\n  comment: /^#!.+|--(?:\\[(=*)\\[[\\s\\S]*?\\]\\1\\]|.*)/m,\n  string: {\n    pattern: /([\"'])(?:(?!\\1)[^\\\\\\r\\n]|\\\\z(?:\\r\\n|\\s)|\\\\(?:\\r\\n|[\\s\\S]))*\\1|\\[(=*)\\[[\\s\\S]*?\\]\\2\\]/,\n    greedy: !0\n  },\n  number: /\\b0x[a-f\\d]+\\.?[a-f\\d]*(?:p[+-]?\\d+)?\\b|\\b\\d+(?:\\.\\B|\\.?\\d*(?:e[+-]?\\d+)?\\b)|\\B\\.\\d+(?:e[+-]?\\d+)?\\b/i,\n  keyword: /\\b(?:and|break|do|else|elseif|end|false|for|function|goto|if|in|local|nil|not|or|repeat|return|then|true|until|while)\\b/,\n  function: /(?!\\d)\\w+(?=\\s*(?:[({]))/,\n  operator: [/[-+*%^&|#]|\\/\\/?|<[<=]?|>[>=]?|[=~]=?/, {\n    pattern: /(^|[^.])\\.\\.(?!\\.)/,\n    lookbehind: !0\n  }],\n  punctuation: /[\\[\\](){},;]|\\.+|:+/\n}, Prism.languages.makefile = {\n  comment: {\n    pattern: /(^|[^\\\\])#(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n])*/,\n    lookbehind: !0\n  },\n  string: {\n    pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: !0\n  },\n  builtin: /\\.[A-Z][^:#=\\s]+(?=\\s*:(?!=))/,\n  symbol: {\n    pattern: /^[^:=\\r\\n]+(?=\\s*:(?!=))/m,\n    inside: {\n      variable: /\\$+(?:[^(){}:#=\\s]+|(?=[({]))/\n    }\n  },\n  variable: /\\$+(?:[^(){}:#=\\s]+|\\([@*%<^+?][DF]\\)|(?=[({]))/,\n  keyword: [/-include\\b|\\b(?:define|else|endef|endif|export|ifn?def|ifn?eq|include|override|private|sinclude|undefine|unexport|vpath)\\b/, {\n    pattern: /(\\()(?:addsuffix|abspath|and|basename|call|dir|error|eval|file|filter(?:-out)?|findstring|firstword|flavor|foreach|guile|if|info|join|lastword|load|notdir|or|origin|patsubst|realpath|shell|sort|strip|subst|suffix|value|warning|wildcard|word(?:s|list)?)(?=[ \\t])/,\n    lookbehind: !0\n  }],\n  operator: /(?:::|[?:+!])?=|[|@]/,\n  punctuation: /[:;(){}]/\n}, Prism.languages.markdown = Prism.languages.extend(\"markup\", {}), Prism.languages.insertBefore(\"markdown\", \"prolog\", {\n  blockquote: {\n    pattern: /^>(?:[\\t ]*>)*/m,\n    alias: \"punctuation\"\n  },\n  code: [{\n    pattern: /^(?: {4}|\\t).+/m,\n    alias: \"keyword\"\n  }, {\n    pattern: /``.+?``|`[^`\\n]+`/,\n    alias: \"keyword\"\n  }],\n  title: [{\n    pattern: /\\w+.*(?:\\r?\\n|\\r)(?:==+|--+)/,\n    alias: \"important\",\n    inside: {\n      punctuation: /==+$|--+$/\n    }\n  }, {\n    pattern: /(^\\s*)#+.+/m,\n    lookbehind: !0,\n    alias: \"important\",\n    inside: {\n      punctuation: /^#+|#+$/\n    }\n  }],\n  hr: {\n    pattern: /(^\\s*)([*-])(?:[\\t ]*\\2){2,}(?=\\s*$)/m,\n    lookbehind: !0,\n    alias: \"punctuation\"\n  },\n  list: {\n    pattern: /(^\\s*)(?:[*+-]|\\d+\\.)(?=[\\t ].)/m,\n    lookbehind: !0,\n    alias: \"punctuation\"\n  },\n  \"url-reference\": {\n    pattern: /!?\\[[^\\]]+\\]:[\\t ]+(?:\\S+|<(?:\\\\.|[^>\\\\])+>)(?:[\\t ]+(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\)))?/,\n    inside: {\n      variable: {\n        pattern: /^(!?\\[)[^\\]]+/,\n        lookbehind: !0\n      },\n      string: /(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\))$/,\n      punctuation: /^[\\[\\]!:]|[<>]/\n    },\n    alias: \"url\"\n  },\n  bold: {\n    pattern: /(^|[^\\\\])(\\*\\*|__)(?:(?:\\r?\\n|\\r)(?!\\r?\\n|\\r)|.)+?\\2/,\n    lookbehind: !0,\n    inside: {\n      punctuation: /^\\*\\*|^__|\\*\\*$|__$/\n    }\n  },\n  italic: {\n    pattern: /(^|[^\\\\])([*_])(?:(?:\\r?\\n|\\r)(?!\\r?\\n|\\r)|.)+?\\2/,\n    lookbehind: !0,\n    inside: {\n      punctuation: /^[*_]|[*_]$/\n    }\n  },\n  url: {\n    pattern: /!?\\[[^\\]]+\\](?:\\([^\\s)]+(?:[\\t ]+\"(?:\\\\.|[^\"\\\\])*\")?\\)| ?\\[[^\\]\\n]*\\])/,\n    inside: {\n      variable: {\n        pattern: /(!?\\[)[^\\]]+(?=\\]$)/,\n        lookbehind: !0\n      },\n      string: {\n        pattern: /\"(?:\\\\.|[^\"\\\\])*\"(?=\\)$)/\n      }\n    }\n  }\n}), Prism.languages.markdown.bold.inside.url = Prism.languages.markdown.url, Prism.languages.markdown.italic.inside.url = Prism.languages.markdown.url, Prism.languages.markdown.bold.inside.italic = Prism.languages.markdown.italic, Prism.languages.markdown.italic.inside.bold = Prism.languages.markdown.bold, Prism.languages.matlab = {\n  comment: [/%\\{[\\s\\S]*?\\}%/, /%.+/],\n  string: {\n    pattern: /\\B'(?:''|[^'\\r\\n])*'/,\n    greedy: !0\n  },\n  number: /(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[eE][+-]?\\d+)?(?:[ij])?|\\b[ij]\\b/,\n  keyword: /\\b(?:break|case|catch|continue|else|elseif|end|for|function|if|inf|NaN|otherwise|parfor|pause|pi|return|switch|try|while)\\b/,\n  function: /(?!\\d)\\w+(?=\\s*\\()/,\n  operator: /\\.?[*^\\/\\\\']|[+\\-:@]|[<>=~]=?|&&?|\\|\\|?/,\n  punctuation: /\\.{3}|[.,;\\[\\](){}!]/\n}, Prism.languages.mel = {\n  comment: /\\/\\/.*/,\n  code: {\n    pattern: /`(?:\\\\.|[^\\\\`\\r\\n])*`/,\n    greedy: !0,\n    alias: \"italic\",\n    inside: {\n      delimiter: {\n        pattern: /^`|`$/,\n        alias: \"punctuation\"\n      }\n    }\n  },\n  string: {\n    pattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n    greedy: !0\n  },\n  variable: /\\$\\w+/,\n  number: /\\b0x[\\da-fA-F]+\\b|\\b\\d+\\.?\\d*|\\B\\.\\d+/,\n  flag: {\n    pattern: /-[^\\d\\W]\\w*/,\n    alias: \"operator\"\n  },\n  keyword: /\\b(?:break|case|continue|default|do|else|float|for|global|if|in|int|matrix|proc|return|string|switch|vector|while)\\b/,\n  function: /\\w+(?=\\()|\\b(?:about|abs|addAttr|addAttributeEditorNodeHelp|addDynamic|addNewShelfTab|addPP|addPanelCategory|addPrefixToName|advanceToNextDrivenKey|affectedNet|affects|aimConstraint|air|alias|aliasAttr|align|alignCtx|alignCurve|alignSurface|allViewFit|ambientLight|angle|angleBetween|animCone|animCurveEditor|animDisplay|animView|annotate|appendStringArray|applicationName|applyAttrPreset|applyTake|arcLenDimContext|arcLengthDimension|arclen|arrayMapper|art3dPaintCtx|artAttrCtx|artAttrPaintVertexCtx|artAttrSkinPaintCtx|artAttrTool|artBuildPaintMenu|artFluidAttrCtx|artPuttyCtx|artSelectCtx|artSetPaintCtx|artUserPaintCtx|assignCommand|assignInputDevice|assignViewportFactories|attachCurve|attachDeviceAttr|attachSurface|attrColorSliderGrp|attrCompatibility|attrControlGrp|attrEnumOptionMenu|attrEnumOptionMenuGrp|attrFieldGrp|attrFieldSliderGrp|attrNavigationControlGrp|attrPresetEditWin|attributeExists|attributeInfo|attributeMenu|attributeQuery|autoKeyframe|autoPlace|bakeClip|bakeFluidShading|bakePartialHistory|bakeResults|bakeSimulation|basename|basenameEx|batchRender|bessel|bevel|bevelPlus|binMembership|bindSkin|blend2|blendShape|blendShapeEditor|blendShapePanel|blendTwoAttr|blindDataType|boneLattice|boundary|boxDollyCtx|boxZoomCtx|bufferCurve|buildBookmarkMenu|buildKeyframeMenu|button|buttonManip|CBG|cacheFile|cacheFileCombine|cacheFileMerge|cacheFileTrack|camera|cameraView|canCreateManip|canvas|capitalizeString|catch|catchQuiet|ceil|changeSubdivComponentDisplayLevel|changeSubdivRegion|channelBox|character|characterMap|characterOutlineEditor|characterize|chdir|checkBox|checkBoxGrp|checkDefaultRenderGlobals|choice|circle|circularFillet|clamp|clear|clearCache|clip|clipEditor|clipEditorCurrentTimeCtx|clipSchedule|clipSchedulerOutliner|clipTrimBefore|closeCurve|closeSurface|cluster|cmdFileOutput|cmdScrollFieldExecuter|cmdScrollFieldReporter|cmdShell|coarsenSubdivSelectionList|collision|color|colorAtPoint|colorEditor|colorIndex|colorIndexSliderGrp|colorSliderButtonGrp|colorSliderGrp|columnLayout|commandEcho|commandLine|commandPort|compactHairSystem|componentEditor|compositingInterop|computePolysetVolume|condition|cone|confirmDialog|connectAttr|connectControl|connectDynamic|connectJoint|connectionInfo|constrain|constrainValue|constructionHistory|container|containsMultibyte|contextInfo|control|convertFromOldLayers|convertIffToPsd|convertLightmap|convertSolidTx|convertTessellation|convertUnit|copyArray|copyFlexor|copyKey|copySkinWeights|cos|cpButton|cpCache|cpClothSet|cpCollision|cpConstraint|cpConvClothToMesh|cpForces|cpGetSolverAttr|cpPanel|cpProperty|cpRigidCollisionFilter|cpSeam|cpSetEdit|cpSetSolverAttr|cpSolver|cpSolverTypes|cpTool|cpUpdateClothUVs|createDisplayLayer|createDrawCtx|createEditor|createLayeredPsdFile|createMotionField|createNewShelf|createNode|createRenderLayer|createSubdivRegion|cross|crossProduct|ctxAbort|ctxCompletion|ctxEditMode|ctxTraverse|currentCtx|currentTime|currentTimeCtx|currentUnit|curve|curveAddPtCtx|curveCVCtx|curveEPCtx|curveEditorCtx|curveIntersect|curveMoveEPCtx|curveOnSurface|curveSketchCtx|cutKey|cycleCheck|cylinder|dagPose|date|defaultLightListCheckBox|defaultNavigation|defineDataServer|defineVirtualDevice|deformer|deg_to_rad|delete|deleteAttr|deleteShadingGroupsAndMaterials|deleteShelfTab|deleteUI|deleteUnusedBrushes|delrandstr|detachCurve|detachDeviceAttr|detachSurface|deviceEditor|devicePanel|dgInfo|dgdirty|dgeval|dgtimer|dimWhen|directKeyCtx|directionalLight|dirmap|dirname|disable|disconnectAttr|disconnectJoint|diskCache|displacementToPoly|displayAffected|displayColor|displayCull|displayLevelOfDetail|displayPref|displayRGBColor|displaySmoothness|displayStats|displayString|displaySurface|distanceDimContext|distanceDimension|doBlur|dolly|dollyCtx|dopeSheetEditor|dot|dotProduct|doubleProfileBirailSurface|drag|dragAttrContext|draggerContext|dropoffLocator|duplicate|duplicateCurve|duplicateSurface|dynCache|dynControl|dynExport|dynExpression|dynGlobals|dynPaintEditor|dynParticleCtx|dynPref|dynRelEdPanel|dynRelEditor|dynamicLoad|editAttrLimits|editDisplayLayerGlobals|editDisplayLayerMembers|editRenderLayerAdjustment|editRenderLayerGlobals|editRenderLayerMembers|editor|editorTemplate|effector|emit|emitter|enableDevice|encodeString|endString|endsWith|env|equivalent|equivalentTol|erf|error|eval|evalDeferred|evalEcho|event|exactWorldBoundingBox|exclusiveLightCheckBox|exec|executeForEachObject|exists|exp|expression|expressionEditorListen|extendCurve|extendSurface|extrude|fcheck|fclose|feof|fflush|fgetline|fgetword|file|fileBrowserDialog|fileDialog|fileExtension|fileInfo|filetest|filletCurve|filter|filterCurve|filterExpand|filterStudioImport|findAllIntersections|findAnimCurves|findKeyframe|findMenuItem|findRelatedSkinCluster|finder|firstParentOf|fitBspline|flexor|floatEq|floatField|floatFieldGrp|floatScrollBar|floatSlider|floatSlider2|floatSliderButtonGrp|floatSliderGrp|floor|flow|fluidCacheInfo|fluidEmitter|fluidVoxelInfo|flushUndo|fmod|fontDialog|fopen|formLayout|format|fprint|frameLayout|fread|freeFormFillet|frewind|fromNativePath|fwrite|gamma|gauss|geometryConstraint|getApplicationVersionAsFloat|getAttr|getClassification|getDefaultBrush|getFileList|getFluidAttr|getInputDeviceRange|getMayaPanelTypes|getModifiers|getPanel|getParticleAttr|getPluginResource|getenv|getpid|glRender|glRenderEditor|globalStitch|gmatch|goal|gotoBindPose|grabColor|gradientControl|gradientControlNoAttr|graphDollyCtx|graphSelectContext|graphTrackCtx|gravity|grid|gridLayout|group|groupObjectsByName|HfAddAttractorToAS|HfAssignAS|HfBuildEqualMap|HfBuildFurFiles|HfBuildFurImages|HfCancelAFR|HfConnectASToHF|HfCreateAttractor|HfDeleteAS|HfEditAS|HfPerformCreateAS|HfRemoveAttractorFromAS|HfSelectAttached|HfSelectAttractors|HfUnAssignAS|hardenPointCurve|hardware|hardwareRenderPanel|headsUpDisplay|headsUpMessage|help|helpLine|hermite|hide|hilite|hitTest|hotBox|hotkey|hotkeyCheck|hsv_to_rgb|hudButton|hudSlider|hudSliderButton|hwReflectionMap|hwRender|hwRenderLoad|hyperGraph|hyperPanel|hyperShade|hypot|iconTextButton|iconTextCheckBox|iconTextRadioButton|iconTextRadioCollection|iconTextScrollList|iconTextStaticLabel|ikHandle|ikHandleCtx|ikHandleDisplayScale|ikSolver|ikSplineHandleCtx|ikSystem|ikSystemInfo|ikfkDisplayMethod|illustratorCurves|image|imfPlugins|inheritTransform|insertJoint|insertJointCtx|insertKeyCtx|insertKnotCurve|insertKnotSurface|instance|instanceable|instancer|intField|intFieldGrp|intScrollBar|intSlider|intSliderGrp|interToUI|internalVar|intersect|iprEngine|isAnimCurve|isConnected|isDirty|isParentOf|isSameObject|isTrue|isValidObjectName|isValidString|isValidUiName|isolateSelect|itemFilter|itemFilterAttr|itemFilterRender|itemFilterType|joint|jointCluster|jointCtx|jointDisplayScale|jointLattice|keyTangent|keyframe|keyframeOutliner|keyframeRegionCurrentTimeCtx|keyframeRegionDirectKeyCtx|keyframeRegionDollyCtx|keyframeRegionInsertKeyCtx|keyframeRegionMoveKeyCtx|keyframeRegionScaleKeyCtx|keyframeRegionSelectKeyCtx|keyframeRegionSetKeyCtx|keyframeRegionTrackCtx|keyframeStats|lassoContext|lattice|latticeDeformKeyCtx|launch|launchImageEditor|layerButton|layeredShaderPort|layeredTexturePort|layout|layoutDialog|lightList|lightListEditor|lightListPanel|lightlink|lineIntersection|linearPrecision|linstep|listAnimatable|listAttr|listCameras|listConnections|listDeviceAttachments|listHistory|listInputDeviceAxes|listInputDeviceButtons|listInputDevices|listMenuAnnotation|listNodeTypes|listPanelCategories|listRelatives|listSets|listTransforms|listUnselected|listerEditor|loadFluid|loadNewShelf|loadPlugin|loadPluginLanguageResources|loadPrefObjects|localizedPanelLabel|lockNode|loft|log|longNameOf|lookThru|ls|lsThroughFilter|lsType|lsUI|Mayatomr|mag|makeIdentity|makeLive|makePaintable|makeRoll|makeSingleSurface|makeTubeOn|makebot|manipMoveContext|manipMoveLimitsCtx|manipOptions|manipRotateContext|manipRotateLimitsCtx|manipScaleContext|manipScaleLimitsCtx|marker|match|max|memory|menu|menuBarLayout|menuEditor|menuItem|menuItemToShelf|menuSet|menuSetPref|messageLine|min|minimizeApp|mirrorJoint|modelCurrentTimeCtx|modelEditor|modelPanel|mouse|movIn|movOut|move|moveIKtoFK|moveKeyCtx|moveVertexAlongDirection|multiProfileBirailSurface|mute|nParticle|nameCommand|nameField|namespace|namespaceInfo|newPanelItems|newton|nodeCast|nodeIconButton|nodeOutliner|nodePreset|nodeType|noise|nonLinear|normalConstraint|normalize|nurbsBoolean|nurbsCopyUVSet|nurbsCube|nurbsEditUV|nurbsPlane|nurbsSelect|nurbsSquare|nurbsToPoly|nurbsToPolygonsPref|nurbsToSubdiv|nurbsToSubdivPref|nurbsUVSet|nurbsViewDirectionVector|objExists|objectCenter|objectLayer|objectType|objectTypeUI|obsoleteProc|oceanNurbsPreviewPlane|offsetCurve|offsetCurveOnSurface|offsetSurface|openGLExtension|openMayaPref|optionMenu|optionMenuGrp|optionVar|orbit|orbitCtx|orientConstraint|outlinerEditor|outlinerPanel|overrideModifier|paintEffectsDisplay|pairBlend|palettePort|paneLayout|panel|panelConfiguration|panelHistory|paramDimContext|paramDimension|paramLocator|parent|parentConstraint|particle|particleExists|particleInstancer|particleRenderInfo|partition|pasteKey|pathAnimation|pause|pclose|percent|performanceOptions|pfxstrokes|pickWalk|picture|pixelMove|planarSrf|plane|play|playbackOptions|playblast|plugAttr|plugNode|pluginInfo|pluginResourceUtil|pointConstraint|pointCurveConstraint|pointLight|pointMatrixMult|pointOnCurve|pointOnSurface|pointPosition|poleVectorConstraint|polyAppend|polyAppendFacetCtx|polyAppendVertex|polyAutoProjection|polyAverageNormal|polyAverageVertex|polyBevel|polyBlendColor|polyBlindData|polyBoolOp|polyBridgeEdge|polyCacheMonitor|polyCheck|polyChipOff|polyClipboard|polyCloseBorder|polyCollapseEdge|polyCollapseFacet|polyColorBlindData|polyColorDel|polyColorPerVertex|polyColorSet|polyCompare|polyCone|polyCopyUV|polyCrease|polyCreaseCtx|polyCreateFacet|polyCreateFacetCtx|polyCube|polyCut|polyCutCtx|polyCylinder|polyCylindricalProjection|polyDelEdge|polyDelFacet|polyDelVertex|polyDuplicateAndConnect|polyDuplicateEdge|polyEditUV|polyEditUVShell|polyEvaluate|polyExtrudeEdge|polyExtrudeFacet|polyExtrudeVertex|polyFlipEdge|polyFlipUV|polyForceUV|polyGeoSampler|polyHelix|polyInfo|polyInstallAction|polyLayoutUV|polyListComponentConversion|polyMapCut|polyMapDel|polyMapSew|polyMapSewMove|polyMergeEdge|polyMergeEdgeCtx|polyMergeFacet|polyMergeFacetCtx|polyMergeUV|polyMergeVertex|polyMirrorFace|polyMoveEdge|polyMoveFacet|polyMoveFacetUV|polyMoveUV|polyMoveVertex|polyNormal|polyNormalPerVertex|polyNormalizeUV|polyOptUvs|polyOptions|polyOutput|polyPipe|polyPlanarProjection|polyPlane|polyPlatonicSolid|polyPoke|polyPrimitive|polyPrism|polyProjection|polyPyramid|polyQuad|polyQueryBlindData|polyReduce|polySelect|polySelectConstraint|polySelectConstraintMonitor|polySelectCtx|polySelectEditCtx|polySeparate|polySetToFaceNormal|polySewEdge|polyShortestPathCtx|polySmooth|polySoftEdge|polySphere|polySphericalProjection|polySplit|polySplitCtx|polySplitEdge|polySplitRing|polySplitVertex|polyStraightenUVBorder|polySubdivideEdge|polySubdivideFacet|polyToSubdiv|polyTorus|polyTransfer|polyTriangulate|polyUVSet|polyUnite|polyWedgeFace|popen|popupMenu|pose|pow|preloadRefEd|print|progressBar|progressWindow|projFileViewer|projectCurve|projectTangent|projectionContext|projectionManip|promptDialog|propModCtx|propMove|psdChannelOutliner|psdEditTextureFile|psdExport|psdTextureFile|putenv|pwd|python|querySubdiv|quit|rad_to_deg|radial|radioButton|radioButtonGrp|radioCollection|radioMenuItemCollection|rampColorPort|rand|randomizeFollicles|randstate|rangeControl|readTake|rebuildCurve|rebuildSurface|recordAttr|recordDevice|redo|reference|referenceEdit|referenceQuery|refineSubdivSelectionList|refresh|refreshAE|registerPluginResource|rehash|reloadImage|removeJoint|removeMultiInstance|removePanelCategory|rename|renameAttr|renameSelectionList|renameUI|render|renderGlobalsNode|renderInfo|renderLayerButton|renderLayerParent|renderLayerPostProcess|renderLayerUnparent|renderManip|renderPartition|renderQualityNode|renderSettings|renderThumbnailUpdate|renderWindowEditor|renderWindowSelectContext|renderer|reorder|reorderDeformers|requires|reroot|resampleFluid|resetAE|resetPfxToPolyCamera|resetTool|resolutionNode|retarget|reverseCurve|reverseSurface|revolve|rgb_to_hsv|rigidBody|rigidSolver|roll|rollCtx|rootOf|rot|rotate|rotationInterpolation|roundConstantRadius|rowColumnLayout|rowLayout|runTimeCommand|runup|sampleImage|saveAllShelves|saveAttrPreset|saveFluid|saveImage|saveInitialState|saveMenu|savePrefObjects|savePrefs|saveShelf|saveToolSettings|scale|scaleBrushBrightness|scaleComponents|scaleConstraint|scaleKey|scaleKeyCtx|sceneEditor|sceneUIReplacement|scmh|scriptCtx|scriptEditorInfo|scriptJob|scriptNode|scriptTable|scriptToShelf|scriptedPanel|scriptedPanelType|scrollField|scrollLayout|sculpt|searchPathArray|seed|selLoadSettings|select|selectContext|selectCurveCV|selectKey|selectKeyCtx|selectKeyframeRegionCtx|selectMode|selectPref|selectPriority|selectType|selectedNodes|selectionConnection|separator|setAttr|setAttrEnumResource|setAttrMapping|setAttrNiceNameResource|setConstraintRestPosition|setDefaultShadingGroup|setDrivenKeyframe|setDynamic|setEditCtx|setEditor|setFluidAttr|setFocus|setInfinity|setInputDeviceMapping|setKeyCtx|setKeyPath|setKeyframe|setKeyframeBlendshapeTargetWts|setMenuMode|setNodeNiceNameResource|setNodeTypeFlag|setParent|setParticleAttr|setPfxToPolyCamera|setPluginResource|setProject|setStampDensity|setStartupMessage|setState|setToolTo|setUITemplate|setXformManip|sets|shadingConnection|shadingGeometryRelCtx|shadingLightRelCtx|shadingNetworkCompare|shadingNode|shapeCompare|shelfButton|shelfLayout|shelfTabLayout|shellField|shortNameOf|showHelp|showHidden|showManipCtx|showSelectionInTitle|showShadingGroupAttrEditor|showWindow|sign|simplify|sin|singleProfileBirailSurface|size|sizeBytes|skinCluster|skinPercent|smoothCurve|smoothTangentSurface|smoothstep|snap2to2|snapKey|snapMode|snapTogetherCtx|snapshot|soft|softMod|softModCtx|sort|sound|soundControl|source|spaceLocator|sphere|sphrand|spotLight|spotLightPreviewPort|spreadSheetEditor|spring|sqrt|squareSurface|srtContext|stackTrace|startString|startsWith|stitchAndExplodeShell|stitchSurface|stitchSurfacePoints|strcmp|stringArrayCatenate|stringArrayContains|stringArrayCount|stringArrayInsertAtIndex|stringArrayIntersector|stringArrayRemove|stringArrayRemoveAtIndex|stringArrayRemoveDuplicates|stringArrayRemoveExact|stringArrayToString|stringToStringArray|strip|stripPrefixFromName|stroke|subdAutoProjection|subdCleanTopology|subdCollapse|subdDuplicateAndConnect|subdEditUV|subdListComponentConversion|subdMapCut|subdMapSewMove|subdMatchTopology|subdMirror|subdToBlind|subdToPoly|subdTransferUVsToCache|subdiv|subdivCrease|subdivDisplaySmoothness|substitute|substituteAllString|substituteGeometry|substring|surface|surfaceSampler|surfaceShaderList|swatchDisplayPort|switchTable|symbolButton|symbolCheckBox|sysFile|system|tabLayout|tan|tangentConstraint|texLatticeDeformContext|texManipContext|texMoveContext|texMoveUVShellContext|texRotateContext|texScaleContext|texSelectContext|texSelectShortestPathCtx|texSmudgeUVContext|texWinToolCtx|text|textCurves|textField|textFieldButtonGrp|textFieldGrp|textManip|textScrollList|textToShelf|textureDisplacePlane|textureHairColor|texturePlacementContext|textureWindow|threadCount|threePointArcCtx|timeControl|timePort|timerX|toNativePath|toggle|toggleAxis|toggleWindowVisibility|tokenize|tokenizeList|tolerance|tolower|toolButton|toolCollection|toolDropped|toolHasOptions|toolPropertyWindow|torus|toupper|trace|track|trackCtx|transferAttributes|transformCompare|transformLimits|translator|trim|trunc|truncateFluidCache|truncateHairCache|tumble|tumbleCtx|turbulence|twoPointArcCtx|uiRes|uiTemplate|unassignInputDevice|undo|undoInfo|ungroup|uniform|unit|unloadPlugin|untangleUV|untitledFileName|untrim|upAxis|updateAE|userCtx|uvLink|uvSnapshot|validateShelfName|vectorize|view2dToolCtx|viewCamera|viewClipPlane|viewFit|viewHeadOn|viewLookAt|viewManip|viewPlace|viewSet|visor|volumeAxis|vortex|waitCursor|warning|webBrowser|webBrowserPrefs|whatIs|window|windowPref|wire|wireContext|workspace|wrinkle|wrinkleContext|writeTake|xbmLangPathList|xform)\\b/,\n  operator: [/\\+[+=]?|-[-=]?|&&|\\|\\||[<>]=|[*\\/!=]=?|[%^]/, {\n    pattern: /(^|[^<])<(?!<)/,\n    lookbehind: !0\n  }, {\n    pattern: /(^|[^>])>(?!>)/,\n    lookbehind: !0\n  }],\n  punctuation: /<<|>>|[.,:;?\\[\\](){}]/\n}, Prism.languages.mel.code.inside.rest = Prism.languages.mel, Prism.languages.mizar = {\n  comment: /::.+/,\n  keyword: /@proof\\b|\\b(?:according|aggregate|all|and|antonym|are|as|associativity|assume|asymmetry|attr|be|begin|being|by|canceled|case|cases|clusters?|coherence|commutativity|compatibility|connectedness|consider|consistency|constructors|contradiction|correctness|def|deffunc|define|definitions?|defpred|do|does|equals|end|environ|ex|exactly|existence|for|from|func|given|hence|hereby|holds|idempotence|identity|iff?|implies|involutiveness|irreflexivity|is|it|let|means|mode|non|not|notations?|now|of|or|otherwise|over|per|pred|prefix|projectivity|proof|provided|qua|reconsider|redefine|reduce|reducibility|reflexivity|registrations?|requirements|reserve|sch|schemes?|section|selector|set|sethood|st|struct|such|suppose|symmetry|synonym|take|that|the|then|theorems?|thesis|thus|to|transitivity|uniqueness|vocabular(?:y|ies)|when|where|with|wrt)\\b/,\n  parameter: {\n    pattern: /\\$(?:10|\\d)/,\n    alias: \"variable\"\n  },\n  variable: /\\w+(?=:)/,\n  number: /(?:\\b|-)\\d+\\b/,\n  operator: /\\.\\.\\.|->|&|\\.?=/,\n  punctuation: /\\(#|#\\)|[,:;\\[\\](){}]/\n}, Prism.languages.monkey = {\n  string: /\"[^\"\\r\\n]*\"/,\n  comment: [{\n    pattern: /^#Rem\\s+[\\s\\S]*?^#End/im,\n    greedy: !0\n  }, {\n    pattern: /'.+/,\n    greedy: !0\n  }],\n  preprocessor: {\n    pattern: /(^[ \\t]*)#.+/m,\n    lookbehind: !0,\n    alias: \"comment\"\n  },\n  function: /\\w+(?=\\()/,\n  \"type-char\": {\n    pattern: /(\\w)[?%#$]/,\n    lookbehind: !0,\n    alias: \"variable\"\n  },\n  number: {\n    pattern: /((?:\\.\\.)?)(?:(?:\\b|\\B-\\.?|\\B\\.)\\d+(?:(?!\\.\\.)\\.\\d*)?|\\$[\\da-f]+)/i,\n    lookbehind: !0\n  },\n  keyword: /\\b(?:Void|Strict|Public|Private|Property|Bool|Int|Float|String|Array|Object|Continue|Exit|Import|Extern|New|Self|Super|Try|Catch|Eachin|True|False|Extends|Abstract|Final|Select|Case|Default|Const|Local|Global|Field|Method|Function|Class|End|If|Then|Else|ElseIf|EndIf|While|Wend|Repeat|Until|Forever|For|To|Step|Next|Return|Module|Interface|Implements|Inline|Throw|Null)\\b/i,\n  operator: /\\.\\.|<[=>]?|>=?|:?=|(?:[+\\-*\\/&~|]|\\b(?:Mod|Shl|Shr)\\b)=?|\\b(?:And|Not|Or)\\b/i,\n  punctuation: /[.,:;()\\[\\]]/\n}, Prism.languages.n4js = Prism.languages.extend(\"javascript\", {\n  keyword: /\\b(?:any|Array|boolean|break|case|catch|class|const|constructor|continue|debugger|declare|default|delete|do|else|enum|export|extends|false|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|module|new|null|number|package|private|protected|public|return|set|static|string|super|switch|this|throw|true|try|typeof|var|void|while|with|yield)\\b/\n}), Prism.languages.insertBefore(\"n4js\", \"constant\", {\n  annotation: {\n    pattern: /@+\\w+/,\n    alias: \"operator\"\n  }\n}), Prism.languages.n4jsd = Prism.languages.n4js, Prism.languages.nasm = {\n  comment: /;.*$/m,\n  string: /([\"'`])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n  label: {\n    pattern: /(^\\s*)[A-Za-z._?$][\\w.?$@~#]*:/m,\n    lookbehind: !0,\n    alias: \"function\"\n  },\n  keyword: [/\\[?BITS (?:16|32|64)\\]?/, {\n    pattern: /(^\\s*)section\\s*[a-zA-Z.]+:?/im,\n    lookbehind: !0\n  }, /(?:extern|global)[^;\\r\\n]*/i, /(?:CPU|FLOAT|DEFAULT).*$/m],\n  register: {\n    pattern: /\\b(?:st\\d|[xyz]mm\\d\\d?|[cdt]r\\d|r\\d\\d?[bwd]?|[er]?[abcd]x|[abcd][hl]|[er]?(?:bp|sp|si|di)|[cdefgs]s)\\b/i,\n    alias: \"variable\"\n  },\n  number: /(?:\\b|(?=\\$))(?:0[hx][\\da-f]*\\.?[\\da-f]+(?:p[+-]?\\d+)?|\\d[\\da-f]+[hx]|\\$\\d[\\da-f]*|0[oq][0-7]+|[0-7]+[oq]|0[by][01]+|[01]+[by]|0[dt]\\d+|\\d*\\.?\\d+(?:\\.?e[+-]?\\d+)?[dt]?)\\b/i,\n  operator: /[\\[\\]*+\\-\\/%<>=&|$!]/\n}, Prism.languages.nginx = Prism.languages.extend(\"clike\", {\n  comment: {\n    pattern: /(^|[^\"{\\\\])#.*/,\n    lookbehind: !0\n  },\n  keyword: /\\b(?:CONTENT_|DOCUMENT_|GATEWAY_|HTTP_|HTTPS|if_not_empty|PATH_|QUERY_|REDIRECT_|REMOTE_|REQUEST_|SCGI|SCRIPT_|SERVER_|http|events|accept_mutex|accept_mutex_delay|access_log|add_after_body|add_before_body|add_header|addition_types|aio|alias|allow|ancient_browser|ancient_browser_value|auth|auth_basic|auth_basic_user_file|auth_http|auth_http_header|auth_http_timeout|autoindex|autoindex_exact_size|autoindex_localtime|break|charset|charset_map|charset_types|chunked_transfer_encoding|client_body_buffer_size|client_body_in_file_only|client_body_in_single_buffer|client_body_temp_path|client_body_timeout|client_header_buffer_size|client_header_timeout|client_max_body_size|connection_pool_size|create_full_put_path|daemon|dav_access|dav_methods|debug_connection|debug_points|default_type|deny|devpoll_changes|devpoll_events|directio|directio_alignment|disable_symlinks|empty_gif|env|epoll_events|error_log|error_page|expires|fastcgi_buffer_size|fastcgi_buffers|fastcgi_busy_buffers_size|fastcgi_cache|fastcgi_cache_bypass|fastcgi_cache_key|fastcgi_cache_lock|fastcgi_cache_lock_timeout|fastcgi_cache_methods|fastcgi_cache_min_uses|fastcgi_cache_path|fastcgi_cache_purge|fastcgi_cache_use_stale|fastcgi_cache_valid|fastcgi_connect_timeout|fastcgi_hide_header|fastcgi_ignore_client_abort|fastcgi_ignore_headers|fastcgi_index|fastcgi_intercept_errors|fastcgi_keep_conn|fastcgi_max_temp_file_size|fastcgi_next_upstream|fastcgi_no_cache|fastcgi_param|fastcgi_pass|fastcgi_pass_header|fastcgi_read_timeout|fastcgi_redirect_errors|fastcgi_send_timeout|fastcgi_split_path_info|fastcgi_store|fastcgi_store_access|fastcgi_temp_file_write_size|fastcgi_temp_path|flv|geo|geoip_city|geoip_country|google_perftools_profiles|gzip|gzip_buffers|gzip_comp_level|gzip_disable|gzip_http_version|gzip_min_length|gzip_proxied|gzip_static|gzip_types|gzip_vary|if|if_modified_since|ignore_invalid_headers|image_filter|image_filter_buffer|image_filter_jpeg_quality|image_filter_sharpen|image_filter_transparency|imap_capabilities|imap_client_buffer|include|index|internal|ip_hash|keepalive|keepalive_disable|keepalive_requests|keepalive_timeout|kqueue_changes|kqueue_events|large_client_header_buffers|limit_conn|limit_conn_log_level|limit_conn_zone|limit_except|limit_rate|limit_rate_after|limit_req|limit_req_log_level|limit_req_zone|limit_zone|lingering_close|lingering_time|lingering_timeout|listen|location|lock_file|log_format|log_format_combined|log_not_found|log_subrequest|map|map_hash_bucket_size|map_hash_max_size|master_process|max_ranges|memcached_buffer_size|memcached_connect_timeout|memcached_next_upstream|memcached_pass|memcached_read_timeout|memcached_send_timeout|merge_slashes|min_delete_depth|modern_browser|modern_browser_value|mp4|mp4_buffer_size|mp4_max_buffer_size|msie_padding|msie_refresh|multi_accept|open_file_cache|open_file_cache_errors|open_file_cache_min_uses|open_file_cache_valid|open_log_file_cache|optimize_server_names|override_charset|pcre_jit|perl|perl_modules|perl_require|perl_set|pid|pop3_auth|pop3_capabilities|port_in_redirect|post_action|postpone_output|protocol|proxy|proxy_buffer|proxy_buffer_size|proxy_buffering|proxy_buffers|proxy_busy_buffers_size|proxy_cache|proxy_cache_bypass|proxy_cache_key|proxy_cache_lock|proxy_cache_lock_timeout|proxy_cache_methods|proxy_cache_min_uses|proxy_cache_path|proxy_cache_use_stale|proxy_cache_valid|proxy_connect_timeout|proxy_cookie_domain|proxy_cookie_path|proxy_headers_hash_bucket_size|proxy_headers_hash_max_size|proxy_hide_header|proxy_http_version|proxy_ignore_client_abort|proxy_ignore_headers|proxy_intercept_errors|proxy_max_temp_file_size|proxy_method|proxy_next_upstream|proxy_no_cache|proxy_pass|proxy_pass_error_message|proxy_pass_header|proxy_pass_request_body|proxy_pass_request_headers|proxy_read_timeout|proxy_redirect|proxy_redirect_errors|proxy_send_lowat|proxy_send_timeout|proxy_set_body|proxy_set_header|proxy_ssl_session_reuse|proxy_store|proxy_store_access|proxy_temp_file_write_size|proxy_temp_path|proxy_timeout|proxy_upstream_fail_timeout|proxy_upstream_max_fails|random_index|read_ahead|real_ip_header|recursive_error_pages|request_pool_size|reset_timedout_connection|resolver|resolver_timeout|return|rewrite|root|rtsig_overflow_events|rtsig_overflow_test|rtsig_overflow_threshold|rtsig_signo|satisfy|satisfy_any|secure_link_secret|send_lowat|send_timeout|sendfile|sendfile_max_chunk|server|server_name|server_name_in_redirect|server_names_hash_bucket_size|server_names_hash_max_size|server_tokens|set|set_real_ip_from|smtp_auth|smtp_capabilities|so_keepalive|source_charset|split_clients|ssi|ssi_silent_errors|ssi_types|ssi_value_length|ssl|ssl_certificate|ssl_certificate_key|ssl_ciphers|ssl_client_certificate|ssl_crl|ssl_dhparam|ssl_engine|ssl_prefer_server_ciphers|ssl_protocols|ssl_session_cache|ssl_session_timeout|ssl_verify_client|ssl_verify_depth|starttls|stub_status|sub_filter|sub_filter_once|sub_filter_types|tcp_nodelay|tcp_nopush|timeout|timer_resolution|try_files|types|types_hash_bucket_size|types_hash_max_size|underscores_in_headers|uninitialized_variable_warn|upstream|use|user|userid|userid_domain|userid_expires|userid_name|userid_p3p|userid_path|userid_service|valid_referers|variables_hash_bucket_size|variables_hash_max_size|worker_connections|worker_cpu_affinity|worker_priority|worker_processes|worker_rlimit_core|worker_rlimit_nofile|worker_rlimit_sigpending|working_directory|xclient|xml_entities|xslt_entities|xslt_stylesheet|xslt_types)\\b/i\n}), Prism.languages.insertBefore(\"nginx\", \"keyword\", {\n  variable: /\\$[a-z_]+/i\n}), Prism.languages.nim = {\n  comment: /#.*/,\n  string: {\n    pattern: /(?:(?:\\b(?!\\d)(?:\\w|\\\\x[8-9a-fA-F][0-9a-fA-F])+)?(?:\"\"\"[\\s\\S]*?\"\"\"(?!\")|\"(?:\\\\[\\s\\S]|\"\"|[^\"\\\\])*\")|'(?:\\\\(?:\\d+|x[\\da-fA-F]{2}|.)|[^'])')/,\n    greedy: !0\n  },\n  number: /\\b(?:0[xXoObB][\\da-fA-F_]+|\\d[\\d_]*(?:(?!\\.\\.)\\.[\\d_]*)?(?:[eE][+-]?\\d[\\d_]*)?)(?:'?[iuf]\\d*)?/,\n  keyword: /\\b(?:addr|as|asm|atomic|bind|block|break|case|cast|concept|const|continue|converter|defer|discard|distinct|do|elif|else|end|enum|except|export|finally|for|from|func|generic|if|import|include|interface|iterator|let|macro|method|mixin|nil|object|out|proc|ptr|raise|ref|return|static|template|try|tuple|type|using|var|when|while|with|without|yield)\\b/,\n  function: {\n    pattern: /(?:(?!\\d)(?:\\w|\\\\x[8-9a-fA-F][0-9a-fA-F])+|`[^`\\r\\n]+`)\\*?(?:\\[[^\\]]+\\])?(?=\\s*\\()/,\n    inside: {\n      operator: /\\*$/\n    }\n  },\n  ignore: {\n    pattern: /`[^`\\r\\n]+`/,\n    inside: {\n      punctuation: /`/\n    }\n  },\n  operator: {\n    pattern: /(^|[({\\[](?=\\.\\.)|(?![({\\[]\\.).)(?:(?:[=+\\-*\\/<>@$~&%|!?^:\\\\]|\\.\\.|\\.(?![)}\\]]))+|\\b(?:and|div|of|or|in|is|isnot|mod|not|notin|shl|shr|xor)\\b)/m,\n    lookbehind: !0\n  },\n  punctuation: /[({\\[]\\.|\\.[)}\\]]|[`(){}\\[\\],:]/\n}, Prism.languages.nix = {\n  comment: /\\/\\*[\\s\\S]*?\\*\\/|#.*/,\n  string: {\n    pattern: /\"(?:[^\"\\\\]|\\\\[\\s\\S])*\"|''(?:(?!'')[\\s\\S]|''(?:'|\\\\|\\$\\{))*''/,\n    greedy: !0,\n    inside: {\n      interpolation: {\n        pattern: /(^|(?:^|(?!'').)[^\\\\])\\$\\{(?:[^}]|\\{[^}]*\\})*}/,\n        lookbehind: !0,\n        inside: {\n          antiquotation: {\n            pattern: /^\\$(?=\\{)/,\n            alias: \"variable\"\n          }\n        }\n      }\n    }\n  },\n  url: [/\\b(?:[a-z]{3,7}:\\/\\/)[\\w\\-+%~\\/.:#=?&]+/, {\n    pattern: /([^\\/])(?:[\\w\\-+%~.:#=?&]*(?!\\/\\/)[\\w\\-+%~\\/.:#=?&])?(?!\\/\\/)\\/[\\w\\-+%~\\/.:#=?&]*/,\n    lookbehind: !0\n  }],\n  antiquotation: {\n    pattern: /\\$(?=\\{)/,\n    alias: \"variable\"\n  },\n  number: /\\b\\d+\\b/,\n  keyword: /\\b(?:assert|builtins|else|if|in|inherit|let|null|or|then|with)\\b/,\n  function: /\\b(?:abort|add|all|any|attrNames|attrValues|baseNameOf|compareVersions|concatLists|currentSystem|deepSeq|derivation|dirOf|div|elem(?:At)?|fetch(?:url|Tarball)|filter(?:Source)?|fromJSON|genList|getAttr|getEnv|hasAttr|hashString|head|import|intersectAttrs|is(?:Attrs|Bool|Function|Int|List|Null|String)|length|lessThan|listToAttrs|map|mul|parseDrvName|pathExists|read(?:Dir|File)|removeAttrs|replaceStrings|seq|sort|stringLength|sub(?:string)?|tail|throw|to(?:File|JSON|Path|String|XML)|trace|typeOf)\\b|\\bfoldl'\\B/,\n  boolean: /\\b(?:true|false)\\b/,\n  operator: /[=!<>]=?|\\+\\+?|\\|\\||&&|\\/\\/|->?|[?@]/,\n  punctuation: /[{}()[\\].,:;]/\n}, Prism.languages.nix.string.inside.interpolation.inside.rest = Prism.languages.nix, Prism.languages.nsis = {\n  comment: {\n    pattern: /(^|[^\\\\])(\\/\\*[\\s\\S]*?\\*\\/|[#;].*)/,\n    lookbehind: !0\n  },\n  string: {\n    pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: !0\n  },\n  keyword: {\n    pattern: /(^\\s*)(?:Abort|Add(?:BrandingImage|Size)|AdvSplash|Allow(?:RootDirInstall|SkipFiles)|AutoCloseWindow|Banner|BG(?:Font|Gradient|Image)|BrandingText|BringToFront|Call(?:InstDLL)?|Caption|ChangeUI|CheckBitmap|ClearErrors|CompletedText|ComponentText|CopyFiles|CRCCheck|Create(?:Directory|Font|ShortCut)|Delete(?:INISec|INIStr|RegKey|RegValue)?|Detail(?:Print|sButtonText)|Dialer|Dir(?:Text|Var|Verify)|EnableWindow|Enum(?:RegKey|RegValue)|Exch|Exec(?:Shell(?:Wait)?|Wait)?|ExpandEnvStrings|File(?:BufSize|Close|ErrorText|Open|Read|ReadByte|ReadUTF16LE|ReadWord|WriteUTF16LE|Seek|Write|WriteByte|WriteWord)?|Find(?:Close|First|Next|Window)|FlushINI|Get(?:CurInstType|CurrentAddress|DlgItem|DLLVersion(?:Local)?|ErrorLevel|FileTime(?:Local)?|FullPathName|Function(?:Address|End)?|InstDirError|LabelAddress|TempFileName)|Goto|HideWindow|Icon|If(?:Abort|Errors|FileExists|RebootFlag|Silent)|InitPluginsDir|Install(?:ButtonText|Colors|Dir(?:RegKey)?)|InstProgressFlags|Inst(?:Type(?:GetText|SetText)?)|Int(?:64|Ptr)?CmpU?|Int(?:64)?Fmt|Int(?:Ptr)?Op|IsWindow|Lang(?:DLL|String)|License(?:BkColor|Data|ForceSelection|LangString|Text)|LoadLanguageFile|LockWindow|Log(?:Set|Text)|Manifest(?:DPIAware|SupportedOS)|Math|MessageBox|MiscButtonText|Name|Nop|ns(?:Dialogs|Exec)|NSISdl|OutFile|Page(?:Callbacks)?|PE(?:DllCharacteristics|SubsysVer)|Pop|Push|Quit|Read(?:EnvStr|INIStr|RegDWORD|RegStr)|Reboot|RegDLL|Rename|RequestExecutionLevel|ReserveFile|Return|RMDir|SearchPath|Section(?:End|GetFlags|GetInstTypes|GetSize|GetText|Group|In|SetFlags|SetInstTypes|SetSize|SetText)?|SendMessage|Set(?:AutoClose|BrandingImage|Compress|Compressor(?:DictSize)?|CtlColors|CurInstType|DatablockOptimize|DateSave|Details(?:Print|View)|ErrorLevel|Errors|FileAttributes|Font|OutPath|Overwrite|PluginUnload|RebootFlag|RegView|ShellVarContext|Silent)|Show(?:InstDetails|UninstDetails|Window)|Silent(?:Install|UnInstall)|Sleep|SpaceTexts|Splash|StartMenu|Str(?:CmpS?|Cpy|Len)|SubCaption|System|Unicode|Uninstall(?:ButtonText|Caption|Icon|SubCaption|Text)|UninstPage|UnRegDLL|UserInfo|Var|VI(?:AddVersionKey|FileVersion|ProductVersion)|VPatch|WindowIcon|Write(?:INIStr|Reg(?:Bin|DWORD|ExpandStr|MultiStr|None|Str)|Uninstaller)|XPStyle)\\b/m,\n    lookbehind: !0\n  },\n  property: /\\b(?:admin|all|auto|both|colored|false|force|hide|highest|lastused|leave|listonly|none|normal|notset|off|on|open|print|show|silent|silentlog|smooth|textonly|true|user|ARCHIVE|FILE_(ATTRIBUTE_ARCHIVE|ATTRIBUTE_NORMAL|ATTRIBUTE_OFFLINE|ATTRIBUTE_READONLY|ATTRIBUTE_SYSTEM|ATTRIBUTE_TEMPORARY)|HK((CR|CU|LM)(32|64)?|DD|PD|U)|HKEY_(CLASSES_ROOT|CURRENT_CONFIG|CURRENT_USER|DYN_DATA|LOCAL_MACHINE|PERFORMANCE_DATA|USERS)|ID(ABORT|CANCEL|IGNORE|NO|OK|RETRY|YES)|MB_(ABORTRETRYIGNORE|DEFBUTTON1|DEFBUTTON2|DEFBUTTON3|DEFBUTTON4|ICONEXCLAMATION|ICONINFORMATION|ICONQUESTION|ICONSTOP|OK|OKCANCEL|RETRYCANCEL|RIGHT|RTLREADING|SETFOREGROUND|TOPMOST|USERICON|YESNO)|NORMAL|OFFLINE|READONLY|SHCTX|SHELL_CONTEXT|SYSTEM|TEMPORARY)\\b/,\n  constant: /\\${[\\w\\.:\\^-]+}|\\$\\([\\w\\.:\\^-]+\\)/i,\n  variable: /\\$\\w+/i,\n  number: /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee]-?\\d+)?/,\n  operator: /--?|\\+\\+?|<=?|>=?|==?=?|&&?|\\|\\|?|[?*\\/~^%]/,\n  punctuation: /[{}[\\];(),.:]/,\n  important: {\n    pattern: /(^\\s*)!(?:addincludedir|addplugindir|appendfile|cd|define|delfile|echo|else|endif|error|execute|finalize|getdllversion|gettlbversion|ifdef|ifmacrodef|ifmacrondef|ifndef|if|include|insertmacro|macroend|macro|makensis|packhdr|pragma|searchparse|searchreplace|system|tempfile|undef|verbose|warning)\\b/im,\n    lookbehind: !0\n  }\n}, Prism.languages.ocaml = {\n  comment: /\\(\\*[\\s\\S]*?\\*\\)/,\n  string: [{\n    pattern: /\"(?:\\\\.|[^\\\\\\r\\n\"])*\"/,\n    greedy: !0\n  }, {\n    pattern: /(['`])(?:\\\\(?:\\d+|x[\\da-f]+|.)|(?!\\1)[^\\\\\\r\\n])\\1/i,\n    greedy: !0\n  }],\n  number: /\\b(?:0x[\\da-f][\\da-f_]+|(?:0[bo])?\\d[\\d_]*\\.?[\\d_]*(?:e[+-]?[\\d_]+)?)/i,\n  type: {\n    pattern: /\\B['`]\\w*/,\n    alias: \"variable\"\n  },\n  directive: {\n    pattern: /\\B#\\w+/,\n    alias: \"function\"\n  },\n  keyword: /\\b(?:as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|match|method|module|mutable|new|object|of|open|prefix|private|rec|then|sig|struct|to|try|type|val|value|virtual|where|while|with)\\b/,\n  boolean: /\\b(?:false|true)\\b/,\n  operator: /:=|[=<>@^|&+\\-*\\/$%!?~][!$%&*+\\-.\\/:<=>?@^|~]*|\\b(?:and|asr|land|lor|lxor|lsl|lsr|mod|nor|or)\\b/,\n  punctuation: /[(){}\\[\\]|_.,:;]/\n}, Prism.languages.oz = {\n  comment: /\\/\\*[\\s\\S]*?\\*\\/|%.*/,\n  string: {\n    pattern: /\"(?:[^\"\\\\]|\\\\[\\s\\S])*\"/,\n    greedy: !0\n  },\n  atom: {\n    pattern: /'(?:[^'\\\\]|\\\\[\\s\\S])*'/,\n    greedy: !0,\n    alias: \"builtin\"\n  },\n  keyword: /[$_]|\\[\\]|\\b(?:at|attr|case|catch|choice|class|cond|declare|define|dis|else(?:case|if)?|end|export|fail|false|feat|finally|from|fun|functor|if|import|in|local|lock|meth|nil|not|of|or|prepare|proc|prop|raise|require|self|skip|then|thread|true|try|unit)\\b/,\n  function: [/[a-z][A-Za-z\\d]*(?=\\()/, {\n    pattern: /(\\{)[A-Z][A-Za-z\\d]*/,\n    lookbehind: !0\n  }],\n  number: /\\b(?:0[bx][\\da-f]+|\\d+\\.?\\d*(?:e~?\\d+)?\\b)|&(?:[^\\\\]|\\\\(?:\\d{3}|.))/i,\n  variable: /\\b[A-Z][A-Za-z\\d]*|`(?:[^`\\\\]|\\\\.)+`/,\n  \"attr-name\": /\\w+(?=:)/,\n  operator: /:(?:=|::?)|<[-:=]?|=(?:=|<?:?)|>=?:?|\\\\=:?|!!?|[|#+\\-*\\/,~^@]|\\b(?:andthen|div|mod|orelse)\\b/,\n  punctuation: /[\\[\\](){}.:;?]/\n}, Prism.languages.parigp = {\n  comment: /\\/\\*[\\s\\S]*?\\*\\/|\\\\\\\\.*/,\n  string: {\n    pattern: /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"/,\n    greedy: !0\n  },\n  keyword: function () {\n    var e = [\"breakpoint\", \"break\", \"dbg_down\", \"dbg_err\", \"dbg_up\", \"dbg_x\", \"forcomposite\", \"fordiv\", \"forell\", \"forpart\", \"forprime\", \"forstep\", \"forsubgroup\", \"forvec\", \"for\", \"iferr\", \"if\", \"local\", \"my\", \"next\", \"return\", \"until\", \"while\"];\n    return e = e.map(function (e) {\n      return e.split(\"\").join(\" *\");\n    }).join(\"|\"), RegExp(\"\\\\b(?:\" + e + \")\\\\b\");\n  }(),\n  function: /\\w[\\w ]*?(?= *\\()/,\n  number: {\n    pattern: /((?:\\. *\\. *)?)(?:\\d(?: *\\d)*(?: *(?!\\. *\\.)\\.(?: *\\d)*)?|\\. *\\d(?: *\\d)*)(?: *e *[+-]? *\\d(?: *\\d)*)?/i,\n    lookbehind: !0\n  },\n  operator: /\\. *\\.|[*\\/!](?: *=)?|%(?: *=|(?: *#)?(?: *')*)?|\\+(?: *[+=])?|-(?: *[-=>])?|<(?:(?: *<)?(?: *=)?| *>)?|>(?: *>)?(?: *=)?|=(?: *=){0,2}|\\\\(?: *\\/)?(?: *=)?|&(?: *&)?|\\| *\\||['#~^]/,\n  punctuation: /[\\[\\]{}().,:;|]/\n}, Prism.languages.parser = Prism.languages.extend(\"markup\", {\n  keyword: {\n    pattern: /(^|[^^])(?:\\^(?:case|eval|for|if|switch|throw)\\b|@(?:BASE|CLASS|GET(?:_DEFAULT)?|OPTIONS|SET_DEFAULT|USE)\\b)/,\n    lookbehind: !0\n  },\n  variable: {\n    pattern: /(^|[^^])\\B\\$(?:\\w+|(?=[.{]))(?:(?:\\.|::?)\\w+)*(?:\\.|::?)?/,\n    lookbehind: !0,\n    inside: {\n      punctuation: /\\.|:+/\n    }\n  },\n  function: {\n    pattern: /(^|[^^])\\B[@^]\\w+(?:(?:\\.|::?)\\w+)*(?:\\.|::?)?/,\n    lookbehind: !0,\n    inside: {\n      keyword: {\n        pattern: /(^@)(?:GET_|SET_)/,\n        lookbehind: !0\n      },\n      punctuation: /\\.|:+/\n    }\n  },\n  escape: {\n    pattern: /\\^(?:[$^;@()\\[\\]{}\"':]|#[a-f\\d]*)/i,\n    alias: \"builtin\"\n  },\n  punctuation: /[\\[\\](){};]/\n}), Prism.languages.insertBefore(\"parser\", \"keyword\", {\n  \"parser-comment\": {\n    pattern: /(\\s)#.*/,\n    lookbehind: !0,\n    alias: \"comment\"\n  },\n  expression: {\n    pattern: /(^|[^^])\\((?:[^()]|\\((?:[^()]|\\((?:[^()])*\\))*\\))*\\)/,\n    greedy: !0,\n    lookbehind: !0,\n    inside: {\n      string: {\n        pattern: /(^|[^^])([\"'])(?:(?!\\2)[^^]|\\^[\\s\\S])*\\2/,\n        lookbehind: !0\n      },\n      keyword: Prism.languages.parser.keyword,\n      variable: Prism.languages.parser.variable,\n      function: Prism.languages.parser.function,\n      boolean: /\\b(?:true|false)\\b/,\n      number: /\\b(?:0x[a-f\\d]+|\\d+\\.?\\d*(?:e[+-]?\\d+)?)\\b/i,\n      escape: Prism.languages.parser.escape,\n      operator: /[~+*\\/\\\\%]|!(?:\\|\\|?|=)?|&&?|\\|\\|?|==|<[<=]?|>[>=]?|-[fd]?|\\b(?:def|eq|ge|gt|in|is|le|lt|ne)\\b/,\n      punctuation: Prism.languages.parser.punctuation\n    }\n  }\n}), Prism.languages.insertBefore(\"inside\", \"punctuation\", {\n  expression: Prism.languages.parser.expression,\n  keyword: Prism.languages.parser.keyword,\n  variable: Prism.languages.parser.variable,\n  function: Prism.languages.parser.function,\n  escape: Prism.languages.parser.escape,\n  \"parser-punctuation\": {\n    pattern: Prism.languages.parser.punctuation,\n    alias: \"punctuation\"\n  }\n}, Prism.languages.parser.tag.inside[\"attr-value\"]), Prism.languages.pascal = {\n  comment: [/\\(\\*[\\s\\S]+?\\*\\)/, /\\{[\\s\\S]+?\\}/, /\\/\\/.*/],\n  string: {\n    pattern: /(?:'(?:''|[^'\\r\\n])*'|#[&$%]?[a-f\\d]+)+|\\^[a-z]/i,\n    greedy: !0\n  },\n  keyword: [{\n    pattern: /(^|[^&])\\b(?:absolute|array|asm|begin|case|const|constructor|destructor|do|downto|else|end|file|for|function|goto|if|implementation|inherited|inline|interface|label|nil|object|of|operator|packed|procedure|program|record|reintroduce|repeat|self|set|string|then|to|type|unit|until|uses|var|while|with)\\b/i,\n    lookbehind: !0\n  }, {\n    pattern: /(^|[^&])\\b(?:dispose|exit|false|new|true)\\b/i,\n    lookbehind: !0\n  }, {\n    pattern: /(^|[^&])\\b(?:class|dispinterface|except|exports|finalization|finally|initialization|inline|library|on|out|packed|property|raise|resourcestring|threadvar|try)\\b/i,\n    lookbehind: !0\n  }, {\n    pattern: /(^|[^&])\\b(?:absolute|abstract|alias|assembler|bitpacked|break|cdecl|continue|cppdecl|cvar|default|deprecated|dynamic|enumerator|experimental|export|external|far|far16|forward|generic|helper|implements|index|interrupt|iochecks|local|message|name|near|nodefault|noreturn|nostackframe|oldfpccall|otherwise|overload|override|pascal|platform|private|protected|public|published|read|register|reintroduce|result|safecall|saveregisters|softfloat|specialize|static|stdcall|stored|strict|unaligned|unimplemented|varargs|virtual|write)\\b/i,\n    lookbehind: !0\n  }],\n  number: [/(?:[&%]\\d+|\\$[a-f\\d]+)/i, /\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?/i],\n  operator: [/\\.\\.|\\*\\*|:=|<[<=>]?|>[>=]?|[+\\-*\\/]=?|[@^=]/i, {\n    pattern: /(^|[^&])\\b(?:and|as|div|exclude|in|include|is|mod|not|or|shl|shr|xor)\\b/,\n    lookbehind: !0\n  }],\n  punctuation: /\\(\\.|\\.\\)|[()\\[\\]:;,.]/\n}, Prism.languages.objectpascal = Prism.languages.pascal, Prism.languages.perl = {\n  comment: [{\n    pattern: /(^\\s*)=\\w+[\\s\\S]*?=cut.*/m,\n    lookbehind: !0\n  }, {\n    pattern: /(^|[^\\\\$])#.*/,\n    lookbehind: !0\n  }],\n  string: [{\n    pattern: /\\b(?:q|qq|qx|qw)\\s*([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/,\n    greedy: !0\n  }, {\n    pattern: /\\b(?:q|qq|qx|qw)\\s+([a-zA-Z0-9])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/,\n    greedy: !0\n  }, {\n    pattern: /\\b(?:q|qq|qx|qw)\\s*\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)/,\n    greedy: !0\n  }, {\n    pattern: /\\b(?:q|qq|qx|qw)\\s*\\{(?:[^{}\\\\]|\\\\[\\s\\S])*\\}/,\n    greedy: !0\n  }, {\n    pattern: /\\b(?:q|qq|qx|qw)\\s*\\[(?:[^[\\]\\\\]|\\\\[\\s\\S])*\\]/,\n    greedy: !0\n  }, {\n    pattern: /\\b(?:q|qq|qx|qw)\\s*<(?:[^<>\\\\]|\\\\[\\s\\S])*>/,\n    greedy: !0\n  }, {\n    pattern: /(\"|`)(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/,\n    greedy: !0\n  }, {\n    pattern: /'(?:[^'\\\\\\r\\n]|\\\\.)*'/,\n    greedy: !0\n  }],\n  regex: [{\n    pattern: /\\b(?:m|qr)\\s*([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1[msixpodualngc]*/,\n    greedy: !0\n  }, {\n    pattern: /\\b(?:m|qr)\\s+([a-zA-Z0-9])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1[msixpodualngc]*/,\n    greedy: !0\n  }, {\n    pattern: /\\b(?:m|qr)\\s*\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)[msixpodualngc]*/,\n    greedy: !0\n  }, {\n    pattern: /\\b(?:m|qr)\\s*\\{(?:[^{}\\\\]|\\\\[\\s\\S])*\\}[msixpodualngc]*/,\n    greedy: !0\n  }, {\n    pattern: /\\b(?:m|qr)\\s*\\[(?:[^[\\]\\\\]|\\\\[\\s\\S])*\\][msixpodualngc]*/,\n    greedy: !0\n  }, {\n    pattern: /\\b(?:m|qr)\\s*<(?:[^<>\\\\]|\\\\[\\s\\S])*>[msixpodualngc]*/,\n    greedy: !0\n  }, {\n    pattern: /(^|[^-]\\b)(?:s|tr|y)\\s*([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2[msixpodualngcer]*/,\n    lookbehind: !0,\n    greedy: !0\n  }, {\n    pattern: /(^|[^-]\\b)(?:s|tr|y)\\s+([a-zA-Z0-9])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2[msixpodualngcer]*/,\n    lookbehind: !0,\n    greedy: !0\n  }, {\n    pattern: /(^|[^-]\\b)(?:s|tr|y)\\s*\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)\\s*\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)[msixpodualngcer]*/,\n    lookbehind: !0,\n    greedy: !0\n  }, {\n    pattern: /(^|[^-]\\b)(?:s|tr|y)\\s*\\{(?:[^{}\\\\]|\\\\[\\s\\S])*\\}\\s*\\{(?:[^{}\\\\]|\\\\[\\s\\S])*\\}[msixpodualngcer]*/,\n    lookbehind: !0,\n    greedy: !0\n  }, {\n    pattern: /(^|[^-]\\b)(?:s|tr|y)\\s*\\[(?:[^[\\]\\\\]|\\\\[\\s\\S])*\\]\\s*\\[(?:[^[\\]\\\\]|\\\\[\\s\\S])*\\][msixpodualngcer]*/,\n    lookbehind: !0,\n    greedy: !0\n  }, {\n    pattern: /(^|[^-]\\b)(?:s|tr|y)\\s*<(?:[^<>\\\\]|\\\\[\\s\\S])*>\\s*<(?:[^<>\\\\]|\\\\[\\s\\S])*>[msixpodualngcer]*/,\n    lookbehind: !0,\n    greedy: !0\n  }, {\n    pattern: /\\/(?:[^\\/\\\\\\r\\n]|\\\\.)*\\/[msixpodualngc]*(?=\\s*(?:$|[\\r\\n,.;})&|\\-+*~<>!?^]|(lt|gt|le|ge|eq|ne|cmp|not|and|or|xor|x)\\b))/,\n    greedy: !0\n  }],\n  variable: [/[&*$@%]\\{\\^[A-Z]+\\}/, /[&*$@%]\\^[A-Z_]/, /[&*$@%]#?(?=\\{)/, /[&*$@%]#?(?:(?:::)*'?(?!\\d)[\\w$]+)+(?:::)*/i, /[&*$@%]\\d+/, /(?!%=)[$@%][!\"#$%&'()*+,\\-.\\/:;<=>?@[\\\\\\]^_`{|}~]/],\n  filehandle: {\n    pattern: /<(?![<=])\\S*>|\\b_\\b/,\n    alias: \"symbol\"\n  },\n  vstring: {\n    pattern: /v\\d+(?:\\.\\d+)*|\\d+(?:\\.\\d+){2,}/,\n    alias: \"string\"\n  },\n  function: {\n    pattern: /sub [a-z0-9_]+/i,\n    inside: {\n      keyword: /sub/\n    }\n  },\n  keyword: /\\b(?:any|break|continue|default|delete|die|do|else|elsif|eval|for|foreach|given|goto|if|last|local|my|next|our|package|print|redo|require|say|state|sub|switch|undef|unless|until|use|when|while)\\b/,\n  number: /\\b(?:0x[\\dA-Fa-f](?:_?[\\dA-Fa-f])*|0b[01](?:_?[01])*|(?:\\d(?:_?\\d)*)?\\.?\\d(?:_?\\d)*(?:[Ee][+-]?\\d+)?)\\b/,\n  operator: /-[rwxoRWXOezsfdlpSbctugkTBMAC]\\b|\\+[+=]?|-[-=>]?|\\*\\*?=?|\\/\\/?=?|=[=~>]?|~[~=]?|\\|\\|?=?|&&?=?|<(?:=>?|<=?)?|>>?=?|![~=]?|[%^]=?|\\.(?:=|\\.\\.?)?|[\\\\?]|\\bx(?:=|\\b)|\\b(?:lt|gt|le|ge|eq|ne|cmp|not|and|or|xor)\\b/,\n  punctuation: /[{}[\\];(),:]/\n}, Prism.languages.insertBefore(\"php\", \"variable\", {\n  this: /\\$this\\b/,\n  global: /\\$(?:_(?:SERVER|GET|POST|FILES|REQUEST|SESSION|ENV|COOKIE)|GLOBALS|HTTP_RAW_POST_DATA|argc|argv|php_errormsg|http_response_header)\\b/,\n  scope: {\n    pattern: /\\b[\\w\\\\]+::/,\n    inside: {\n      keyword: /static|self|parent/,\n      punctuation: /::|\\\\/\n    }\n  }\n}), function (e) {\n  e.languages.php = e.languages.extend(\"clike\", {\n    keyword: /\\b(?:and|or|xor|array|as|break|case|cfunction|class|const|continue|declare|default|die|do|else|elseif|enddeclare|endfor|endforeach|endif|endswitch|endwhile|extends|for|foreach|function|include|include_once|global|if|new|return|static|switch|use|require|require_once|var|while|abstract|interface|public|implements|private|protected|parent|throw|null|echo|print|trait|namespace|final|yield|goto|instanceof|finally|try|catch)\\b/i,\n    constant: /\\b[A-Z0-9_]{2,}\\b/,\n    comment: {\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n      lookbehind: !0\n    }\n  }), e.languages.insertBefore(\"php\", \"string\", {\n    \"shell-comment\": {\n      pattern: /(^|[^\\\\])#.*/,\n      lookbehind: !0,\n      alias: \"comment\"\n    }\n  }), e.languages.insertBefore(\"php\", \"keyword\", {\n    delimiter: {\n      pattern: /\\?>|<\\?(?:php|=)?/i,\n      alias: \"important\"\n    },\n    variable: /\\$+(?:\\w+\\b|(?={))/i,\n    package: {\n      pattern: /(\\\\|namespace\\s+|use\\s+)[\\w\\\\]+/,\n      lookbehind: !0,\n      inside: {\n        punctuation: /\\\\/\n      }\n    }\n  }), e.languages.insertBefore(\"php\", \"operator\", {\n    property: {\n      pattern: /(->)[\\w]+/,\n      lookbehind: !0\n    }\n  }), e.languages.insertBefore(\"php\", \"string\", {\n    \"nowdoc-string\": {\n      pattern: /<<<'([^']+)'(?:\\r\\n?|\\n)(?:.*(?:\\r\\n?|\\n))*?\\1;/,\n      greedy: !0,\n      alias: \"string\",\n      inside: {\n        delimiter: {\n          pattern: /^<<<'[^']+'|[a-z_]\\w*;$/i,\n          alias: \"symbol\",\n          inside: {\n            punctuation: /^<<<'?|[';]$/\n          }\n        }\n      }\n    },\n    \"heredoc-string\": {\n      pattern: /<<<(?:\"([^\"]+)\"(?:\\r\\n?|\\n)(?:.*(?:\\r\\n?|\\n))*?\\1;|([a-z_]\\w*)(?:\\r\\n?|\\n)(?:.*(?:\\r\\n?|\\n))*?\\2;)/i,\n      greedy: !0,\n      alias: \"string\",\n      inside: {\n        delimiter: {\n          pattern: /^<<<(?:\"[^\"]+\"|[a-z_]\\w*)|[a-z_]\\w*;$/i,\n          alias: \"symbol\",\n          inside: {\n            punctuation: /^<<<\"?|[\";]$/\n          }\n        },\n        interpolation: null\n      }\n    },\n    \"single-quoted-string\": {\n      pattern: /'(?:\\\\[\\s\\S]|[^\\\\'])*'/,\n      greedy: !0,\n      alias: \"string\"\n    },\n    \"double-quoted-string\": {\n      pattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,\n      greedy: !0,\n      alias: \"string\",\n      inside: {\n        interpolation: null\n      }\n    }\n  }), delete e.languages.php.string;\n  var t = {\n    pattern: /{\\$(?:{(?:{[^{}]+}|[^{}]+)}|[^{}])+}|(^|[^\\\\{])\\$+(?:\\w+(?:\\[.+?]|->\\w+)*)/,\n    lookbehind: !0,\n    inside: {\n      rest: e.languages.php\n    }\n  };\n  e.languages.php[\"heredoc-string\"].inside.interpolation = t, e.languages.php[\"double-quoted-string\"].inside.interpolation = t, e.hooks.add(\"before-tokenize\", function (t) {\n    /(?:<\\?php|<\\?)/gi.test(t.code) && e.languages[\"markup-templating\"].buildPlaceholders(t, \"php\", /(?:<\\?php|<\\?)[\\s\\S]*?(?:\\?>|$)/gi);\n  }), e.hooks.add(\"after-tokenize\", function (t) {\n    e.languages[\"markup-templating\"].tokenizePlaceholders(t, \"php\");\n  });\n}(Prism), Prism.languages.sql = {\n  comment: {\n    pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|(?:--|\\/\\/|#).*)/,\n    lookbehind: !0\n  },\n  string: {\n    pattern: /(^|[^@\\\\])(\"|')(?:\\\\[\\s\\S]|(?!\\2)[^\\\\])*\\2/,\n    greedy: !0,\n    lookbehind: !0\n  },\n  variable: /@[\\w.$]+|@([\"'`])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])+\\1/,\n  function: /\\b(?:AVG|COUNT|FIRST|FORMAT|LAST|LCASE|LEN|MAX|MID|MIN|MOD|NOW|ROUND|SUM|UCASE)(?=\\s*\\()/i,\n  keyword: /\\b(?:ACTION|ADD|AFTER|ALGORITHM|ALL|ALTER|ANALYZE|ANY|APPLY|AS|ASC|AUTHORIZATION|AUTO_INCREMENT|BACKUP|BDB|BEGIN|BERKELEYDB|BIGINT|BINARY|BIT|BLOB|BOOL|BOOLEAN|BREAK|BROWSE|BTREE|BULK|BY|CALL|CASCADED?|CASE|CHAIN|CHAR(?:ACTER|SET)?|CHECK(?:POINT)?|CLOSE|CLUSTERED|COALESCE|COLLATE|COLUMNS?|COMMENT|COMMIT(?:TED)?|COMPUTE|CONNECT|CONSISTENT|CONSTRAINT|CONTAINS(?:TABLE)?|CONTINUE|CONVERT|CREATE|CROSS|CURRENT(?:_DATE|_TIME|_TIMESTAMP|_USER)?|CURSOR|CYCLE|DATA(?:BASES?)?|DATE(?:TIME)?|DAY|DBCC|DEALLOCATE|DEC|DECIMAL|DECLARE|DEFAULT|DEFINER|DELAYED|DELETE|DELIMITERS?|DENY|DESC|DESCRIBE|DETERMINISTIC|DISABLE|DISCARD|DISK|DISTINCT|DISTINCTROW|DISTRIBUTED|DO|DOUBLE|DROP|DUMMY|DUMP(?:FILE)?|DUPLICATE|ELSE(?:IF)?|ENABLE|ENCLOSED|END|ENGINE|ENUM|ERRLVL|ERRORS|ESCAPED?|EXCEPT|EXEC(?:UTE)?|EXISTS|EXIT|EXPLAIN|EXTENDED|FETCH|FIELDS|FILE|FILLFACTOR|FIRST|FIXED|FLOAT|FOLLOWING|FOR(?: EACH ROW)?|FORCE|FOREIGN|FREETEXT(?:TABLE)?|FROM|FULL|FUNCTION|GEOMETRY(?:COLLECTION)?|GLOBAL|GOTO|GRANT|GROUP|HANDLER|HASH|HAVING|HOLDLOCK|HOUR|IDENTITY(?:_INSERT|COL)?|IF|IGNORE|IMPORT|INDEX|INFILE|INNER|INNODB|INOUT|INSERT|INT|INTEGER|INTERSECT|INTERVAL|INTO|INVOKER|ISOLATION|ITERATE|JOIN|KEYS?|KILL|LANGUAGE|LAST|LEAVE|LEFT|LEVEL|LIMIT|LINENO|LINES|LINESTRING|LOAD|LOCAL|LOCK|LONG(?:BLOB|TEXT)|LOOP|MATCH(?:ED)?|MEDIUM(?:BLOB|INT|TEXT)|MERGE|MIDDLEINT|MINUTE|MODE|MODIFIES|MODIFY|MONTH|MULTI(?:LINESTRING|POINT|POLYGON)|NATIONAL|NATURAL|NCHAR|NEXT|NO|NONCLUSTERED|NULLIF|NUMERIC|OFF?|OFFSETS?|ON|OPEN(?:DATASOURCE|QUERY|ROWSET)?|OPTIMIZE|OPTION(?:ALLY)?|ORDER|OUT(?:ER|FILE)?|OVER|PARTIAL|PARTITION|PERCENT|PIVOT|PLAN|POINT|POLYGON|PRECEDING|PRECISION|PREPARE|PREV|PRIMARY|PRINT|PRIVILEGES|PROC(?:EDURE)?|PUBLIC|PURGE|QUICK|RAISERROR|READS?|REAL|RECONFIGURE|REFERENCES|RELEASE|RENAME|REPEAT(?:ABLE)?|REPLACE|REPLICATION|REQUIRE|RESIGNAL|RESTORE|RESTRICT|RETURNS?|REVOKE|RIGHT|ROLLBACK|ROUTINE|ROW(?:COUNT|GUIDCOL|S)?|RTREE|RULE|SAVE(?:POINT)?|SCHEMA|SECOND|SELECT|SERIAL(?:IZABLE)?|SESSION(?:_USER)?|SET(?:USER)?|SHARE|SHOW|SHUTDOWN|SIMPLE|SMALLINT|SNAPSHOT|SOME|SONAME|SQL|START(?:ING)?|STATISTICS|STATUS|STRIPED|SYSTEM_USER|TABLES?|TABLESPACE|TEMP(?:ORARY|TABLE)?|TERMINATED|TEXT(?:SIZE)?|THEN|TIME(?:STAMP)?|TINY(?:BLOB|INT|TEXT)|TOP?|TRAN(?:SACTIONS?)?|TRIGGER|TRUNCATE|TSEQUAL|TYPES?|UNBOUNDED|UNCOMMITTED|UNDEFINED|UNION|UNIQUE|UNLOCK|UNPIVOT|UNSIGNED|UPDATE(?:TEXT)?|USAGE|USE|USER|USING|VALUES?|VAR(?:BINARY|CHAR|CHARACTER|YING)|VIEW|WAITFOR|WARNINGS|WHEN|WHERE|WHILE|WITH(?: ROLLUP|IN)?|WORK|WRITE(?:TEXT)?|YEAR)\\b/i,\n  boolean: /\\b(?:TRUE|FALSE|NULL)\\b/i,\n  number: /\\b0x[\\da-f]+\\b|\\b\\d+\\.?\\d*|\\B\\.\\d+\\b/i,\n  operator: /[-+*\\/=%^~]|&&?|\\|\\|?|!=?|<(?:=>?|<|>)?|>[>=]?|\\b(?:AND|BETWEEN|IN|LIKE|NOT|OR|IS|DIV|REGEXP|RLIKE|SOUNDS LIKE|XOR)\\b/i,\n  punctuation: /[;[\\]()`,.]/\n}, Prism.languages.plsql = Prism.languages.extend(\"sql\", {\n  comment: [/\\/\\*[\\s\\S]*?\\*\\//, /--.*/]\n}), \"Array\" !== Prism.util.type(Prism.languages.plsql.keyword) && (Prism.languages.plsql.keyword = [Prism.languages.plsql.keyword]), Prism.languages.plsql.keyword.unshift(/\\b(?:ACCESS|AGENT|AGGREGATE|ARRAY|ARROW|AT|ATTRIBUTE|AUDIT|AUTHID|BFILE_BASE|BLOB_BASE|BLOCK|BODY|BOTH|BOUND|BYTE|CALLING|CHAR_BASE|CHARSET(?:FORM|ID)|CLOB_BASE|COLAUTH|COLLECT|CLUSTERS?|COMPILED|COMPRESS|CONSTANT|CONSTRUCTOR|CONTEXT|CRASH|CUSTOMDATUM|DANGLING|DATE_BASE|DEFINE|DETERMINISTIC|DURATION|ELEMENT|EMPTY|EXCEPTIONS?|EXCLUSIVE|EXTERNAL|FINAL|FORALL|FORM|FOUND|GENERAL|HEAP|HIDDEN|IDENTIFIED|IMMEDIATE|INCLUDING|INCREMENT|INDICATOR|INDEXES|INDICES|INFINITE|INITIAL|ISOPEN|INSTANTIABLE|INTERFACE|INVALIDATE|JAVA|LARGE|LEADING|LENGTH|LIBRARY|LIKE[24C]|LIMITED|LONG|LOOP|MAP|MAXEXTENTS|MAXLEN|MEMBER|MINUS|MLSLABEL|MULTISET|NAME|NAN|NATIVE|NEW|NOAUDIT|NOCOMPRESS|NOCOPY|NOTFOUND|NOWAIT|NUMBER(?:_BASE)?|OBJECT|OCI(?:COLL|DATE|DATETIME|DURATION|INTERVAL|LOBLOCATOR|NUMBER|RAW|REF|REFCURSOR|ROWID|STRING|TYPE)|OFFLINE|ONLINE|ONLY|OPAQUE|OPERATOR|ORACLE|ORADATA|ORGANIZATION|ORL(?:ANY|VARY)|OTHERS|OVERLAPS|OVERRIDING|PACKAGE|PARALLEL_ENABLE|PARAMETERS?|PASCAL|PCTFREE|PIPE(?:LINED)?|PRAGMA|PRIOR|PRIVATE|RAISE|RANGE|RAW|RECORD|REF|REFERENCE|REM|REMAINDER|RESULT|RESOURCE|RETURNING|REVERSE|ROW(?:ID|NUM|TYPE)|SAMPLE|SB[124]|SEGMENT|SELF|SEPARATE|SEQUENCE|SHORT|SIZE(?:_T)?|SPARSE|SQL(?:CODE|DATA|NAME|STATE)|STANDARD|STATIC|STDDEV|STORED|STRING|STRUCT|STYLE|SUBMULTISET|SUBPARTITION|SUBSTITUTABLE|SUBTYPE|SUCCESSFUL|SYNONYM|SYSDATE|TABAUTH|TDO|THE|TIMEZONE_(?:ABBR|HOUR|MINUTE|REGION)|TRAILING|TRANSAC(?:TIONAL)?|TRUSTED|UB[124]|UID|UNDER|UNTRUSTED|VALIDATE|VALIST|VARCHAR2|VARIABLE|VARIANCE|VARRAY|VIEWS|VOID|WHENEVER|WRAPPED|ZONE)\\b/i), \"Array\" !== Prism.util.type(Prism.languages.plsql.operator) && (Prism.languages.plsql.operator = [Prism.languages.plsql.operator]), Prism.languages.plsql.operator.unshift(/:=/), Prism.languages.powershell = {\n  comment: [{\n    pattern: /(^|[^`])<#[\\s\\S]*?#>/,\n    lookbehind: !0\n  }, {\n    pattern: /(^|[^`])#.*/,\n    lookbehind: !0\n  }],\n  string: [{\n    pattern: /\"(?:`[\\s\\S]|[^`\"])*\"/,\n    greedy: !0,\n    inside: {\n      function: {\n        pattern: /(^|[^`])\\$\\((?:\\$\\(.*?\\)|(?!\\$\\()[^\\r\\n)])*\\)/,\n        lookbehind: !0,\n        inside: {}\n      }\n    }\n  }, {\n    pattern: /'(?:[^']|'')*'/,\n    greedy: !0\n  }],\n  namespace: /\\[[a-z](?:\\[(?:\\[[^\\]]*]|[^\\[\\]])*]|[^\\[\\]])*]/i,\n  boolean: /\\$(?:true|false)\\b/i,\n  variable: /\\$\\w+\\b/i,\n  function: [/\\b(?:Add-(?:Computer|Content|History|Member|PSSnapin|Type)|Checkpoint-Computer|Clear-(?:Content|EventLog|History|Item|ItemProperty|Variable)|Compare-Object|Complete-Transaction|Connect-PSSession|ConvertFrom-(?:Csv|Json|StringData)|Convert-Path|ConvertTo-(?:Csv|Html|Json|Xml)|Copy-(?:Item|ItemProperty)|Debug-Process|Disable-(?:ComputerRestore|PSBreakpoint|PSRemoting|PSSessionConfiguration)|Disconnect-PSSession|Enable-(?:ComputerRestore|PSBreakpoint|PSRemoting|PSSessionConfiguration)|Enter-PSSession|Exit-PSSession|Export-(?:Alias|Clixml|Console|Csv|FormatData|ModuleMember|PSSession)|ForEach-Object|Format-(?:Custom|List|Table|Wide)|Get-(?:Alias|ChildItem|Command|ComputerRestorePoint|Content|ControlPanelItem|Culture|Date|Event|EventLog|EventSubscriber|FormatData|Help|History|Host|HotFix|Item|ItemProperty|Job|Location|Member|Module|Process|PSBreakpoint|PSCallStack|PSDrive|PSProvider|PSSession|PSSessionConfiguration|PSSnapin|Random|Service|TraceSource|Transaction|TypeData|UICulture|Unique|Variable|WmiObject)|Group-Object|Import-(?:Alias|Clixml|Csv|LocalizedData|Module|PSSession)|Invoke-(?:Command|Expression|History|Item|RestMethod|WebRequest|WmiMethod)|Join-Path|Limit-EventLog|Measure-(?:Command|Object)|Move-(?:Item|ItemProperty)|New-(?:Alias|Event|EventLog|Item|ItemProperty|Module|ModuleManifest|Object|PSDrive|PSSession|PSSessionConfigurationFile|PSSessionOption|PSTransportOption|Service|TimeSpan|Variable|WebServiceProxy)|Out-(?:Default|File|GridView|Host|Null|Printer|String)|Pop-Location|Push-Location|Read-Host|Receive-(?:Job|PSSession)|Register-(?:EngineEvent|ObjectEvent|PSSessionConfiguration|WmiEvent)|Remove-(?:Computer|Event|EventLog|Item|ItemProperty|Job|Module|PSBreakpoint|PSDrive|PSSession|PSSnapin|TypeData|Variable|WmiObject)|Rename-(?:Computer|Item|ItemProperty)|Reset-ComputerMachinePassword|Resolve-Path|Restart-(?:Computer|Service)|Restore-Computer|Resume-(?:Job|Service)|Save-Help|Select-(?:Object|String|Xml)|Send-MailMessage|Set-(?:Alias|Content|Date|Item|ItemProperty|Location|PSBreakpoint|PSDebug|PSSessionConfiguration|Service|StrictMode|TraceSource|Variable|WmiInstance)|Show-(?:Command|ControlPanelItem|EventLog)|Sort-Object|Split-Path|Start-(?:Job|Process|Service|Sleep|Transaction)|Stop-(?:Computer|Job|Process|Service)|Suspend-(?:Job|Service)|Tee-Object|Test-(?:ComputerSecureChannel|Connection|ModuleManifest|Path|PSSessionConfigurationFile)|Trace-Command|Unblock-File|Undo-Transaction|Unregister-(?:Event|PSSessionConfiguration)|Update-(?:FormatData|Help|List|TypeData)|Use-Transaction|Wait-(?:Event|Job|Process)|Where-Object|Write-(?:Debug|Error|EventLog|Host|Output|Progress|Verbose|Warning))\\b/i, /\\b(?:ac|cat|chdir|clc|cli|clp|clv|compare|copy|cp|cpi|cpp|cvpa|dbp|del|diff|dir|ebp|echo|epal|epcsv|epsn|erase|fc|fl|ft|fw|gal|gbp|gc|gci|gcs|gdr|gi|gl|gm|gp|gps|group|gsv|gu|gv|gwmi|iex|ii|ipal|ipcsv|ipsn|irm|iwmi|iwr|kill|lp|ls|measure|mi|mount|move|mp|mv|nal|ndr|ni|nv|ogv|popd|ps|pushd|pwd|rbp|rd|rdr|ren|ri|rm|rmdir|rni|rnp|rp|rv|rvpa|rwmi|sal|saps|sasv|sbp|sc|select|set|shcm|si|sl|sleep|sls|sort|sp|spps|spsv|start|sv|swmi|tee|trcm|type|write)\\b/i],\n  keyword: /\\b(?:Begin|Break|Catch|Class|Continue|Data|Define|Do|DynamicParam|Else|ElseIf|End|Exit|Filter|Finally|For|ForEach|From|Function|If|InlineScript|Parallel|Param|Process|Return|Sequence|Switch|Throw|Trap|Try|Until|Using|Var|While|Workflow)\\b/i,\n  operator: {\n    pattern: /(\\W?)(?:!|-(eq|ne|gt|ge|lt|le|sh[lr]|not|b?(?:and|x?or)|(?:Not)?(?:Like|Match|Contains|In)|Replace|Join|is(?:Not)?|as)\\b|-[-=]?|\\+[+=]?|[*\\/%]=?)/i,\n    lookbehind: !0\n  },\n  punctuation: /[|{}[\\];(),.]/\n}, Prism.languages.powershell.string[0].inside.boolean = Prism.languages.powershell.boolean, Prism.languages.powershell.string[0].inside.variable = Prism.languages.powershell.variable, Prism.languages.powershell.string[0].inside.function.inside = Prism.languages.powershell, Prism.languages.processing = Prism.languages.extend(\"clike\", {\n  keyword: /\\b(?:break|catch|case|class|continue|default|else|extends|final|for|if|implements|import|new|null|private|public|return|static|super|switch|this|try|void|while)\\b/,\n  operator: /<[<=]?|>[>=]?|&&?|\\|\\|?|[%?]|[!=+\\-*\\/]=?/\n}), Prism.languages.insertBefore(\"processing\", \"number\", {\n  constant: /\\b(?!XML\\b)[A-Z][A-Z\\d_]+\\b/,\n  type: {\n    pattern: /\\b(?:boolean|byte|char|color|double|float|int|XML|[A-Z]\\w*)\\b/,\n    alias: \"variable\"\n  }\n}), Prism.languages.processing.function.pattern = /\\w+(?=\\s*\\()/, Prism.languages.processing[\"class-name\"].alias = \"variable\", Prism.languages.prolog = {\n  comment: [/%.+/, /\\/\\*[\\s\\S]*?\\*\\//],\n  string: {\n    pattern: /([\"'])(?:\\1\\1|\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: !0\n  },\n  builtin: /\\b(?:fx|fy|xf[xy]?|yfx?)\\b/,\n  variable: /\\b[A-Z_]\\w*/,\n  function: /\\b[a-z]\\w*(?:(?=\\()|\\/\\d+)/,\n  number: /\\b\\d+\\.?\\d*/,\n  operator: /[:\\\\=><\\-?*@\\/;+^|!$.]+|\\b(?:is|mod|not|xor)\\b/,\n  punctuation: /[(){}\\[\\],]/\n}, Prism.languages.properties = {\n  comment: /^[ \\t]*[#!].*$/m,\n  \"attr-value\": {\n    pattern: /(^[ \\t]*(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\s:=])+?(?: *[=:] *| ))(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n])+/m,\n    lookbehind: !0\n  },\n  \"attr-name\": /^[ \\t]*(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\s:=])+?(?= *[=:] *| )/m,\n  punctuation: /[=:]/\n}, Prism.languages.protobuf = Prism.languages.extend(\"clike\", {\n  keyword: /\\b(?:package|import|message|enum)\\b/,\n  builtin: /\\b(?:required|repeated|optional|reserved)\\b/,\n  primitive: {\n    pattern: /\\b(?:double|float|int32|int64|uint32|uint64|sint32|sint64|fixed32|fixed64|sfixed32|sfixed64|bool|string|bytes)\\b/,\n    alias: \"symbol\"\n  }\n}), function (e) {\n  e.languages.pug = {\n    comment: {\n      pattern: /(^([\\t ]*))\\/\\/.*(?:(?:\\r?\\n|\\r)\\2[\\t ]+.+)*/m,\n      lookbehind: !0\n    },\n    \"multiline-script\": {\n      pattern: /(^([\\t ]*)script\\b.*\\.[\\t ]*)(?:(?:\\r?\\n|\\r(?!\\n))(?:\\2[\\t ]+.+|\\s*?(?=\\r?\\n|\\r)))+/m,\n      lookbehind: !0,\n      inside: {\n        rest: e.languages.javascript\n      }\n    },\n    filter: {\n      pattern: /(^([\\t ]*)):.+(?:(?:\\r?\\n|\\r(?!\\n))(?:\\2[\\t ]+.+|\\s*?(?=\\r?\\n|\\r)))+/m,\n      lookbehind: !0,\n      inside: {\n        \"filter-name\": {\n          pattern: /^:[\\w-]+/,\n          alias: \"variable\"\n        }\n      }\n    },\n    \"multiline-plain-text\": {\n      pattern: /(^([\\t ]*)[\\w\\-#.]+\\.[\\t ]*)(?:(?:\\r?\\n|\\r(?!\\n))(?:\\2[\\t ]+.+|\\s*?(?=\\r?\\n|\\r)))+/m,\n      lookbehind: !0\n    },\n    markup: {\n      pattern: /(^[\\t ]*)<.+/m,\n      lookbehind: !0,\n      inside: {\n        rest: e.languages.markup\n      }\n    },\n    doctype: {\n      pattern: /((?:^|\\n)[\\t ]*)doctype(?: .+)?/,\n      lookbehind: !0\n    },\n    \"flow-control\": {\n      pattern: /(^[\\t ]*)(?:if|unless|else|case|when|default|each|while)\\b(?: .+)?/m,\n      lookbehind: !0,\n      inside: {\n        each: {\n          pattern: /^each .+? in\\b/,\n          inside: {\n            keyword: /\\b(?:each|in)\\b/,\n            punctuation: /,/\n          }\n        },\n        branch: {\n          pattern: /^(?:if|unless|else|case|when|default|while)\\b/,\n          alias: \"keyword\"\n        },\n        rest: e.languages.javascript\n      }\n    },\n    keyword: {\n      pattern: /(^[\\t ]*)(?:block|extends|include|append|prepend)\\b.+/m,\n      lookbehind: !0\n    },\n    mixin: [{\n      pattern: /(^[\\t ]*)mixin .+/m,\n      lookbehind: !0,\n      inside: {\n        keyword: /^mixin/,\n        function: /\\w+(?=\\s*\\(|\\s*$)/,\n        punctuation: /[(),.]/\n      }\n    }, {\n      pattern: /(^[\\t ]*)\\+.+/m,\n      lookbehind: !0,\n      inside: {\n        name: {\n          pattern: /^\\+\\w+/,\n          alias: \"function\"\n        },\n        rest: e.languages.javascript\n      }\n    }],\n    script: {\n      pattern: /(^[\\t ]*script(?:(?:&[^(]+)?\\([^)]+\\))*[\\t ]+).+/m,\n      lookbehind: !0,\n      inside: {\n        rest: e.languages.javascript\n      }\n    },\n    \"plain-text\": {\n      pattern: /(^[\\t ]*(?!-)[\\w\\-#.]*[\\w\\-](?:(?:&[^(]+)?\\([^)]+\\))*\\/?[\\t ]+).+/m,\n      lookbehind: !0\n    },\n    tag: {\n      pattern: /(^[\\t ]*)(?!-)[\\w\\-#.]*[\\w\\-](?:(?:&[^(]+)?\\([^)]+\\))*\\/?:?/m,\n      lookbehind: !0,\n      inside: {\n        attributes: [{\n          pattern: /&[^(]+\\([^)]+\\)/,\n          inside: {\n            rest: e.languages.javascript\n          }\n        }, {\n          pattern: /\\([^)]+\\)/,\n          inside: {\n            \"attr-value\": {\n              pattern: /(=\\s*)(?:\\{[^}]*\\}|[^,)\\r\\n]+)/,\n              lookbehind: !0,\n              inside: {\n                rest: e.languages.javascript\n              }\n            },\n            \"attr-name\": /[\\w-]+(?=\\s*!?=|\\s*[,)])/,\n            punctuation: /[!=(),]+/\n          }\n        }],\n        punctuation: /:/\n      }\n    },\n    code: [{\n      pattern: /(^[\\t ]*(?:-|!?=)).+/m,\n      lookbehind: !0,\n      inside: {\n        rest: e.languages.javascript\n      }\n    }],\n    punctuation: /[.\\-!=|]+/\n  };\n\n  for (var t = [{\n    filter: \"atpl\",\n    language: \"twig\"\n  }, {\n    filter: \"coffee\",\n    language: \"coffeescript\"\n  }, \"ejs\", \"handlebars\", \"hogan\", \"less\", \"livescript\", \"markdown\", \"mustache\", \"plates\", {\n    filter: \"sass\",\n    language: \"scss\"\n  }, \"stylus\", \"swig\"], n = {}, a = 0, i = t.length; a < i; a++) {\n    var r = t[a];\n    e.languages[(r = \"string\" == typeof r ? {\n      filter: r,\n      language: r\n    } : r).language] && (n[\"filter-\" + r.filter] = {\n      pattern: RegExp(\"(^([\\\\t ]*)):{{filter_name}}(?:(?:\\\\r?\\\\n|\\\\r(?!\\\\n))(?:\\\\2[\\\\t ]+.+|\\\\s*?(?=\\\\r?\\\\n|\\\\r)))+\".replace(\"{{filter_name}}\", r.filter), \"m\"),\n      lookbehind: !0,\n      inside: {\n        \"filter-name\": {\n          pattern: /^:[\\w-]+/,\n          alias: \"variable\"\n        },\n        rest: e.languages[r.language]\n      }\n    });\n  }\n\n  e.languages.insertBefore(\"pug\", \"filter\", n);\n}(Prism), function (e) {\n  e.languages.puppet = {\n    heredoc: [{\n      pattern: /(@\\(\"([^\"\\r\\n\\/):]+)\"(?:\\/[nrts$uL]*)?\\).*(?:\\r?\\n|\\r))(?:.*(?:\\r?\\n|\\r))*?[ \\t]*\\|?[ \\t]*-?[ \\t]*\\2/,\n      lookbehind: !0,\n      alias: \"string\",\n      inside: {\n        punctuation: /(?=\\S).*\\S(?= *$)/\n      }\n    }, {\n      pattern: /(@\\(([^\"\\r\\n\\/):]+)(?:\\/[nrts$uL]*)?\\).*(?:\\r?\\n|\\r))(?:.*(?:\\r?\\n|\\r))*?[ \\t]*\\|?[ \\t]*-?[ \\t]*\\2/,\n      lookbehind: !0,\n      greedy: !0,\n      alias: \"string\",\n      inside: {\n        punctuation: /(?=\\S).*\\S(?= *$)/\n      }\n    }, {\n      pattern: /@\\(\"?(?:[^\"\\r\\n\\/):]+)\"?(?:\\/[nrts$uL]*)?\\)/,\n      alias: \"string\",\n      inside: {\n        punctuation: {\n          pattern: /(\\().+?(?=\\))/,\n          lookbehind: !0\n        }\n      }\n    }],\n    \"multiline-comment\": {\n      pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,\n      lookbehind: !0,\n      greedy: !0,\n      alias: \"comment\"\n    },\n    regex: {\n      pattern: /((?:\\bnode\\s+|[~=\\(\\[\\{,]\\s*|[=+]>\\s*|^\\s*))\\/(?:[^\\/\\\\]|\\\\[\\s\\S])+\\/(?:[imx]+\\b|\\B)/,\n      lookbehind: !0,\n      greedy: !0,\n      inside: {\n        \"extended-regex\": {\n          pattern: /^\\/(?:[^\\/\\\\]|\\\\[\\s\\S])+\\/[im]*x[im]*$/,\n          inside: {\n            comment: /#.*/\n          }\n        }\n      }\n    },\n    comment: {\n      pattern: /(^|[^\\\\])#.*/,\n      lookbehind: !0,\n      greedy: !0\n    },\n    string: {\n      pattern: /([\"'])(?:\\$\\{(?:[^'\"}]|([\"'])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2)+\\}|(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/,\n      greedy: !0,\n      inside: {\n        \"double-quoted\": {\n          pattern: /^\"[\\s\\S]*\"$/,\n          inside: {}\n        }\n      }\n    },\n    variable: {\n      pattern: /\\$(?:::)?\\w+(?:::\\w+)*/,\n      inside: {\n        punctuation: /::/\n      }\n    },\n    \"attr-name\": /(?:\\w+|\\*)(?=\\s*=>)/,\n    function: [{\n      pattern: /(\\.)(?!\\d)\\w+/,\n      lookbehind: !0\n    }, /\\b(?:contain|debug|err|fail|include|info|notice|realize|require|tag|warning)\\b|\\b(?!\\d)\\w+(?=\\()/],\n    number: /\\b(?:0x[a-f\\d]+|\\d+(?:\\.\\d+)?(?:e-?\\d+)?)\\b/i,\n    boolean: /\\b(?:true|false)\\b/,\n    keyword: /\\b(?:application|attr|case|class|consumes|default|define|else|elsif|function|if|import|inherits|node|private|produces|type|undef|unless)\\b/,\n    datatype: {\n      pattern: /\\b(?:Any|Array|Boolean|Callable|Catalogentry|Class|Collection|Data|Default|Enum|Float|Hash|Integer|NotUndef|Numeric|Optional|Pattern|Regexp|Resource|Runtime|Scalar|String|Struct|Tuple|Type|Undef|Variant)\\b/,\n      alias: \"symbol\"\n    },\n    operator: /=[=~>]?|![=~]?|<(?:<\\|?|[=~|-])?|>[>=]?|->?|~>|\\|>?>?|[*\\/%+?]|\\b(?:and|in|or)\\b/,\n    punctuation: /[\\[\\]{}().,;]|:+/\n  };\n  var t = [{\n    pattern: /(^|[^\\\\])\\$\\{(?:[^'\"{}]|\\{[^}]*\\}|([\"'])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2)+\\}/,\n    lookbehind: !0,\n    inside: {\n      \"short-variable\": {\n        pattern: /(^\\$\\{)(?!\\w+\\()(?:::)?\\w+(?:::\\w+)*/,\n        lookbehind: !0,\n        alias: \"variable\",\n        inside: {\n          punctuation: /::/\n        }\n      },\n      delimiter: {\n        pattern: /^\\$/,\n        alias: \"variable\"\n      },\n      rest: e.languages.puppet\n    }\n  }, {\n    pattern: /(^|[^\\\\])\\$(?:::)?\\w+(?:::\\w+)*/,\n    lookbehind: !0,\n    alias: \"variable\",\n    inside: {\n      punctuation: /::/\n    }\n  }];\n  e.languages.puppet.heredoc[0].inside.interpolation = t, e.languages.puppet.string.inside[\"double-quoted\"].inside.interpolation = t;\n}(Prism), function (e) {\n  e.languages.pure = {\n    comment: [{\n      pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,\n      lookbehind: !0\n    }, {\n      pattern: /(^|[^\\\\:])\\/\\/.*/,\n      lookbehind: !0\n    }, /#!.+/],\n    \"inline-lang\": {\n      pattern: /%<[\\s\\S]+?%>/,\n      greedy: !0,\n      inside: {\n        lang: {\n          pattern: /(^%< *)-\\*-.+?-\\*-/,\n          lookbehind: !0,\n          alias: \"comment\"\n        },\n        delimiter: {\n          pattern: /^%<.*|%>$/,\n          alias: \"punctuation\"\n        }\n      }\n    },\n    string: {\n      pattern: /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"/,\n      greedy: !0\n    },\n    number: {\n      pattern: /((?:\\.\\.)?)(?:\\b(?:inf|nan)\\b|\\b0x[\\da-f]+|(?:\\b(?:0b)?\\d+(?:\\.\\d)?|\\B\\.\\d)\\d*(?:e[+-]?\\d+)?L?)/i,\n      lookbehind: !0\n    },\n    keyword: /\\b(?:ans|break|bt|case|catch|cd|clear|const|def|del|dump|else|end|exit|extern|false|force|help|if|infix[lr]?|interface|let|ls|mem|namespace|nonfix|NULL|of|otherwise|outfix|override|postfix|prefix|private|public|pwd|quit|run|save|show|stats|then|throw|trace|true|type|underride|using|when|with)\\b/,\n    function: /\\b(?:abs|add_(?:(?:fundef|interface|macdef|typedef)(?:_at)?|addr|constdef|vardef)|all|any|applp?|arity|bigintp?|blob(?:_crc|_size|p)?|boolp?|byte_(?:matrix|pointer)|byte_c?string(?:_pointer)?|calloc|cat|catmap|ceil|char[ps]?|check_ptrtag|chr|clear_sentry|clearsym|closurep?|cmatrixp?|cols?|colcat(?:map)?|colmap|colrev|colvector(?:p|seq)?|complex(?:_float_(?:matrix|pointer)|_matrix(?:_view)?|_pointer|p)?|conj|cookedp?|cst|cstring(?:_(?:dup|list|vector))?|curry3?|cyclen?|del_(?:constdef|fundef|interface|macdef|typedef|vardef)|delete|diag(?:mat)?|dim|dmatrixp?|do|double(?:_matrix(?:_view)?|_pointer|p)?|dowith3?|drop|dropwhile|eval(?:cmd)?|exactp|filter|fix|fixity|flip|float(?:_matrix|_pointer)|floor|fold[lr]1?|frac|free|funp?|functionp?|gcd|get(?:_(?:byte|constdef|double|float|fundef|int(?:64)?|interface(?:_typedef)?|long|macdef|pointer|ptrtag|short|sentry|string|typedef|vardef))?|globsym|hash|head|id|im|imatrixp?|index|inexactp|infp|init|insert|int(?:_matrix(?:_view)?|_pointer|p)?|int64_(?:matrix|pointer)|integerp?|iteraten?|iterwhile|join|keys?|lambdap?|last(?:err(?:pos)?)?|lcd|list[2p]?|listmap|make_ptrtag|malloc|map|matcat|matrixp?|max|member|min|nanp|nargs|nmatrixp?|null|numberp?|ord|pack(?:ed)?|pointer(?:_cast|_tag|_type|p)?|pow|pred|ptrtag|put(?:_(?:byte|double|float|int(?:64)?|long|pointer|short|string))?|rationalp?|re|realp?|realloc|recordp?|redim|reduce(?:_with)?|refp?|repeatn?|reverse|rlistp?|round|rows?|rowcat(?:map)?|rowmap|rowrev|rowvector(?:p|seq)?|same|scan[lr]1?|sentry|sgn|short_(?:matrix|pointer)|slice|smatrixp?|sort|split|str|strcat|stream|stride|string(?:_(?:dup|list|vector)|p)?|subdiag(?:mat)?|submat|subseq2?|substr|succ|supdiag(?:mat)?|symbolp?|tail|take|takewhile|thunkp?|transpose|trunc|tuplep?|typep|ubyte|uint(?:64)?|ulong|uncurry3?|unref|unzip3?|update|ushort|vals?|varp?|vector(?:p|seq)?|void|zip3?|zipwith3?)\\b/,\n    special: {\n      pattern: /\\b__[a-z]+__\\b/i,\n      alias: \"builtin\"\n    },\n    operator: /(?=\\b_|[^_])[!\"#$%&'*+,\\-.\\/:<=>?@\\\\^_`|~\\u00a1-\\u00bf\\u00d7-\\u00f7\\u20d0-\\u2bff]+|\\b(?:and|div|mod|not|or)\\b/,\n    punctuation: /[(){}\\[\\];,|]/\n  }, [\"c\", {\n    lang: \"c++\",\n    alias: \"cpp\"\n  }, \"fortran\", \"ats\", \"dsp\"].forEach(function (t) {\n    var n = t;\n\n    if (\"string\" != typeof t && (n = t.alias, t = t.lang), e.languages[n]) {\n      var a = {};\n      a[\"inline-lang-\" + n] = {\n        pattern: RegExp(\"%< *-\\\\*- *{lang}\\\\d* *-\\\\*-[\\\\s\\\\S]+?%>\".replace(\"{lang}\", t.replace(/([.+*?\\/\\\\(){}\\[\\]])/g, \"\\\\$1\")), \"i\"),\n        inside: e.util.clone(e.languages.pure[\"inline-lang\"].inside)\n      }, a[\"inline-lang-\" + n].inside.rest = e.util.clone(e.languages[n]), e.languages.insertBefore(\"pure\", \"inline-lang\", a);\n    }\n  }), e.languages.c && (e.languages.pure[\"inline-lang\"].inside.rest = e.util.clone(e.languages.c));\n}(Prism), Prism.languages.python = {\n  comment: {\n    pattern: /(^|[^\\\\])#.*/,\n    lookbehind: !0\n  },\n  \"triple-quoted-string\": {\n    pattern: /(\"\"\"|''')[\\s\\S]+?\\1/,\n    greedy: !0,\n    alias: \"string\"\n  },\n  string: {\n    pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: !0\n  },\n  function: {\n    pattern: /((?:^|\\s)def[ \\t]+)[a-zA-Z_]\\w*(?=\\s*\\()/g,\n    lookbehind: !0\n  },\n  \"class-name\": {\n    pattern: /(\\bclass\\s+)\\w+/i,\n    lookbehind: !0\n  },\n  keyword: /\\b(?:as|assert|async|await|break|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|nonlocal|pass|print|raise|return|try|while|with|yield)\\b/,\n  builtin: /\\b(?:__import__|abs|all|any|apply|ascii|basestring|bin|bool|buffer|bytearray|bytes|callable|chr|classmethod|cmp|coerce|compile|complex|delattr|dict|dir|divmod|enumerate|eval|execfile|file|filter|float|format|frozenset|getattr|globals|hasattr|hash|help|hex|id|input|int|intern|isinstance|issubclass|iter|len|list|locals|long|map|max|memoryview|min|next|object|oct|open|ord|pow|property|range|raw_input|reduce|reload|repr|reversed|round|set|setattr|slice|sorted|staticmethod|str|sum|super|tuple|type|unichr|unicode|vars|xrange|zip)\\b/,\n  boolean: /\\b(?:True|False|None)\\b/,\n  number: /(?:\\b(?=\\d)|\\B(?=\\.))(?:0[bo])?(?:(?:\\d|0x[\\da-f])[\\da-f]*\\.?\\d*|\\.\\d+)(?:e[+-]?\\d+)?j?\\b/i,\n  operator: /[-+%=]=?|!=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]|\\b(?:or|and|not)\\b/,\n  punctuation: /[{}[\\];(),.:]/\n}, Prism.languages.q = {\n  string: /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"/,\n  comment: [{\n    pattern: /([\\t )\\]}])\\/.*/,\n    lookbehind: !0,\n    greedy: !0\n  }, {\n    pattern: /(^|\\r?\\n|\\r)\\/[\\t ]*(?:(?:\\r?\\n|\\r)(?:.*(?:\\r?\\n|\\r))*?(?:\\\\(?=[\\t ]*(?:\\r?\\n|\\r))|$)|\\S.*)/,\n    lookbehind: !0,\n    greedy: !0\n  }, {\n    pattern: /^\\\\[\\t ]*(?:\\r?\\n|\\r)[\\s\\S]+/m,\n    greedy: !0\n  }, {\n    pattern: /^#!.+/m,\n    greedy: !0\n  }],\n  symbol: /`(?::\\S+|[\\w.]*)/,\n  datetime: {\n    pattern: /0N[mdzuvt]|0W[dtz]|\\d{4}\\.\\d\\d(?:m|\\.\\d\\d(?:T(?:\\d\\d(?::\\d\\d(?::\\d\\d(?:[.:]\\d\\d\\d)?)?)?)?)?[dz]?)|\\d\\d:\\d\\d(?::\\d\\d(?:[.:]\\d\\d\\d)?)?[uvt]?/,\n    alias: \"number\"\n  },\n  number: /\\b(?![01]:)(?:0[wn]|0W[hj]?|0N[hje]?|0x[\\da-fA-F]+|\\d+\\.?\\d*(?:e[+-]?\\d+)?[hjfeb]?)/,\n  keyword: /\\\\\\w+\\b|\\b(?:abs|acos|aj0?|all|and|any|asc|asin|asof|atan|attr|avgs?|binr?|by|ceiling|cols|cor|cos|count|cov|cross|csv|cut|delete|deltas|desc|dev|differ|distinct|div|do|dsave|ej|enlist|eval|except|exec|exit|exp|fby|fills|first|fkeys|flip|floor|from|get|getenv|group|gtime|hclose|hcount|hdel|hopen|hsym|iasc|identity|idesc|if|ij|in|insert|inter|inv|keys?|last|like|list|ljf?|load|log|lower|lsq|ltime|ltrim|mavg|maxs?|mcount|md5|mdev|med|meta|mins?|mmax|mmin|mmu|mod|msum|neg|next|not|null|or|over|parse|peach|pj|plist|prds?|prev|prior|rand|rank|ratios|raze|read0|read1|reciprocal|reval|reverse|rload|rotate|rsave|rtrim|save|scan|scov|sdev|select|set|setenv|show|signum|sin|sqrt|ssr?|string|sublist|sums?|sv|svar|system|tables|tan|til|trim|txf|type|uj|ungroup|union|update|upper|upsert|value|var|views?|vs|wavg|where|while|within|wj1?|wsum|ww|xasc|xbar|xcols?|xdesc|xexp|xgroup|xkey|xlog|xprev|xrank)\\b/,\n  adverb: {\n    pattern: /['\\/\\\\]:?|\\beach\\b/,\n    alias: \"function\"\n  },\n  verb: {\n    pattern: /(?:\\B\\.\\B|\\b[01]:|<[=>]?|>=?|[:+\\-*%,!?_~=|$&#@^]):?/,\n    alias: \"operator\"\n  },\n  punctuation: /[(){}\\[\\];.]/\n}, Prism.languages.qore = Prism.languages.extend(\"clike\", {\n  comment: {\n    pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|(?:\\/\\/|#).*)/,\n    lookbehind: !0\n  },\n  string: {\n    pattern: /(\"|')(\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\n    greedy: !0\n  },\n  variable: /\\$(?!\\d)\\w+\\b/,\n  keyword: /\\b(?:abstract|any|assert|binary|bool|boolean|break|byte|case|catch|char|class|code|const|continue|data|default|do|double|else|enum|extends|final|finally|float|for|goto|hash|if|implements|import|inherits|instanceof|int|interface|long|my|native|new|nothing|null|object|our|own|private|reference|rethrow|return|short|soft(?:int|float|number|bool|string|date|list)|static|strictfp|string|sub|super|switch|synchronized|this|throw|throws|transient|try|void|volatile|while)\\b/,\n  number: /\\b(?:0b[01]+|0x[\\da-f]*\\.?[\\da-fp\\-]+|\\d*\\.?\\d+e?\\d*[df]|\\d*\\.?\\d+)\\b/i,\n  boolean: /\\b(?:true|false)\\b/i,\n  operator: {\n    pattern: /(^|[^.])(?:\\+[+=]?|-[-=]?|[!=](?:==?|~)?|>>?=?|<(?:=>?|<=?)?|&[&=]?|\\|[|=]?|[*\\/%^]=?|[~?])/,\n    lookbehind: !0\n  },\n  function: /\\$?\\b(?!\\d)\\w+(?=\\()/\n}), Prism.languages.r = {\n  comment: /#.*/,\n  string: {\n    pattern: /(['\"])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: !0\n  },\n  \"percent-operator\": {\n    pattern: /%[^%\\s]*%/,\n    alias: \"operator\"\n  },\n  boolean: /\\b(?:TRUE|FALSE)\\b/,\n  ellipsis: /\\.\\.(?:\\.|\\d+)/,\n  number: [/\\b(?:NaN|Inf)\\b/, /(?:\\b0x[\\dA-Fa-f]+(?:\\.\\d*)?|\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[EePp][+-]?\\d+)?[iL]?/],\n  keyword: /\\b(?:if|else|repeat|while|function|for|in|next|break|NULL|NA|NA_integer_|NA_real_|NA_complex_|NA_character_)\\b/,\n  operator: /->?>?|<(?:=|<?-)?|[>=!]=?|::?|&&?|\\|\\|?|[+*\\/^$@~]/,\n  punctuation: /[(){}\\[\\],;]/\n}, Prism.languages.reason = Prism.languages.extend(\"clike\", {\n  comment: {\n    pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,\n    lookbehind: !0\n  },\n  string: {\n    pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n\"])*\"/,\n    greedy: !0\n  },\n  \"class-name\": /\\b[A-Z]\\w*/,\n  keyword: /\\b(?:and|as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|method|module|mutable|new|nonrec|object|of|open|or|private|rec|sig|struct|switch|then|to|try|type|val|virtual|when|while|with)\\b/,\n  operator: /\\.{3}|:[:=]|=(?:==?|>)?|<=?|>=?|[|^?'#!~`]|[+\\-*\\/]\\.?|\\b(?:mod|land|lor|lxor|lsl|lsr|asr)\\b/\n}), Prism.languages.insertBefore(\"reason\", \"class-name\", {\n  character: {\n    pattern: /'(?:\\\\x[\\da-f]{2}|\\\\o[0-3][0-7][0-7]|\\\\\\d{3}|\\\\.|[^'\\\\\\r\\n])'/,\n    alias: \"string\"\n  },\n  constructor: {\n    pattern: /\\b[A-Z]\\w*\\b(?!\\s*\\.)/,\n    alias: \"variable\"\n  },\n  label: {\n    pattern: /\\b[a-z]\\w*(?=::)/,\n    alias: \"symbol\"\n  }\n}), delete Prism.languages.reason.function, Prism.languages.renpy = {\n  comment: {\n    pattern: /(^|[^\\\\])#.+/,\n    lookbehind: !0\n  },\n  string: {\n    pattern: /(\"\"\"|''')[\\s\\S]+?\\1|(\"|')(?:\\\\.|(?!\\2)[^\\\\\\r\\n])*\\2|(?:^#?(?:(?:[0-9a-fA-F]{2}){3}|(?:[0-9a-fA-F]){3})$)/m,\n    greedy: !0\n  },\n  function: /[a-z_]\\w*(?=\\()/i,\n  property: /\\b(?:insensitive|idle|hover|selected_idle|selected_hover|background|position|alt|xpos|ypos|pos|xanchor|yanchor|anchor|xalign|yalign|align|xcenter|ycenter|xofsset|yoffset|ymaximum|maximum|xmaximum|xminimum|yminimum|minimum|xsize|ysizexysize|xfill|yfill|area|antialias|black_color|bold|caret|color|first_indent|font|size|italic|justify|kerning|language|layout|line_leading|line_overlap_split|line_spacing|min_width|newline_indent|outlines|rest_indent|ruby_style|slow_cps|slow_cps_multiplier|strikethrough|text_align|underline|hyperlink_functions|vertical|hinting|foreground|left_margin|xmargin|top_margin|bottom_margin|ymargin|left_padding|right_padding|xpadding|top_padding|bottom_padding|ypadding|size_group|child|hover_sound|activate_sound|mouse|focus_mask|keyboard_focus|bar_vertical|bar_invert|bar_resizing|left_gutter|right_gutter|top_gutter|bottom_gutter|left_bar|right_bar|top_bar|bottom_bar|thumb|thumb_shadow|thumb_offset|unscrollable|spacing|first_spacing|box_reverse|box_wrap|order_reverse|fit_first|ysize|thumbnail_width|thumbnail_height|help|text_ypos|text_xpos|idle_color|hover_color|selected_idle_color|selected_hover_color|insensitive_color|alpha|insensitive_background|hover_background|zorder|value|width|xadjustment|xanchoraround|xaround|xinitial|xoffset|xzoom|yadjustment|yanchoraround|yaround|yinitial|yzoom|zoom|ground|height|text_style|text_y_fudge|selected_insensitive|has_sound|has_music|has_voice|focus|hovered|image_style|length|minwidth|mousewheel|offset|prefix|radius|range|right_margin|rotate|rotate_pad|developer|screen_width|screen_height|window_title|name|version|windows_icon|default_fullscreen|default_text_cps|default_afm_time|main_menu_music|sample_sound|enter_sound|exit_sound|save_directory|enter_transition|exit_transition|intra_transition|main_game_transition|game_main_transition|end_splash_transition|end_game_transition|after_load_transition|window_show_transition|window_hide_transition|adv_nvl_transition|nvl_adv_transition|enter_yesno_transition|exit_yesno_transition|enter_replay_transition|exit_replay_transition|say_attribute_transition|directory_name|executable_name|include_update|window_icon|modal|google_play_key|google_play_salt|drag_name|drag_handle|draggable|dragged|droppable|dropped|narrator_menu|action|default_afm_enable|version_name|version_tuple|inside|fadeout|fadein|layers|layer_clipping|linear|scrollbars|side_xpos|side_ypos|side_spacing|edgescroll|drag_joined|drag_raise|drop_shadow|drop_shadow_color|subpixel|easein|easeout|time|crop|auto|update|get_installed_packages|can_update|UpdateVersion|Update|overlay_functions|translations|window_left_padding|show_side_image|show_two_window)\\b/,\n  tag: /\\b(?:label|image|menu|[hv]box|frame|text|imagemap|imagebutton|bar|vbar|screen|textbutton|buttoscreenn|fixed|grid|input|key|mousearea|side|timer|viewport|window|hotspot|hotbar|self|button|drag|draggroup|tag|mm_menu_frame|nvl|block|parallel)\\b|\\$/,\n  keyword: /\\b(?:as|assert|break|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|pass|print|raise|return|try|while|yield|adjustment|alignaround|allow|angle|around|box_layout|cache|changed|child_size|clicked|clipping|corner1|corner2|default|delay|exclude|scope|slow|slow_abortable|slow_done|sound|style_group|substitute|suffix|transform_anchor|transpose|unhovered|config|theme|mm_root|gm_root|rounded_window|build|disabled_text|disabled|widget_selected|widget_text|widget_hover|widget|updater|behind|call|expression|hide|init|jump|onlayer|python|renpy|scene|set|show|transform|play|queue|stop|pause|define|window|repeat|contains|choice|on|function|event|animation|clockwise|counterclockwise|circles|knot|null|None|random|has|add|use|fade|dissolve|style|store|id|voice|center|left|right|less_rounded|music|movie|clear|persistent|ui)\\b/,\n  boolean: /\\b(?:[Tt]rue|[Ff]alse)\\b/,\n  number: /(?:\\b(?:0[bo])?(?:(?:\\d|0x[\\da-f])[\\da-f]*\\.?\\d*)|\\B\\.\\d+)(?:e[+-]?\\d+)?j?/i,\n  operator: /[-+%=]=?|!=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]|\\b(?:or|and|not|with|at)\\b/,\n  punctuation: /[{}[\\];(),.:]/\n}, Prism.languages.rest = {\n  table: [{\n    pattern: /(\\s*)(?:\\+[=-]+)+\\+(?:\\r?\\n|\\r)(?:\\1(?:[+|].+)+[+|](?:\\r?\\n|\\r))+\\1(?:\\+[=-]+)+\\+/,\n    lookbehind: !0,\n    inside: {\n      punctuation: /\\||(?:\\+[=-]+)+\\+/\n    }\n  }, {\n    pattern: /(\\s*)(?:=+ +)+=+(?:(?:\\r?\\n|\\r)\\1.+)+(?:\\r?\\n|\\r)\\1(?:=+ +)+=+(?=(?:\\r?\\n|\\r){2}|\\s*$)/,\n    lookbehind: !0,\n    inside: {\n      punctuation: /[=-]+/\n    }\n  }],\n  \"substitution-def\": {\n    pattern: /(^\\s*\\.\\. )\\|(?:[^|\\s](?:[^|]*[^|\\s])?)\\| [^:]+::/m,\n    lookbehind: !0,\n    inside: {\n      substitution: {\n        pattern: /^\\|(?:[^|\\s]|[^|\\s][^|]*[^|\\s])\\|/,\n        alias: \"attr-value\",\n        inside: {\n          punctuation: /^\\||\\|$/\n        }\n      },\n      directive: {\n        pattern: /( +)[^:]+::/,\n        lookbehind: !0,\n        alias: \"function\",\n        inside: {\n          punctuation: /::$/\n        }\n      }\n    }\n  },\n  \"link-target\": [{\n    pattern: /(^\\s*\\.\\. )\\[[^\\]]+\\]/m,\n    lookbehind: !0,\n    alias: \"string\",\n    inside: {\n      punctuation: /^\\[|\\]$/\n    }\n  }, {\n    pattern: /(^\\s*\\.\\. )_(?:`[^`]+`|(?:[^:\\\\]|\\\\.)+):/m,\n    lookbehind: !0,\n    alias: \"string\",\n    inside: {\n      punctuation: /^_|:$/\n    }\n  }],\n  directive: {\n    pattern: /(^\\s*\\.\\. )[^:]+::/m,\n    lookbehind: !0,\n    alias: \"function\",\n    inside: {\n      punctuation: /::$/\n    }\n  },\n  comment: {\n    pattern: /(^\\s*\\.\\.)(?:(?: .+)?(?:(?:\\r?\\n|\\r).+)+| .+)(?=(?:\\r?\\n|\\r){2}|$)/m,\n    lookbehind: !0\n  },\n  title: [{\n    pattern: /^(([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])\\2+)(?:\\r?\\n|\\r).+(?:\\r?\\n|\\r)\\1$/m,\n    inside: {\n      punctuation: /^[!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]+|[!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]+$/,\n      important: /.+/\n    }\n  }, {\n    pattern: /(^|(?:\\r?\\n|\\r){2}).+(?:\\r?\\n|\\r)([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])\\2+(?=\\r?\\n|\\r|$)/,\n    lookbehind: !0,\n    inside: {\n      punctuation: /[!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]+$/,\n      important: /.+/\n    }\n  }],\n  hr: {\n    pattern: /((?:\\r?\\n|\\r){2})([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])\\2{3,}(?=(?:\\r?\\n|\\r){2})/,\n    lookbehind: !0,\n    alias: \"punctuation\"\n  },\n  field: {\n    pattern: /(^\\s*):[^:\\r\\n]+:(?= )/m,\n    lookbehind: !0,\n    alias: \"attr-name\"\n  },\n  \"command-line-option\": {\n    pattern: /(^\\s*)(?:[+-][a-z\\d]|(?:--|\\/)[a-z\\d-]+)(?:[ =](?:[a-z][\\w-]*|<[^<>]+>))?(?:, (?:[+-][a-z\\d]|(?:--|\\/)[a-z\\d-]+)(?:[ =](?:[a-z][\\w-]*|<[^<>]+>))?)*(?=(?:\\r?\\n|\\r)? {2,}\\S)/im,\n    lookbehind: !0,\n    alias: \"symbol\"\n  },\n  \"literal-block\": {\n    pattern: /::(?:\\r?\\n|\\r){2}([ \\t]+).+(?:(?:\\r?\\n|\\r)\\1.+)*/,\n    inside: {\n      \"literal-block-punctuation\": {\n        pattern: /^::/,\n        alias: \"punctuation\"\n      }\n    }\n  },\n  \"quoted-literal-block\": {\n    pattern: /::(?:\\r?\\n|\\r){2}([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]).*(?:(?:\\r?\\n|\\r)\\1.*)*/,\n    inside: {\n      \"literal-block-punctuation\": {\n        pattern: /^(?:::|([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])\\1*)/m,\n        alias: \"punctuation\"\n      }\n    }\n  },\n  \"list-bullet\": {\n    pattern: /(^\\s*)(?:[*+\\-•‣⁃]|\\(?(?:\\d+|[a-z]|[ivxdclm]+)\\)|(?:\\d+|[a-z]|[ivxdclm]+)\\.)(?= )/im,\n    lookbehind: !0,\n    alias: \"punctuation\"\n  },\n  \"doctest-block\": {\n    pattern: /(^\\s*)>>> .+(?:(?:\\r?\\n|\\r).+)*/m,\n    lookbehind: !0,\n    inside: {\n      punctuation: /^>>>/\n    }\n  },\n  inline: [{\n    pattern: /(^|[\\s\\-:\\/'\"<(\\[{])(?::[^:]+:`.*?`|`.*?`:[^:]+:|(\\*\\*?|``?|\\|)(?!\\s).*?[^\\s]\\2(?=[\\s\\-.,:;!?\\\\\\/'\")\\]}]|$))/m,\n    lookbehind: !0,\n    inside: {\n      bold: {\n        pattern: /(^\\*\\*).+(?=\\*\\*$)/,\n        lookbehind: !0\n      },\n      italic: {\n        pattern: /(^\\*).+(?=\\*$)/,\n        lookbehind: !0\n      },\n      \"inline-literal\": {\n        pattern: /(^``).+(?=``$)/,\n        lookbehind: !0,\n        alias: \"symbol\"\n      },\n      role: {\n        pattern: /^:[^:]+:|:[^:]+:$/,\n        alias: \"function\",\n        inside: {\n          punctuation: /^:|:$/\n        }\n      },\n      \"interpreted-text\": {\n        pattern: /(^`).+(?=`$)/,\n        lookbehind: !0,\n        alias: \"attr-value\"\n      },\n      substitution: {\n        pattern: /(^\\|).+(?=\\|$)/,\n        lookbehind: !0,\n        alias: \"attr-value\"\n      },\n      punctuation: /\\*\\*?|``?|\\|/\n    }\n  }],\n  link: [{\n    pattern: /\\[[^\\]]+\\]_(?=[\\s\\-.,:;!?\\\\\\/'\")\\]}]|$)/,\n    alias: \"string\",\n    inside: {\n      punctuation: /^\\[|\\]_$/\n    }\n  }, {\n    pattern: /(?:\\b[a-z\\d](?:[_.:+]?[a-z\\d]+)*_?_|`[^`]+`_?_|_`[^`]+`)(?=[\\s\\-.,:;!?\\\\\\/'\")\\]}]|$)/i,\n    alias: \"string\",\n    inside: {\n      punctuation: /^_?`|`$|`?_?_$/\n    }\n  }],\n  punctuation: {\n    pattern: /(^\\s*)(?:\\|(?= |$)|(?:---?|—|\\.\\.|__)(?= )|\\.\\.$)/m,\n    lookbehind: !0\n  }\n}, Prism.languages.rip = {\n  comment: /#.*/,\n  keyword: /(?:=>|->)|\\b(?:class|if|else|switch|case|return|exit|try|catch|finally|raise)\\b/,\n  builtin: /@|\\bSystem\\b/,\n  boolean: /\\b(?:true|false)\\b/,\n  date: /\\b\\d{4}-\\d{2}-\\d{2}\\b/,\n  time: /\\b\\d{2}:\\d{2}:\\d{2}\\b/,\n  datetime: /\\b\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\b/,\n  character: /\\B`[^\\s`'\",.:;#\\/\\\\()<>\\[\\]{}]\\b/,\n  regex: {\n    pattern: /(^|[^\\/])\\/(?!\\/)(\\[.+?]|\\\\.|[^\\/\\\\\\r\\n])+\\/(?=\\s*($|[\\r\\n,.;})]))/,\n    lookbehind: !0,\n    greedy: !0\n  },\n  symbol: /:[^\\d\\s`'\",.:;#\\/\\\\()<>\\[\\]{}][^\\s`'\",.:;#\\/\\\\()<>\\[\\]{}]*/,\n  string: {\n    pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: !0\n  },\n  number: /[+-]?(?:(?:\\d+\\.\\d+)|(?:\\d+))/,\n  punctuation: /(?:\\.{2,3})|[`,.:;=\\/\\\\()<>\\[\\]{}]/,\n  reference: /[^\\d\\s`'\",.:;#\\/\\\\()<>\\[\\]{}][^\\s`'\",.:;#\\/\\\\()<>\\[\\]{}]*/\n}, Prism.languages.roboconf = {\n  comment: /#.*/,\n  keyword: {\n    pattern: /(^|\\s)(?:(?:facet|instance of)(?=[ \\t]+[\\w-]+[ \\t]*\\{)|(?:external|import)\\b)/,\n    lookbehind: !0\n  },\n  component: {\n    pattern: /[\\w-]+(?=[ \\t]*\\{)/,\n    alias: \"variable\"\n  },\n  property: /[\\w.-]+(?=[ \\t]*:)/,\n  value: {\n    pattern: /(=[ \\t]*)[^,;]+/,\n    lookbehind: !0,\n    alias: \"attr-value\"\n  },\n  optional: {\n    pattern: /\\(optional\\)/,\n    alias: \"builtin\"\n  },\n  wildcard: {\n    pattern: /(\\.)\\*/,\n    lookbehind: !0,\n    alias: \"operator\"\n  },\n  punctuation: /[{},.;:=]/\n}, Prism.languages.rust = {\n  comment: [{\n    pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,\n    lookbehind: !0\n  }, {\n    pattern: /(^|[^\\\\:])\\/\\/.*/,\n    lookbehind: !0\n  }],\n  string: [{\n    pattern: /b?r(#*)\"(?:\\\\.|(?!\"\\1)[^\\\\\\r\\n])*\"\\1/,\n    greedy: !0\n  }, {\n    pattern: /b?\"(?:\\\\.|[^\\\\\\r\\n\"])*\"/,\n    greedy: !0\n  }],\n  char: {\n    pattern: /b?'(?:\\\\(?:x[0-7][\\da-fA-F]|u{(?:[\\da-fA-F]_*){1,6}|.)|[^\\\\\\r\\n\\t'])'/,\n    alias: \"string\"\n  },\n  \"lifetime-annotation\": {\n    pattern: /'[^\\s>']+/,\n    alias: \"symbol\"\n  },\n  keyword: /\\b(?:abstract|alignof|as|be|box|break|const|continue|crate|do|else|enum|extern|false|final|fn|for|if|impl|in|let|loop|match|mod|move|mut|offsetof|once|override|priv|pub|pure|ref|return|sizeof|static|self|struct|super|true|trait|type|typeof|unsafe|unsized|use|virtual|where|while|yield)\\b/,\n  attribute: {\n    pattern: /#!?\\[.+?\\]/,\n    greedy: !0,\n    alias: \"attr-name\"\n  },\n  function: [/\\w+(?=\\s*\\()/, /\\w+!(?=\\s*\\(|\\[)/],\n  \"macro-rules\": {\n    pattern: /\\w+!/,\n    alias: \"function\"\n  },\n  number: /\\b(?:0x[\\dA-Fa-f](?:_?[\\dA-Fa-f])*|0o[0-7](?:_?[0-7])*|0b[01](?:_?[01])*|(\\d(?:_?\\d)*)?\\.?\\d(?:_?\\d)*(?:[Ee][+-]?\\d+)?)(?:_?(?:[iu](?:8|16|32|64)?|f32|f64))?\\b/,\n  \"closure-params\": {\n    pattern: /\\|[^|]*\\|(?=\\s*[{-])/,\n    inside: {\n      punctuation: /[|:,]/,\n      operator: /[&*]/\n    }\n  },\n  punctuation: /[{}[\\];(),:]|\\.+|->/,\n  operator: /[-+*\\/%!^]=?|=[=>]?|@|&[&=]?|\\|[|=]?|<<?=?|>>?=?/\n}, Prism.languages.sas = {\n  datalines: {\n    pattern: /^\\s*(?:(?:data)?lines|cards);[\\s\\S]+?(?:\\r?\\n|\\r);/im,\n    alias: \"string\",\n    inside: {\n      keyword: {\n        pattern: /^(\\s*)(?:(?:data)?lines|cards)/i,\n        lookbehind: !0\n      },\n      punctuation: /;/\n    }\n  },\n  comment: [{\n    pattern: /(^\\s*|;\\s*)\\*.*;/m,\n    lookbehind: !0\n  }, /\\/\\*[\\s\\S]+?\\*\\//],\n  datetime: {\n    pattern: /'[^']+'(?:dt?|t)\\b/i,\n    alias: \"number\"\n  },\n  string: {\n    pattern: /([\"'])(?:\\1\\1|(?!\\1)[\\s\\S])*\\1/,\n    greedy: !0\n  },\n  keyword: /\\b(?:data|else|format|if|input|proc\\s\\w+|quit|run|then)\\b/i,\n  number: /\\b(?:[\\da-f]+x|\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?)/i,\n  operator: /\\*\\*?|\\|\\|?|!!?|¦¦?|<[>=]?|>[<=]?|[-+\\/=&]|[~¬^]=?|\\b(?:eq|ne|gt|lt|ge|le|in|not)\\b/i,\n  punctuation: /[$%@.(){}\\[\\];,\\\\]/\n}, function (e) {\n  e.languages.sass = e.languages.extend(\"css\", {\n    comment: {\n      pattern: /^([ \\t]*)\\/[\\/*].*(?:(?:\\r?\\n|\\r)\\1[ \\t]+.+)*/m,\n      lookbehind: !0\n    }\n  }), e.languages.insertBefore(\"sass\", \"atrule\", {\n    \"atrule-line\": {\n      pattern: /^(?:[ \\t]*)[@+=].+/m,\n      inside: {\n        atrule: /(?:@[\\w-]+|[+=])/m\n      }\n    }\n  }), delete e.languages.sass.atrule;\n  var t = /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/,\n      n = [/[+*\\/%]|[=!]=|<=?|>=?|\\b(?:and|or|not)\\b/, {\n    pattern: /(\\s+)-(?=\\s)/,\n    lookbehind: !0\n  }];\n  e.languages.insertBefore(\"sass\", \"property\", {\n    \"variable-line\": {\n      pattern: /^[ \\t]*\\$.+/m,\n      inside: {\n        punctuation: /:/,\n        variable: t,\n        operator: n\n      }\n    },\n    \"property-line\": {\n      pattern: /^[ \\t]*(?:[^:\\s]+ *:.*|:[^:\\s]+.*)/m,\n      inside: {\n        property: [/[^:\\s]+(?=\\s*:)/, {\n          pattern: /(:)[^:\\s]+/,\n          lookbehind: !0\n        }],\n        punctuation: /:/,\n        variable: t,\n        operator: n,\n        important: e.languages.sass.important\n      }\n    }\n  }), delete e.languages.sass.property, delete e.languages.sass.important, delete e.languages.sass.selector, e.languages.insertBefore(\"sass\", \"punctuation\", {\n    selector: {\n      pattern: /([ \\t]*)\\S(?:,?[^,\\r\\n]+)*(?:,(?:\\r?\\n|\\r)\\1[ \\t]+\\S(?:,?[^,\\r\\n]+)*)*/,\n      lookbehind: !0\n    }\n  });\n}(Prism), Prism.languages.scala = Prism.languages.extend(\"java\", {\n  keyword: /<-|=>|\\b(?:abstract|case|catch|class|def|do|else|extends|final|finally|for|forSome|if|implicit|import|lazy|match|new|null|object|override|package|private|protected|return|sealed|self|super|this|throw|trait|try|type|val|var|while|with|yield)\\b/,\n  string: [{\n    pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n    greedy: !0\n  }, {\n    pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: !0\n  }],\n  builtin: /\\b(?:String|Int|Long|Short|Byte|Boolean|Double|Float|Char|Any|AnyRef|AnyVal|Unit|Nothing)\\b/,\n  number: /\\b0x[\\da-f]*\\.?[\\da-f]+|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e\\d+)?[dfl]?/i,\n  symbol: /'[^\\d\\s\\\\]\\w*/\n}), delete Prism.languages.scala[\"class-name\"], delete Prism.languages.scala.function, Prism.languages.scheme = {\n  comment: /;.*/,\n  string: {\n    pattern: /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"|'[^('\\s]*/,\n    greedy: !0\n  },\n  keyword: {\n    pattern: /(\\()(?:define(?:-syntax|-library|-values)?|(?:case-)?lambda|let(?:\\*|rec)?(?:-values)?|else|if|cond|begin|delay(?:-force)?|parameterize|guard|set!|(?:quasi-)?quote|syntax-rules)/,\n    lookbehind: !0\n  },\n  builtin: {\n    pattern: /(\\()(?:(?:cons|car|cdr|list|call-with-current-continuation|call\\/cc|append|abs|apply|eval)\\b|null\\?|pair\\?|boolean\\?|eof-object\\?|char\\?|procedure\\?|number\\?|port\\?|string\\?|vector\\?|symbol\\?|bytevector\\?)/,\n    lookbehind: !0\n  },\n  number: {\n    pattern: /(\\s|[()])[-+]?\\d*\\.?\\d+(?:\\s*[-+]\\s*\\d*\\.?\\d+i)?\\b/,\n    lookbehind: !0\n  },\n  boolean: /#[tf]/,\n  operator: {\n    pattern: /(\\()(?:[-+*%\\/]|[<>]=?|=>?)/,\n    lookbehind: !0\n  },\n  function: {\n    pattern: /(\\()[^\\s()]*(?=\\s)/,\n    lookbehind: !0\n  },\n  punctuation: /[()]/\n}, Prism.languages.scss = Prism.languages.extend(\"css\", {\n  comment: {\n    pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n    lookbehind: !0\n  },\n  atrule: {\n    pattern: /@[\\w-]+(?:\\([^()]+\\)|[^(])*?(?=\\s+[{;])/,\n    inside: {\n      rule: /@[\\w-]+/\n    }\n  },\n  url: /(?:[-a-z]+-)*url(?=\\()/i,\n  selector: {\n    pattern: /(?=\\S)[^@;{}()]?(?:[^@;{}()]|&|#\\{\\$[-\\w]+\\})+(?=\\s*\\{(?:\\}|\\s|[^}]+[:{][^}]+))/m,\n    inside: {\n      parent: {\n        pattern: /&/,\n        alias: \"important\"\n      },\n      placeholder: /%[-\\w]+/,\n      variable: /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n    }\n  }\n}), Prism.languages.insertBefore(\"scss\", \"atrule\", {\n  keyword: [/@(?:if|else(?: if)?|for|each|while|import|extend|debug|warn|mixin|include|function|return|content)/i, {\n    pattern: /( +)(?:from|through)(?= )/,\n    lookbehind: !0\n  }]\n}), Prism.languages.scss.property = {\n  pattern: /(?:[\\w-]|\\$[-\\w]+|#\\{\\$[-\\w]+\\})+(?=\\s*:)/i,\n  inside: {\n    variable: /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n  }\n}, Prism.languages.insertBefore(\"scss\", \"important\", {\n  variable: /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n}), Prism.languages.insertBefore(\"scss\", \"function\", {\n  placeholder: {\n    pattern: /%[-\\w]+/,\n    alias: \"selector\"\n  },\n  statement: {\n    pattern: /\\B!(?:default|optional)\\b/i,\n    alias: \"keyword\"\n  },\n  boolean: /\\b(?:true|false)\\b/,\n  null: /\\bnull\\b/,\n  operator: {\n    pattern: /(\\s)(?:[-+*\\/%]|[=!]=|<=?|>=?|and|or|not)(?=\\s)/,\n    lookbehind: !0\n  }\n}), Prism.languages.scss.atrule.inside.rest = Prism.languages.scss, Prism.languages.smalltalk = {\n  comment: /\"(?:\"\"|[^\"])+\"/,\n  string: /'(?:''|[^'])+'/,\n  symbol: /#[\\da-z]+|#(?:-|([+\\/\\\\*~<>=@%|&?!])\\1?)|#(?=\\()/i,\n  \"block-arguments\": {\n    pattern: /(\\[\\s*):[^\\[|]*\\|/,\n    lookbehind: !0,\n    inside: {\n      variable: /:[\\da-z]+/i,\n      punctuation: /\\|/\n    }\n  },\n  \"temporary-variables\": {\n    pattern: /\\|[^|]+\\|/,\n    inside: {\n      variable: /[\\da-z]+/i,\n      punctuation: /\\|/\n    }\n  },\n  keyword: /\\b(?:nil|true|false|self|super|new)\\b/,\n  character: {\n    pattern: /\\$./,\n    alias: \"string\"\n  },\n  number: [/\\d+r-?[\\dA-Z]+(?:\\.[\\dA-Z]+)?(?:e-?\\d+)?/, /\\b\\d+(?:\\.\\d+)?(?:e-?\\d+)?/],\n  operator: /[<=]=?|:=|~[~=]|\\/\\/?|\\\\\\\\|>[>=]?|[!^+\\-*&|,@]/,\n  punctuation: /[.;:?\\[\\](){}]/\n}, function (e) {\n  e.languages.smarty = {\n    comment: /\\{\\*[\\s\\S]*?\\*\\}/,\n    delimiter: {\n      pattern: /^\\{|\\}$/i,\n      alias: \"punctuation\"\n    },\n    string: /([\"'])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    number: /\\b0x[\\dA-Fa-f]+|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee][-+]?\\d+)?/,\n    variable: [/\\$(?!\\d)\\w+/, /#(?!\\d)\\w+#/, {\n      pattern: /(\\.|->)(?!\\d)\\w+/,\n      lookbehind: !0\n    }, {\n      pattern: /(\\[)(?!\\d)\\w+(?=\\])/,\n      lookbehind: !0\n    }],\n    function: [{\n      pattern: /(\\|\\s*)@?(?!\\d)\\w+/,\n      lookbehind: !0\n    }, /^\\/?(?!\\d)\\w+/, /(?!\\d)\\w+(?=\\()/],\n    \"attr-name\": {\n      pattern: /\\w+\\s*=\\s*(?:(?!\\d)\\w+)?/,\n      inside: {\n        variable: {\n          pattern: /(=\\s*)(?!\\d)\\w+/,\n          lookbehind: !0\n        },\n        operator: /=/\n      }\n    },\n    punctuation: [/[\\[\\]().,:`]|->/],\n    operator: [/[+\\-*\\/%]|==?=?|[!<>]=?|&&|\\|\\|?/, /\\bis\\s+(?:not\\s+)?(?:div|even|odd)(?:\\s+by)?\\b/, /\\b(?:eq|neq?|gt|lt|gt?e|lt?e|not|mod|or|and)\\b/],\n    keyword: /\\b(?:false|off|on|no|true|yes)\\b/\n  }, e.languages.insertBefore(\"smarty\", \"tag\", {\n    \"smarty-comment\": {\n      pattern: /\\{\\*[\\s\\S]*?\\*\\}/,\n      alias: [\"smarty\", \"comment\"]\n    }\n  }), e.hooks.add(\"before-tokenize\", function (t) {\n    var n = !1;\n    e.languages[\"markup-templating\"].buildPlaceholders(t, \"smarty\", /\\{\\*[\\s\\S]*?\\*\\}|\\{[\\s\\S]+?\\}/g, function (e) {\n      return \"{/literal}\" === e && (n = !1), !n && (\"{literal}\" === e && (n = !0), !0);\n    });\n  }), e.hooks.add(\"after-tokenize\", function (t) {\n    e.languages[\"markup-templating\"].tokenizePlaceholders(t, \"smarty\");\n  });\n}(Prism), function (e) {\n  var t = /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      n = /\\b\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?\\b|\\b0x[\\dA-F]+\\b/;\n  e.languages.soy = {\n    comment: [/\\/\\*[\\s\\S]*?\\*\\//, {\n      pattern: /(\\s)\\/\\/.*/,\n      lookbehind: !0,\n      greedy: !0\n    }],\n    \"command-arg\": {\n      pattern: /({+\\/?\\s*(?:alias|call|delcall|delpackage|deltemplate|namespace|template)\\s+)\\.?[\\w.]+/,\n      lookbehind: !0,\n      alias: \"string\",\n      inside: {\n        punctuation: /\\./\n      }\n    },\n    parameter: {\n      pattern: /({+\\/?\\s*@?param\\??\\s+)\\.?[\\w.]+/,\n      lookbehind: !0,\n      alias: \"variable\"\n    },\n    keyword: [{\n      pattern: /({+\\/?[^\\S\\r\\n]*)(?:\\\\[nrt]|alias|call|case|css|default|delcall|delpackage|deltemplate|else(?:if)?|fallbackmsg|for(?:each)?|if(?:empty)?|lb|let|literal|msg|namespace|nil|@?param\\??|rb|sp|switch|template|xid)/,\n      lookbehind: !0\n    }, /\\b(?:any|as|attributes|bool|css|float|in|int|js|html|list|map|null|number|string|uri)\\b/],\n    delimiter: {\n      pattern: /^{+\\/?|\\/?}+$/,\n      alias: \"punctuation\"\n    },\n    property: /\\w+(?==)/,\n    variable: {\n      pattern: /\\$[^\\W\\d]\\w*(?:\\??(?:\\.\\w+|\\[[^\\]]+]))*/,\n      inside: {\n        string: {\n          pattern: t,\n          greedy: !0\n        },\n        number: n,\n        punctuation: /[\\[\\].?]/\n      }\n    },\n    string: {\n      pattern: t,\n      greedy: !0\n    },\n    function: [/\\w+(?=\\()/, {\n      pattern: /(\\|[^\\S\\r\\n]*)\\w+/,\n      lookbehind: !0\n    }],\n    boolean: /\\b(?:true|false)\\b/,\n    number: n,\n    operator: /\\?:?|<=?|>=?|==?|!=|[+*\\/%-]|\\b(?:and|not|or)\\b/,\n    punctuation: /[{}()\\[\\]|.,:]/\n  }, e.hooks.add(\"before-tokenize\", function (t) {\n    var n = !1;\n    e.languages[\"markup-templating\"].buildPlaceholders(t, \"soy\", /{{.+?}}|{.+?}|\\s\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//g, function (e) {\n      return \"{/literal}\" === e && (n = !1), !n && (\"{literal}\" === e && (n = !0), !0);\n    });\n  }), e.hooks.add(\"after-tokenize\", function (t) {\n    e.languages[\"markup-templating\"].tokenizePlaceholders(t, \"soy\");\n  });\n}(Prism), function (e) {\n  var t = {\n    url: /url\\(([\"']?).*?\\1\\)/i,\n    string: {\n      pattern: /(\"|')(?:(?!\\1)[^\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\\1/,\n      greedy: !0\n    },\n    interpolation: null,\n    func: null,\n    important: /\\B!(?:important|optional)\\b/i,\n    keyword: {\n      pattern: /(^|\\s+)(?:(?:if|else|for|return|unless)(?=\\s+|$)|@[\\w-]+)/,\n      lookbehind: !0\n    },\n    hexcode: /#[\\da-f]{3,6}/i,\n    number: /\\b\\d+(?:\\.\\d+)?%?/,\n    boolean: /\\b(?:true|false)\\b/,\n    operator: [/~|[+!\\/%<>?=]=?|[-:]=|\\*[*=]?|\\.+|&&|\\|\\||\\B-\\B|\\b(?:and|in|is(?: a| defined| not|nt)?|not|or)\\b/],\n    punctuation: /[{}()\\[\\];:,]/\n  };\n  t.interpolation = {\n    pattern: /\\{[^\\r\\n}:]+\\}/,\n    alias: \"variable\",\n    inside: {\n      delimiter: {\n        pattern: /^{|}$/,\n        alias: \"punctuation\"\n      },\n      rest: t\n    }\n  }, t.func = {\n    pattern: /[\\w-]+\\([^)]*\\).*/,\n    inside: {\n      function: /^[^(]+/,\n      rest: t\n    }\n  }, e.languages.stylus = {\n    comment: {\n      pattern: /(^|[^\\\\])(\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n      lookbehind: !0\n    },\n    \"atrule-declaration\": {\n      pattern: /(^\\s*)@.+/m,\n      lookbehind: !0,\n      inside: {\n        atrule: /^@[\\w-]+/,\n        rest: t\n      }\n    },\n    \"variable-declaration\": {\n      pattern: /(^[ \\t]*)[\\w$-]+\\s*.?=[ \\t]*(?:(?:\\{[^}]*\\}|.+)|$)/m,\n      lookbehind: !0,\n      inside: {\n        variable: /^\\S+/,\n        rest: t\n      }\n    },\n    statement: {\n      pattern: /(^[ \\t]*)(?:if|else|for|return|unless)[ \\t]+.+/m,\n      lookbehind: !0,\n      inside: {\n        keyword: /^\\S+/,\n        rest: t\n      }\n    },\n    \"property-declaration\": {\n      pattern: /((?:^|\\{)([ \\t]*))(?:[\\w-]|\\{[^}\\r\\n]+\\})+(?:\\s*:\\s*|[ \\t]+)[^{\\r\\n]*(?:;|[^{\\r\\n,](?=$)(?!(\\r?\\n|\\r)(?:\\{|\\2[ \\t]+)))/m,\n      lookbehind: !0,\n      inside: {\n        property: {\n          pattern: /^[^\\s:]+/,\n          inside: {\n            interpolation: t.interpolation\n          }\n        },\n        rest: t\n      }\n    },\n    selector: {\n      pattern: /(^[ \\t]*)(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\))?|\\{[^}\\r\\n]+\\})+)(?:(?:\\r?\\n|\\r)(?:\\1(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\))?|\\{[^}\\r\\n]+\\})+)))*(?:,$|\\{|(?=(?:\\r?\\n|\\r)(?:\\{|\\1[ \\t]+)))/m,\n      lookbehind: !0,\n      inside: {\n        interpolation: t.interpolation,\n        punctuation: /[{},]/\n      }\n    },\n    func: t.func,\n    string: t.string,\n    interpolation: t.interpolation,\n    punctuation: /[{}()\\[\\];:.]/\n  };\n}(Prism), Prism.languages.swift = Prism.languages.extend(\"clike\", {\n  string: {\n    pattern: /(\"|')(\\\\(?:\\((?:[^()]|\\([^)]+\\))+\\)|\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: !0,\n    inside: {\n      interpolation: {\n        pattern: /\\\\\\((?:[^()]|\\([^)]+\\))+\\)/,\n        inside: {\n          delimiter: {\n            pattern: /^\\\\\\(|\\)$/,\n            alias: \"variable\"\n          }\n        }\n      }\n    }\n  },\n  keyword: /\\b(?:as|associativity|break|case|catch|class|continue|convenience|default|defer|deinit|didSet|do|dynamic(?:Type)?|else|enum|extension|fallthrough|final|for|func|get|guard|if|import|in|infix|init|inout|internal|is|lazy|left|let|mutating|new|none|nonmutating|operator|optional|override|postfix|precedence|prefix|private|protocol|public|repeat|required|rethrows|return|right|safe|self|Self|set|static|struct|subscript|super|switch|throws?|try|Type|typealias|unowned|unsafe|var|weak|where|while|willSet|__(?:COLUMN__|FILE__|FUNCTION__|LINE__))\\b/,\n  number: /\\b(?:[\\d_]+(?:\\.[\\de_]+)?|0x[a-f0-9_]+(?:\\.[a-f0-9p_]+)?|0b[01_]+|0o[0-7_]+)\\b/i,\n  constant: /\\b(?:nil|[A-Z_]{2,}|k[A-Z][A-Za-z_]+)\\b/,\n  atrule: /@\\b(?:IB(?:Outlet|Designable|Action|Inspectable)|class_protocol|exported|noreturn|NS(?:Copying|Managed)|objc|UIApplicationMain|auto_closure)\\b/,\n  builtin: /\\b(?:[A-Z]\\S+|abs|advance|alignof(?:Value)?|assert|contains|count(?:Elements)?|debugPrint(?:ln)?|distance|drop(?:First|Last)|dump|enumerate|equal|filter|find|first|getVaList|indices|isEmpty|join|last|lexicographicalCompare|map|max(?:Element)?|min(?:Element)?|numericCast|overlaps|partition|print(?:ln)?|reduce|reflect|reverse|sizeof(?:Value)?|sort(?:ed)?|split|startsWith|stride(?:of(?:Value)?)?|suffix|swap|toDebugString|toString|transcode|underestimateCount|unsafeBitCast|with(?:ExtendedLifetime|Unsafe(?:MutablePointers?|Pointers?)|VaList))\\b/\n}), Prism.languages.swift.string.inside.interpolation.inside.rest = Prism.languages.swift, Prism.languages.tap = {\n  fail: /not ok[^#{\\n\\r]*/,\n  pass: /ok[^#{\\n\\r]*/,\n  pragma: /pragma [+-][a-z]+/,\n  bailout: /bail out!.*/i,\n  version: /TAP version \\d+/i,\n  plan: /\\d+\\.\\.\\d+(?: +#.*)?/,\n  subtest: {\n    pattern: /# Subtest(?:: .*)?/,\n    greedy: !0\n  },\n  punctuation: /[{}]/,\n  directive: /#.*/,\n  yamlish: {\n    pattern: /(^[^\\S\\r\\n]*)---(?:\\r\\n?|\\n)(?:.*(?:\\r\\n?|\\n))*?[^\\S\\r\\n]*\\.\\.\\.$/m,\n    lookbehind: !0,\n    inside: Prism.languages.yaml,\n    alias: \"language-yaml\"\n  }\n}, Prism.languages.tcl = {\n  comment: {\n    pattern: /(^|[^\\\\])#.*/,\n    lookbehind: !0\n  },\n  string: {\n    pattern: /\"(?:[^\"\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\"/,\n    greedy: !0\n  },\n  variable: [{\n    pattern: /(\\$)(?:::)?(?:[a-zA-Z0-9]+::)*\\w+/,\n    lookbehind: !0\n  }, {\n    pattern: /(\\$){[^}]+}/,\n    lookbehind: !0\n  }, {\n    pattern: /(^\\s*set[ \\t]+)(?:::)?(?:[a-zA-Z0-9]+::)*\\w+/m,\n    lookbehind: !0\n  }],\n  function: {\n    pattern: /(^\\s*proc[ \\t]+)[^\\s]+/m,\n    lookbehind: !0\n  },\n  builtin: [{\n    pattern: /(^\\s*)(?:proc|return|class|error|eval|exit|for|foreach|if|switch|while|break|continue)\\b/m,\n    lookbehind: !0\n  }, /\\b(?:elseif|else)\\b/],\n  scope: {\n    pattern: /(^\\s*)(?:global|upvar|variable)\\b/m,\n    lookbehind: !0,\n    alias: \"constant\"\n  },\n  keyword: {\n    pattern: /(^\\s*|\\[)(?:after|append|apply|array|auto_(?:execok|import|load|mkindex|qualify|reset)|automkindex_old|bgerror|binary|catch|cd|chan|clock|close|concat|dde|dict|encoding|eof|exec|expr|fblocked|fconfigure|fcopy|file(?:event|name)?|flush|gets|glob|history|http|incr|info|interp|join|lappend|lassign|lindex|linsert|list|llength|load|lrange|lrepeat|lreplace|lreverse|lsearch|lset|lsort|math(?:func|op)|memory|msgcat|namespace|open|package|parray|pid|pkg_mkIndex|platform|puts|pwd|re_syntax|read|refchan|regexp|registry|regsub|rename|Safe_Base|scan|seek|set|socket|source|split|string|subst|Tcl|tcl(?:_endOfWord|_findLibrary|startOf(?:Next|Previous)Word|wordBreak(?:After|Before)|test|vars)|tell|time|tm|trace|unknown|unload|unset|update|uplevel|vwait)\\b/m,\n    lookbehind: !0\n  },\n  operator: /!=?|\\*\\*?|==|&&?|\\|\\|?|<[=<]?|>[=>]?|[-+~\\/%?^]|\\b(?:eq|ne|in|ni)\\b/,\n  punctuation: /[{}()\\[\\]]/\n}, function (e) {\n  var t = \"(?:\\\\([^|)]+\\\\)|\\\\[[^\\\\]]+\\\\]|\\\\{[^}]+\\\\})+\",\n      n = {\n    css: {\n      pattern: /\\{[^}]+\\}/,\n      inside: {\n        rest: e.languages.css\n      }\n    },\n    \"class-id\": {\n      pattern: /(\\()[^)]+(?=\\))/,\n      lookbehind: !0,\n      alias: \"attr-value\"\n    },\n    lang: {\n      pattern: /(\\[)[^\\]]+(?=\\])/,\n      lookbehind: !0,\n      alias: \"attr-value\"\n    },\n    punctuation: /[\\\\\\/]\\d+|\\S/\n  };\n  e.languages.textile = e.languages.extend(\"markup\", {\n    phrase: {\n      pattern: /(^|\\r|\\n)\\S[\\s\\S]*?(?=$|\\r?\\n\\r?\\n|\\r\\r)/,\n      lookbehind: !0,\n      inside: {\n        \"block-tag\": {\n          pattern: RegExp(\"^[a-z]\\\\w*(?:\" + t + \"|[<>=()])*\\\\.\"),\n          inside: {\n            modifier: {\n              pattern: RegExp(\"(^[a-z]\\\\w*)(?:\" + t + \"|[<>=()])+(?=\\\\.)\"),\n              lookbehind: !0,\n              inside: n\n            },\n            tag: /^[a-z]\\w*/,\n            punctuation: /\\.$/\n          }\n        },\n        list: {\n          pattern: RegExp(\"^[*#]+(?:\" + t + \")?\\\\s+.+\", \"m\"),\n          inside: {\n            modifier: {\n              pattern: RegExp(\"(^[*#]+)\" + t),\n              lookbehind: !0,\n              inside: n\n            },\n            punctuation: /^[*#]+/\n          }\n        },\n        table: {\n          pattern: RegExp(\"^(?:(?:\" + t + \"|[<>=()^~])+\\\\.\\\\s*)?(?:\\\\|(?:(?:\" + t + \"|[<>=()^~_]|[\\\\\\\\/]\\\\d+)+\\\\.)?[^|]*)+\\\\|\", \"m\"),\n          inside: {\n            modifier: {\n              pattern: RegExp(\"(^|\\\\|(?:\\\\r?\\\\n|\\\\r)?)(?:\" + t + \"|[<>=()^~_]|[\\\\\\\\/]\\\\d+)+(?=\\\\.)\"),\n              lookbehind: !0,\n              inside: n\n            },\n            punctuation: /\\||^\\./\n          }\n        },\n        inline: {\n          pattern: RegExp(\"(\\\\*\\\\*|__|\\\\?\\\\?|[*_%@+\\\\-^~])(?:\" + t + \")?.+?\\\\1\"),\n          inside: {\n            bold: {\n              pattern: RegExp(\"(^(\\\\*\\\\*?)(?:\" + t + \")?).+?(?=\\\\2)\"),\n              lookbehind: !0\n            },\n            italic: {\n              pattern: RegExp(\"(^(__?)(?:\" + t + \")?).+?(?=\\\\2)\"),\n              lookbehind: !0\n            },\n            cite: {\n              pattern: RegExp(\"(^\\\\?\\\\?(?:\" + t + \")?).+?(?=\\\\?\\\\?)\"),\n              lookbehind: !0,\n              alias: \"string\"\n            },\n            code: {\n              pattern: RegExp(\"(^@(?:\" + t + \")?).+?(?=@)\"),\n              lookbehind: !0,\n              alias: \"keyword\"\n            },\n            inserted: {\n              pattern: RegExp(\"(^\\\\+(?:\" + t + \")?).+?(?=\\\\+)\"),\n              lookbehind: !0\n            },\n            deleted: {\n              pattern: RegExp(\"(^-(?:\" + t + \")?).+?(?=-)\"),\n              lookbehind: !0\n            },\n            span: {\n              pattern: RegExp(\"(^%(?:\" + t + \")?).+?(?=%)\"),\n              lookbehind: !0\n            },\n            modifier: {\n              pattern: RegExp(\"(^\\\\*\\\\*|__|\\\\?\\\\?|[*_%@+\\\\-^~])\" + t),\n              lookbehind: !0,\n              inside: n\n            },\n            punctuation: /[*_%?@+\\-^~]+/\n          }\n        },\n        \"link-ref\": {\n          pattern: /^\\[[^\\]]+\\]\\S+$/m,\n          inside: {\n            string: {\n              pattern: /(\\[)[^\\]]+(?=\\])/,\n              lookbehind: !0\n            },\n            url: {\n              pattern: /(\\])\\S+$/,\n              lookbehind: !0\n            },\n            punctuation: /[\\[\\]]/\n          }\n        },\n        link: {\n          pattern: RegExp('\"(?:' + t + ')?[^\"]+\":.+?(?=[^\\\\w/]?(?:\\\\s|$))'),\n          inside: {\n            text: {\n              pattern: RegExp('(^\"(?:' + t + ')?)[^\"]+(?=\")'),\n              lookbehind: !0\n            },\n            modifier: {\n              pattern: RegExp('(^\")' + t),\n              lookbehind: !0,\n              inside: n\n            },\n            url: {\n              pattern: /(:).+/,\n              lookbehind: !0\n            },\n            punctuation: /[\":]/\n          }\n        },\n        image: {\n          pattern: RegExp(\"!(?:\" + t + \"|[<>=()])*[^!\\\\s()]+(?:\\\\([^)]+\\\\))?!(?::.+?(?=[^\\\\w/]?(?:\\\\s|$)))?\"),\n          inside: {\n            source: {\n              pattern: RegExp(\"(^!(?:\" + t + \"|[<>=()])*)[^!\\\\s()]+(?:\\\\([^)]+\\\\))?(?=!)\"),\n              lookbehind: !0,\n              alias: \"url\"\n            },\n            modifier: {\n              pattern: RegExp(\"(^!)(?:\" + t + \"|[<>=()])+\"),\n              lookbehind: !0,\n              inside: n\n            },\n            url: {\n              pattern: /(:).+/,\n              lookbehind: !0\n            },\n            punctuation: /[!:]/\n          }\n        },\n        footnote: {\n          pattern: /\\b\\[\\d+\\]/,\n          alias: \"comment\",\n          inside: {\n            punctuation: /\\[|\\]/\n          }\n        },\n        acronym: {\n          pattern: /\\b[A-Z\\d]+\\([^)]+\\)/,\n          inside: {\n            comment: {\n              pattern: /(\\()[^)]+(?=\\))/,\n              lookbehind: !0\n            },\n            punctuation: /[()]/\n          }\n        },\n        mark: {\n          pattern: /\\b\\((?:TM|R|C)\\)/,\n          alias: \"comment\",\n          inside: {\n            punctuation: /[()]/\n          }\n        }\n      }\n    }\n  });\n  var a = {\n    inline: e.languages.textile.phrase.inside.inline,\n    link: e.languages.textile.phrase.inside.link,\n    image: e.languages.textile.phrase.inside.image,\n    footnote: e.languages.textile.phrase.inside.footnote,\n    acronym: e.languages.textile.phrase.inside.acronym,\n    mark: e.languages.textile.phrase.inside.mark\n  };\n  e.languages.textile.tag.pattern = /<\\/?(?!\\d)[a-z0-9]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+))?)*\\s*\\/?>/i, e.languages.textile.phrase.inside.inline.inside.bold.inside = a, e.languages.textile.phrase.inside.inline.inside.italic.inside = a, e.languages.textile.phrase.inside.inline.inside.inserted.inside = a, e.languages.textile.phrase.inside.inline.inside.deleted.inside = a, e.languages.textile.phrase.inside.inline.inside.span.inside = a, e.languages.textile.phrase.inside.table.inside.inline = a.inline, e.languages.textile.phrase.inside.table.inside.link = a.link, e.languages.textile.phrase.inside.table.inside.image = a.image, e.languages.textile.phrase.inside.table.inside.footnote = a.footnote, e.languages.textile.phrase.inside.table.inside.acronym = a.acronym, e.languages.textile.phrase.inside.table.inside.mark = a.mark;\n}(Prism);\nvar typescript = Prism.util.clone(Prism.languages.typescript);\nPrism.languages.tsx = Prism.languages.extend(\"jsx\", typescript), function (e) {\n  e.languages.tt2 = e.languages.extend(\"clike\", {\n    comment: {\n      pattern: /#.*|\\[%#[\\s\\S]*?%\\]/,\n      lookbehind: !0\n    },\n    keyword: /\\b(?:BLOCK|CALL|CASE|CATCH|CLEAR|DEBUG|DEFAULT|ELSE|ELSIF|END|FILTER|FINAL|FOREACH|GET|IF|IN|INCLUDE|INSERT|LAST|MACRO|META|NEXT|PERL|PROCESS|RAWPERL|RETURN|SET|STOP|TAGS|THROW|TRY|SWITCH|UNLESS|USE|WHILE|WRAPPER)\\b/,\n    punctuation: /[[\\]{},()]/\n  }), delete e.languages.tt2.operator, delete e.languages.tt2.variable, e.languages.insertBefore(\"tt2\", \"number\", {\n    operator: /=[>=]?|!=?|<=?|>=?|&&|\\|\\|?|\\b(?:and|or|not)\\b/,\n    variable: {\n      pattern: /[a-z]\\w*(?:\\s*\\.\\s*(?:\\d+|\\$?[a-z]\\w*))*/i\n    }\n  }), delete e.languages.tt2.delimiter, e.languages.insertBefore(\"tt2\", \"keyword\", {\n    delimiter: {\n      pattern: /^(?:\\[%|%%)-?|-?%]$/,\n      alias: \"punctuation\"\n    }\n  }), e.languages.insertBefore(\"tt2\", \"string\", {\n    \"single-quoted-string\": {\n      pattern: /'[^\\\\']*(?:\\\\[\\s\\S][^\\\\']*)*'/,\n      greedy: !0,\n      alias: \"string\"\n    },\n    \"double-quoted-string\": {\n      pattern: /\"[^\\\\\"]*(?:\\\\[\\s\\S][^\\\\\"]*)*\"/,\n      greedy: !0,\n      alias: \"string\",\n      inside: {\n        variable: {\n          pattern: /\\$(?:[a-z]\\w*(?:\\.(?:\\d+|\\$?[a-z]\\w*))*)/i\n        }\n      }\n    }\n  }), delete e.languages.tt2.string, e.hooks.add(\"before-tokenize\", function (t) {\n    e.languages[\"markup-templating\"].buildPlaceholders(t, \"tt2\", /\\[%[\\s\\S]+?%\\]/g);\n  }), e.hooks.add(\"after-tokenize\", function (t) {\n    e.languages[\"markup-templating\"].tokenizePlaceholders(t, \"tt2\");\n  });\n}(Prism), Prism.languages.twig = {\n  comment: /\\{#[\\s\\S]*?#\\}/,\n  tag: {\n    pattern: /\\{\\{[\\s\\S]*?\\}\\}|\\{%[\\s\\S]*?%\\}/,\n    inside: {\n      ld: {\n        pattern: /^(?:\\{\\{-?|\\{%-?\\s*\\w+)/,\n        inside: {\n          punctuation: /^(?:\\{\\{|\\{%)-?/,\n          keyword: /\\w+/\n        }\n      },\n      rd: {\n        pattern: /-?(?:%\\}|\\}\\})$/,\n        inside: {\n          punctuation: /.*/\n        }\n      },\n      string: {\n        pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n        inside: {\n          punctuation: /^['\"]|['\"]$/\n        }\n      },\n      keyword: /\\b(?:even|if|odd)\\b/,\n      boolean: /\\b(?:true|false|null)\\b/,\n      number: /\\b0x[\\dA-Fa-f]+|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee][-+]?\\d+)?/,\n      operator: [{\n        pattern: /(\\s)(?:and|b-and|b-xor|b-or|ends with|in|is|matches|not|or|same as|starts with)(?=\\s)/,\n        lookbehind: !0\n      }, /[=<>]=?|!=|\\*\\*?|\\/\\/?|\\?:?|[-+~%|]/],\n      property: /\\b[a-zA-Z_]\\w*\\b/,\n      punctuation: /[()\\[\\]{}:.,]/\n    }\n  },\n  other: {\n    pattern: /\\S(?:[\\s\\S]*\\S)?/,\n    inside: Prism.languages.markup\n  }\n}, Prism.languages.typescript = Prism.languages.extend(\"javascript\", {\n  keyword: /\\b(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|var|void|while|with|yield|module|declare|constructor|namespace|abstract|require|type)\\b/,\n  builtin: /\\b(?:string|Function|any|number|boolean|Array|symbol|console)\\b/\n}), Prism.languages.ts = Prism.languages.typescript, function (e) {\n  e.languages.velocity = e.languages.extend(\"markup\", {});\n  var t = {\n    variable: {\n      pattern: /(^|[^\\\\](?:\\\\\\\\)*)\\$!?(?:[a-z][\\w-]*(?:\\([^)]*\\))?(?:\\.[a-z][\\w-]*(?:\\([^)]*\\))?|\\[[^\\]]+])*|{[^}]+})/i,\n      lookbehind: !0,\n      inside: {}\n    },\n    string: {\n      pattern: /\"[^\"]*\"|'[^']*'/,\n      greedy: !0\n    },\n    number: /\\b\\d+\\b/,\n    boolean: /\\b(?:true|false)\\b/,\n    operator: /[=!<>]=?|[+*\\/%-]|&&|\\|\\||\\.\\.|\\b(?:eq|g[et]|l[et]|n(?:e|ot))\\b/,\n    punctuation: /[(){}[\\]:,.]/\n  };\n  t.variable.inside = {\n    string: t.string,\n    function: {\n      pattern: /([^\\w-])[a-z][\\w-]*(?=\\()/,\n      lookbehind: !0\n    },\n    number: t.number,\n    boolean: t.boolean,\n    punctuation: t.punctuation\n  }, e.languages.insertBefore(\"velocity\", \"comment\", {\n    unparsed: {\n      pattern: /(^|[^\\\\])#\\[\\[[\\s\\S]*?]]#/,\n      lookbehind: !0,\n      greedy: !0,\n      inside: {\n        punctuation: /^#\\[\\[|]]#$/\n      }\n    },\n    \"velocity-comment\": [{\n      pattern: /(^|[^\\\\])#\\*[\\s\\S]*?\\*#/,\n      lookbehind: !0,\n      greedy: !0,\n      alias: \"comment\"\n    }, {\n      pattern: /(^|[^\\\\])##.*/,\n      lookbehind: !0,\n      greedy: !0,\n      alias: \"comment\"\n    }],\n    directive: {\n      pattern: /(^|[^\\\\](?:\\\\\\\\)*)#@?(?:[a-z][\\w-]*|{[a-z][\\w-]*})(?:\\s*\\((?:[^()]|\\([^()]*\\))*\\))?/i,\n      lookbehind: !0,\n      inside: {\n        keyword: {\n          pattern: /^#@?(?:[a-z][\\w-]*|{[a-z][\\w-]*})|\\bin\\b/,\n          inside: {\n            punctuation: /[{}]/\n          }\n        },\n        rest: t\n      }\n    },\n    variable: t.variable\n  }), e.languages.velocity.tag.inside[\"attr-value\"].inside.rest = e.languages.velocity;\n}(Prism), Prism.languages.verilog = {\n  comment: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\n  string: {\n    pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/,\n    greedy: !0\n  },\n  property: /\\B\\$\\w+\\b/,\n  constant: /\\B`\\w+\\b/,\n  function: /\\w+(?=\\()/,\n  keyword: /\\b(?:alias|and|assert|assign|assume|automatic|before|begin|bind|bins|binsof|bit|break|buf|bufif0|bufif1|byte|class|case|casex|casez|cell|chandle|clocking|cmos|config|const|constraint|context|continue|cover|covergroup|coverpoint|cross|deassign|default|defparam|design|disable|dist|do|edge|else|end|endcase|endclass|endclocking|endconfig|endfunction|endgenerate|endgroup|endinterface|endmodule|endpackage|endprimitive|endprogram|endproperty|endspecify|endsequence|endtable|endtask|enum|event|expect|export|extends|extern|final|first_match|for|force|foreach|forever|fork|forkjoin|function|generate|genvar|highz0|highz1|if|iff|ifnone|ignore_bins|illegal_bins|import|incdir|include|initial|inout|input|inside|instance|int|integer|interface|intersect|join|join_any|join_none|large|liblist|library|local|localparam|logic|longint|macromodule|matches|medium|modport|module|nand|negedge|new|nmos|nor|noshowcancelled|not|notif0|notif1|null|or|output|package|packed|parameter|pmos|posedge|primitive|priority|program|property|protected|pull0|pull1|pulldown|pullup|pulsestyle_onevent|pulsestyle_ondetect|pure|rand|randc|randcase|randsequence|rcmos|real|realtime|ref|reg|release|repeat|return|rnmos|rpmos|rtran|rtranif0|rtranif1|scalared|sequence|shortint|shortreal|showcancelled|signed|small|solve|specify|specparam|static|string|strong0|strong1|struct|super|supply0|supply1|table|tagged|task|this|throughout|time|timeprecision|timeunit|tran|tranif0|tranif1|tri|tri0|tri1|triand|trior|trireg|type|typedef|union|unique|unsigned|use|uwire|var|vectored|virtual|void|wait|wait_order|wand|weak0|weak1|while|wildcard|wire|with|within|wor|xnor|xor)\\b/,\n  important: /\\b(?:always_latch|always_comb|always_ff|always)\\b ?@?/,\n  number: /\\B##?\\d+|(?:\\b\\d+)?'[odbh] ?[\\da-fzx_?]+|\\b\\d*[._]?\\d+(?:e[-+]?\\d+)?/i,\n  operator: /[-+{}^~%*\\/?=!<>&|]+/,\n  punctuation: /[[\\];(),.:]/\n}, Prism.languages.vhdl = {\n  comment: /--.+/,\n  \"vhdl-vectors\": {\n    pattern: /\\b[oxb]\"[\\da-f_]+\"|\"[01uxzwlh-]+\"/i,\n    alias: \"number\"\n  },\n  \"quoted-function\": {\n    pattern: /\"\\S+?\"(?=\\()/,\n    alias: \"function\"\n  },\n  string: /\"(?:[^\\\\\"\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\"/,\n  constant: /\\b(?:use|library)\\b/i,\n  keyword: /\\b(?:'active|'ascending|'base|'delayed|'driving|'driving_value|'event|'high|'image|'instance_name|'last_active|'last_event|'last_value|'left|'leftof|'length|'low|'path_name|'pos|'pred|'quiet|'range|'reverse_range|'right|'rightof|'simple_name|'stable|'succ|'transaction|'val|'value|access|after|alias|all|architecture|array|assert|attribute|begin|block|body|buffer|bus|case|component|configuration|constant|disconnect|downto|else|elsif|end|entity|exit|file|for|function|generate|generic|group|guarded|if|impure|in|inertial|inout|is|label|library|linkage|literal|loop|map|new|next|null|of|on|open|others|out|package|port|postponed|procedure|process|pure|range|record|register|reject|report|return|select|severity|shared|signal|subtype|then|to|transport|type|unaffected|units|until|use|variable|wait|when|while|with)\\b/i,\n  boolean: /\\b(?:true|false)\\b/i,\n  function: /\\w+(?=\\()/,\n  number: /'[01uxzwlh-]'|\\b(?:\\d+#[\\da-f_.]+#|\\d[\\d_.]*)(?:e[-+]?\\d+)?/i,\n  operator: /[<>]=?|:=|[-+*\\/&=]|\\b(?:abs|not|mod|rem|sll|srl|sla|sra|rol|ror|and|or|nand|xnor|xor|nor)\\b/i,\n  punctuation: /[{}[\\];(),.:]/\n}, Prism.languages.vim = {\n  string: /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"|'(?:[^'\\r\\n]|'')*'/,\n  comment: /\".*/,\n  function: /\\w+(?=\\()/,\n  keyword: /\\b(?:ab|abbreviate|abc|abclear|abo|aboveleft|al|all|arga|argadd|argd|argdelete|argdo|arge|argedit|argg|argglobal|argl|arglocal|ar|args|argu|argument|as|ascii|bad|badd|ba|ball|bd|bdelete|be|bel|belowright|bf|bfirst|bl|blast|bm|bmodified|bn|bnext|bN|bNext|bo|botright|bp|bprevious|brea|break|breaka|breakadd|breakd|breakdel|breakl|breaklist|br|brewind|bro|browse|bufdo|b|buffer|buffers|bun|bunload|bw|bwipeout|ca|cabbrev|cabc|cabclear|caddb|caddbuffer|cad|caddexpr|caddf|caddfile|cal|call|cat|catch|cb|cbuffer|cc|ccl|cclose|cd|ce|center|cex|cexpr|cf|cfile|cfir|cfirst|cgetb|cgetbuffer|cgete|cgetexpr|cg|cgetfile|c|change|changes|chd|chdir|che|checkpath|checkt|checktime|cla|clast|cl|clist|clo|close|cmapc|cmapclear|cnew|cnewer|cn|cnext|cN|cNext|cnf|cnfile|cNfcNfile|cnorea|cnoreabbrev|col|colder|colo|colorscheme|comc|comclear|comp|compiler|conf|confirm|con|continue|cope|copen|co|copy|cpf|cpfile|cp|cprevious|cq|cquit|cr|crewind|cuna|cunabbrev|cu|cunmap|cw|cwindow|debugg|debuggreedy|delc|delcommand|d|delete|delf|delfunction|delm|delmarks|diffg|diffget|diffoff|diffpatch|diffpu|diffput|diffsplit|diffthis|diffu|diffupdate|dig|digraphs|di|display|dj|djump|dl|dlist|dr|drop|ds|dsearch|dsp|dsplit|earlier|echoe|echoerr|echom|echomsg|echon|e|edit|el|else|elsei|elseif|em|emenu|endfo|endfor|endf|endfunction|endfun|en|endif|endt|endtry|endw|endwhile|ene|enew|ex|exi|exit|exu|exusage|f|file|files|filetype|fina|finally|fin|find|fini|finish|fir|first|fix|fixdel|fo|fold|foldc|foldclose|folddoc|folddoclosed|foldd|folddoopen|foldo|foldopen|for|fu|fun|function|go|goto|gr|grep|grepa|grepadd|ha|hardcopy|h|help|helpf|helpfind|helpg|helpgrep|helpt|helptags|hid|hide|his|history|ia|iabbrev|iabc|iabclear|if|ij|ijump|il|ilist|imapc|imapclear|in|inorea|inoreabbrev|isearch|isp|isplit|iuna|iunabbrev|iu|iunmap|j|join|ju|jumps|k|keepalt|keepj|keepjumps|kee|keepmarks|laddb|laddbuffer|lad|laddexpr|laddf|laddfile|lan|language|la|last|later|lb|lbuffer|lc|lcd|lch|lchdir|lcl|lclose|let|left|lefta|leftabove|lex|lexpr|lf|lfile|lfir|lfirst|lgetb|lgetbuffer|lgete|lgetexpr|lg|lgetfile|lgr|lgrep|lgrepa|lgrepadd|lh|lhelpgrep|l|list|ll|lla|llast|lli|llist|lmak|lmake|lm|lmap|lmapc|lmapclear|lnew|lnewer|lne|lnext|lN|lNext|lnf|lnfile|lNf|lNfile|ln|lnoremap|lo|loadview|loc|lockmarks|lockv|lockvar|lol|lolder|lop|lopen|lpf|lpfile|lp|lprevious|lr|lrewind|ls|lt|ltag|lu|lunmap|lv|lvimgrep|lvimgrepa|lvimgrepadd|lw|lwindow|mak|make|ma|mark|marks|mat|match|menut|menutranslate|mk|mkexrc|mks|mksession|mksp|mkspell|mkvie|mkview|mkv|mkvimrc|mod|mode|m|move|mzf|mzfile|mz|mzscheme|nbkey|new|n|next|N|Next|nmapc|nmapclear|noh|nohlsearch|norea|noreabbrev|nu|number|nun|nunmap|omapc|omapclear|on|only|o|open|opt|options|ou|ounmap|pc|pclose|ped|pedit|pe|perl|perld|perldo|po|pop|popu|popup|pp|ppop|pre|preserve|prev|previous|p|print|P|Print|profd|profdel|prof|profile|promptf|promptfind|promptr|promptrepl|ps|psearch|pta|ptag|ptf|ptfirst|ptj|ptjump|ptl|ptlast|ptn|ptnext|ptN|ptNext|ptp|ptprevious|ptr|ptrewind|pts|ptselect|pu|put|pw|pwd|pyf|pyfile|py|python|qa|qall|q|quit|quita|quitall|r|read|rec|recover|redi|redir|red|redo|redr|redraw|redraws|redrawstatus|reg|registers|res|resize|ret|retab|retu|return|rew|rewind|ri|right|rightb|rightbelow|rub|ruby|rubyd|rubydo|rubyf|rubyfile|ru|runtime|rv|rviminfo|sal|sall|san|sandbox|sa|sargument|sav|saveas|sba|sball|sbf|sbfirst|sbl|sblast|sbm|sbmodified|sbn|sbnext|sbN|sbNext|sbp|sbprevious|sbr|sbrewind|sb|sbuffer|scripte|scriptencoding|scrip|scriptnames|se|set|setf|setfiletype|setg|setglobal|setl|setlocal|sf|sfind|sfir|sfirst|sh|shell|sign|sil|silent|sim|simalt|sla|slast|sl|sleep|sm|smagic|sm|smap|smapc|smapclear|sme|smenu|sn|snext|sN|sNext|sni|sniff|sno|snomagic|snor|snoremap|snoreme|snoremenu|sor|sort|so|source|spelld|spelldump|spe|spellgood|spelli|spellinfo|spellr|spellrepall|spellu|spellundo|spellw|spellwrong|sp|split|spr|sprevious|sre|srewind|sta|stag|startg|startgreplace|star|startinsert|startr|startreplace|stj|stjump|st|stop|stopi|stopinsert|sts|stselect|sun|sunhide|sunm|sunmap|sus|suspend|sv|sview|syncbind|t|tab|tabc|tabclose|tabd|tabdo|tabe|tabedit|tabf|tabfind|tabfir|tabfirst|tabl|tablast|tabm|tabmove|tabnew|tabn|tabnext|tabN|tabNext|tabo|tabonly|tabp|tabprevious|tabr|tabrewind|tabs|ta|tag|tags|tc|tcl|tcld|tcldo|tclf|tclfile|te|tearoff|tf|tfirst|th|throw|tj|tjump|tl|tlast|tm|tm|tmenu|tn|tnext|tN|tNext|to|topleft|tp|tprevious|tr|trewind|try|ts|tselect|tu|tu|tunmenu|una|unabbreviate|u|undo|undoj|undojoin|undol|undolist|unh|unhide|unlet|unlo|unlockvar|unm|unmap|up|update|verb|verbose|ve|version|vert|vertical|vie|view|vim|vimgrep|vimgrepa|vimgrepadd|vi|visual|viu|viusage|vmapc|vmapclear|vne|vnew|vs|vsplit|vu|vunmap|wa|wall|wh|while|winc|wincmd|windo|winp|winpos|win|winsize|wn|wnext|wN|wNext|wp|wprevious|wq|wqa|wqall|w|write|ws|wsverb|wv|wviminfo|X|xa|xall|x|xit|xm|xmap|xmapc|xmapclear|xme|xmenu|XMLent|XMLns|xn|xnoremap|xnoreme|xnoremenu|xu|xunmap|y|yank)\\b/,\n  builtin: /\\b(?:autocmd|acd|ai|akm|aleph|allowrevins|altkeymap|ambiwidth|ambw|anti|antialias|arab|arabic|arabicshape|ari|arshape|autochdir|autoindent|autoread|autowrite|autowriteall|aw|awa|background|backspace|backup|backupcopy|backupdir|backupext|backupskip|balloondelay|ballooneval|balloonexpr|bdir|bdlay|beval|bex|bexpr|bg|bh|bin|binary|biosk|bioskey|bk|bkc|bomb|breakat|brk|browsedir|bs|bsdir|bsk|bt|bufhidden|buflisted|buftype|casemap|ccv|cdpath|cedit|cfu|ch|charconvert|ci|cin|cindent|cink|cinkeys|cino|cinoptions|cinw|cinwords|clipboard|cmdheight|cmdwinheight|cmp|cms|columns|com|comments|commentstring|compatible|complete|completefunc|completeopt|consk|conskey|copyindent|cot|cpo|cpoptions|cpt|cscopepathcomp|cscopeprg|cscopequickfix|cscopetag|cscopetagorder|cscopeverbose|cspc|csprg|csqf|cst|csto|csverb|cuc|cul|cursorcolumn|cursorline|cwh|debug|deco|def|define|delcombine|dex|dg|dict|dictionary|diff|diffexpr|diffopt|digraph|dip|dir|directory|dy|ea|ead|eadirection|eb|ed|edcompatible|ef|efm|ei|ek|enc|encoding|endofline|eol|ep|equalalways|equalprg|errorbells|errorfile|errorformat|esckeys|et|eventignore|expandtab|exrc|fcl|fcs|fdc|fde|fdi|fdl|fdls|fdm|fdn|fdo|fdt|fen|fenc|fencs|fex|ff|ffs|fileencoding|fileencodings|fileformat|fileformats|fillchars|fk|fkmap|flp|fml|fmr|foldcolumn|foldenable|foldexpr|foldignore|foldlevel|foldlevelstart|foldmarker|foldmethod|foldminlines|foldnestmax|foldtext|formatexpr|formatlistpat|formatoptions|formatprg|fp|fs|fsync|ft|gcr|gd|gdefault|gfm|gfn|gfs|gfw|ghr|gp|grepformat|grepprg|gtl|gtt|guicursor|guifont|guifontset|guifontwide|guiheadroom|guioptions|guipty|guitablabel|guitabtooltip|helpfile|helpheight|helplang|hf|hh|hi|hidden|highlight|hk|hkmap|hkmapp|hkp|hl|hlg|hls|hlsearch|ic|icon|iconstring|ignorecase|im|imactivatekey|imak|imc|imcmdline|imd|imdisable|imi|iminsert|ims|imsearch|inc|include|includeexpr|incsearch|inde|indentexpr|indentkeys|indk|inex|inf|infercase|insertmode|isf|isfname|isi|isident|isk|iskeyword|isprint|joinspaces|js|key|keymap|keymodel|keywordprg|km|kmp|kp|langmap|langmenu|laststatus|lazyredraw|lbr|lcs|linebreak|lines|linespace|lisp|lispwords|listchars|loadplugins|lpl|lsp|lz|macatsui|magic|makeef|makeprg|matchpairs|matchtime|maxcombine|maxfuncdepth|maxmapdepth|maxmem|maxmempattern|maxmemtot|mco|mef|menuitems|mfd|mh|mis|mkspellmem|ml|mls|mm|mmd|mmp|mmt|modeline|modelines|modifiable|modified|more|mouse|mousef|mousefocus|mousehide|mousem|mousemodel|mouses|mouseshape|mouset|mousetime|mp|mps|msm|mzq|mzquantum|nf|nrformats|numberwidth|nuw|odev|oft|ofu|omnifunc|opendevice|operatorfunc|opfunc|osfiletype|pa|para|paragraphs|paste|pastetoggle|patchexpr|patchmode|path|pdev|penc|pex|pexpr|pfn|ph|pheader|pi|pm|pmbcs|pmbfn|popt|preserveindent|previewheight|previewwindow|printdevice|printencoding|printexpr|printfont|printheader|printmbcharset|printmbfont|printoptions|prompt|pt|pumheight|pvh|pvw|qe|quoteescape|readonly|remap|report|restorescreen|revins|rightleft|rightleftcmd|rl|rlc|ro|rs|rtp|ruf|ruler|rulerformat|runtimepath|sbo|sc|scb|scr|scroll|scrollbind|scrolljump|scrolloff|scrollopt|scs|sect|sections|secure|sel|selection|selectmode|sessionoptions|sft|shcf|shellcmdflag|shellpipe|shellquote|shellredir|shellslash|shelltemp|shelltype|shellxquote|shiftround|shiftwidth|shm|shortmess|shortname|showbreak|showcmd|showfulltag|showmatch|showmode|showtabline|shq|si|sidescroll|sidescrolloff|siso|sj|slm|smartcase|smartindent|smarttab|smc|smd|softtabstop|sol|spc|spell|spellcapcheck|spellfile|spelllang|spellsuggest|spf|spl|splitbelow|splitright|sps|sr|srr|ss|ssl|ssop|stal|startofline|statusline|stl|stmp|su|sua|suffixes|suffixesadd|sw|swapfile|swapsync|swb|swf|switchbuf|sws|sxq|syn|synmaxcol|syntax|tabline|tabpagemax|tabstop|tagbsearch|taglength|tagrelative|tagstack|tal|tb|tbi|tbidi|tbis|tbs|tenc|term|termbidi|termencoding|terse|textauto|textmode|textwidth|tgst|thesaurus|tildeop|timeout|timeoutlen|title|titlelen|titleold|titlestring|toolbar|toolbariconsize|top|tpm|tsl|tsr|ttimeout|ttimeoutlen|ttm|tty|ttybuiltin|ttyfast|ttym|ttymouse|ttyscroll|ttytype|tw|tx|uc|ul|undolevels|updatecount|updatetime|ut|vb|vbs|vdir|verbosefile|vfile|viewdir|viewoptions|viminfo|virtualedit|visualbell|vop|wak|warn|wb|wc|wcm|wd|weirdinvert|wfh|wfw|whichwrap|wi|wig|wildchar|wildcharm|wildignore|wildmenu|wildmode|wildoptions|wim|winaltkeys|window|winfixheight|winfixwidth|winheight|winminheight|winminwidth|winwidth|wiv|wiw|wm|wmh|wmnu|wmw|wop|wrap|wrapmargin|wrapscan|writeany|writebackup|writedelay|ww|noacd|noai|noakm|noallowrevins|noaltkeymap|noanti|noantialias|noar|noarab|noarabic|noarabicshape|noari|noarshape|noautochdir|noautoindent|noautoread|noautowrite|noautowriteall|noaw|noawa|nobackup|noballooneval|nobeval|nobin|nobinary|nobiosk|nobioskey|nobk|nobl|nobomb|nobuflisted|nocf|noci|nocin|nocindent|nocompatible|noconfirm|noconsk|noconskey|nocopyindent|nocp|nocscopetag|nocscopeverbose|nocst|nocsverb|nocuc|nocul|nocursorcolumn|nocursorline|nodeco|nodelcombine|nodg|nodiff|nodigraph|nodisable|noea|noeb|noed|noedcompatible|noek|noendofline|noeol|noequalalways|noerrorbells|noesckeys|noet|noex|noexpandtab|noexrc|nofen|nofk|nofkmap|nofoldenable|nogd|nogdefault|noguipty|nohid|nohidden|nohk|nohkmap|nohkmapp|nohkp|nohls|noic|noicon|noignorecase|noim|noimc|noimcmdline|noimd|noincsearch|noinf|noinfercase|noinsertmode|nois|nojoinspaces|nojs|nolazyredraw|nolbr|nolinebreak|nolisp|nolist|noloadplugins|nolpl|nolz|noma|nomacatsui|nomagic|nomh|noml|nomod|nomodeline|nomodifiable|nomodified|nomore|nomousef|nomousefocus|nomousehide|nonu|nonumber|noodev|noopendevice|nopaste|nopi|nopreserveindent|nopreviewwindow|noprompt|nopvw|noreadonly|noremap|norestorescreen|norevins|nori|norightleft|norightleftcmd|norl|norlc|noro|nors|noru|noruler|nosb|nosc|noscb|noscrollbind|noscs|nosecure|nosft|noshellslash|noshelltemp|noshiftround|noshortname|noshowcmd|noshowfulltag|noshowmatch|noshowmode|nosi|nosm|nosmartcase|nosmartindent|nosmarttab|nosmd|nosn|nosol|nospell|nosplitbelow|nosplitright|nospr|nosr|nossl|nosta|nostartofline|nostmp|noswapfile|noswf|nota|notagbsearch|notagrelative|notagstack|notbi|notbidi|notbs|notermbidi|noterse|notextauto|notextmode|notf|notgst|notildeop|notimeout|notitle|noto|notop|notr|nottimeout|nottybuiltin|nottyfast|notx|novb|novisualbell|nowa|nowarn|nowb|noweirdinvert|nowfh|nowfw|nowildmenu|nowinfixheight|nowinfixwidth|nowiv|nowmnu|nowrap|nowrapscan|nowrite|nowriteany|nowritebackup|nows|invacd|invai|invakm|invallowrevins|invaltkeymap|invanti|invantialias|invar|invarab|invarabic|invarabicshape|invari|invarshape|invautochdir|invautoindent|invautoread|invautowrite|invautowriteall|invaw|invawa|invbackup|invballooneval|invbeval|invbin|invbinary|invbiosk|invbioskey|invbk|invbl|invbomb|invbuflisted|invcf|invci|invcin|invcindent|invcompatible|invconfirm|invconsk|invconskey|invcopyindent|invcp|invcscopetag|invcscopeverbose|invcst|invcsverb|invcuc|invcul|invcursorcolumn|invcursorline|invdeco|invdelcombine|invdg|invdiff|invdigraph|invdisable|invea|inveb|inved|invedcompatible|invek|invendofline|inveol|invequalalways|inverrorbells|invesckeys|invet|invex|invexpandtab|invexrc|invfen|invfk|invfkmap|invfoldenable|invgd|invgdefault|invguipty|invhid|invhidden|invhk|invhkmap|invhkmapp|invhkp|invhls|invhlsearch|invic|invicon|invignorecase|invim|invimc|invimcmdline|invimd|invincsearch|invinf|invinfercase|invinsertmode|invis|invjoinspaces|invjs|invlazyredraw|invlbr|invlinebreak|invlisp|invlist|invloadplugins|invlpl|invlz|invma|invmacatsui|invmagic|invmh|invml|invmod|invmodeline|invmodifiable|invmodified|invmore|invmousef|invmousefocus|invmousehide|invnu|invnumber|invodev|invopendevice|invpaste|invpi|invpreserveindent|invpreviewwindow|invprompt|invpvw|invreadonly|invremap|invrestorescreen|invrevins|invri|invrightleft|invrightleftcmd|invrl|invrlc|invro|invrs|invru|invruler|invsb|invsc|invscb|invscrollbind|invscs|invsecure|invsft|invshellslash|invshelltemp|invshiftround|invshortname|invshowcmd|invshowfulltag|invshowmatch|invshowmode|invsi|invsm|invsmartcase|invsmartindent|invsmarttab|invsmd|invsn|invsol|invspell|invsplitbelow|invsplitright|invspr|invsr|invssl|invsta|invstartofline|invstmp|invswapfile|invswf|invta|invtagbsearch|invtagrelative|invtagstack|invtbi|invtbidi|invtbs|invtermbidi|invterse|invtextauto|invtextmode|invtf|invtgst|invtildeop|invtimeout|invtitle|invto|invtop|invtr|invttimeout|invttybuiltin|invttyfast|invtx|invvb|invvisualbell|invwa|invwarn|invwb|invweirdinvert|invwfh|invwfw|invwildmenu|invwinfixheight|invwinfixwidth|invwiv|invwmnu|invwrap|invwrapscan|invwrite|invwriteany|invwritebackup|invws|t_AB|t_AF|t_al|t_AL|t_bc|t_cd|t_ce|t_Ce|t_cl|t_cm|t_Co|t_cs|t_Cs|t_CS|t_CV|t_da|t_db|t_dl|t_DL|t_EI|t_F1|t_F2|t_F3|t_F4|t_F5|t_F6|t_F7|t_F8|t_F9|t_fs|t_IE|t_IS|t_k1|t_K1|t_k2|t_k3|t_K3|t_k4|t_K4|t_k5|t_K5|t_k6|t_K6|t_k7|t_K7|t_k8|t_K8|t_k9|t_K9|t_KA|t_kb|t_kB|t_KB|t_KC|t_kd|t_kD|t_KD|t_ke|t_KE|t_KF|t_KG|t_kh|t_KH|t_kI|t_KI|t_KJ|t_KK|t_kl|t_KL|t_kN|t_kP|t_kr|t_ks|t_ku|t_le|t_mb|t_md|t_me|t_mr|t_ms|t_nd|t_op|t_RI|t_RV|t_Sb|t_se|t_Sf|t_SI|t_so|t_sr|t_te|t_ti|t_ts|t_ue|t_us|t_ut|t_vb|t_ve|t_vi|t_vs|t_WP|t_WS|t_xs|t_ZH|t_ZR)\\b/,\n  number: /\\b(?:0x[\\da-f]+|\\d+(?:\\.\\d+)?)\\b/i,\n  operator: /\\|\\||&&|[-+.]=?|[=!](?:[=~][#?]?)?|[<>]=?[#?]?|[*\\/%?]|\\b(?:is(?:not)?)\\b/,\n  punctuation: /[{}[\\](),;:]/\n}, Prism.languages[\"visual-basic\"] = {\n  comment: {\n    pattern: /(?:['‘’]|REM\\b).*/i,\n    inside: {\n      keyword: /^REM/i\n    }\n  },\n  directive: {\n    pattern: /#(?:Const|Else|ElseIf|End|ExternalChecksum|ExternalSource|If|Region)(?:[^\\S\\r\\n]_[^\\S\\r\\n]*(?:\\r\\n?|\\n)|.)+/i,\n    alias: \"comment\",\n    greedy: !0\n  },\n  string: {\n    pattern: /[\"“”](?:[\"“”]{2}|[^\"“”])*[\"“”]C?/i,\n    greedy: !0\n  },\n  date: {\n    pattern: /#[^\\S\\r\\n]*(?:\\d+([\\/-])\\d+\\1\\d+(?:[^\\S\\r\\n]+(?:\\d+[^\\S\\r\\n]*(?:AM|PM)|\\d+:\\d+(?::\\d+)?(?:[^\\S\\r\\n]*(?:AM|PM))?))?|(?:\\d+[^\\S\\r\\n]*(?:AM|PM)|\\d+:\\d+(?::\\d+)?(?:[^\\S\\r\\n]*(?:AM|PM))?))[^\\S\\r\\n]*#/i,\n    alias: \"builtin\"\n  },\n  number: /(?:(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)(?:E[+-]?\\d+)?|&[HO][\\dA-F]+)(?:U?[ILS]|[FRD])?/i,\n  boolean: /\\b(?:True|False|Nothing)\\b/i,\n  keyword: /\\b(?:AddHandler|AddressOf|Alias|And(?:Also)?|As|Boolean|ByRef|Byte|ByVal|Call|Case|Catch|C(?:Bool|Byte|Char|Date|Dbl|Dec|Int|Lng|Obj|SByte|Short|Sng|Str|Type|UInt|ULng|UShort)|Char|Class|Const|Continue|Date|Decimal|Declare|Default|Delegate|Dim|DirectCast|Do|Double|Each|Else(?:If)?|End(?:If)?|Enum|Erase|Error|Event|Exit|Finally|For|Friend|Function|Get(?:Type|XMLNamespace)?|Global|GoSub|GoTo|Handles|If|Implements|Imports|In|Inherits|Integer|Interface|Is|IsNot|Let|Lib|Like|Long|Loop|Me|Mod|Module|Must(?:Inherit|Override)|My(?:Base|Class)|Namespace|Narrowing|New|Next|Not(?:Inheritable|Overridable)?|Object|Of|On|Operator|Option(?:al)?|Or(?:Else)?|Out|Overloads|Overridable|Overrides|ParamArray|Partial|Private|Property|Protected|Public|RaiseEvent|ReadOnly|ReDim|RemoveHandler|Resume|Return|SByte|Select|Set|Shadows|Shared|short|Single|Static|Step|Stop|String|Structure|Sub|SyncLock|Then|Throw|To|Try|TryCast|TypeOf|U(?:Integer|Long|Short)|Using|Variant|Wend|When|While|Widening|With(?:Events)?|WriteOnly|Xor)\\b/i,\n  operator: [/[+\\-*\\/\\\\^<=>&#@$%!]/, {\n    pattern: /([^\\S\\r\\n])_(?=[^\\S\\r\\n]*[\\r\\n])/,\n    lookbehind: !0\n  }],\n  punctuation: /[{}().,:?]/\n}, Prism.languages.vb = Prism.languages[\"visual-basic\"], Prism.languages.wasm = {\n  comment: [/\\(;[\\s\\S]*?;\\)/, {\n    pattern: /;;.*/,\n    greedy: !0\n  }],\n  string: {\n    pattern: /\"(?:\\\\[\\s\\S]|[^\"\\\\])*\"/,\n    greedy: !0\n  },\n  keyword: [{\n    pattern: /\\b(?:align|offset)=/,\n    inside: {\n      operator: /=/\n    }\n  }, {\n    pattern: /\\b(?:(?:f32|f64|i32|i64)(?:\\.(?:abs|add|and|ceil|clz|const|convert_[su]\\/i(?:32|64)|copysign|ctz|demote\\/f64|div(?:_[su])?|eqz?|extend_[su]\\/i32|floor|ge(?:_[su])?|gt(?:_[su])?|le(?:_[su])?|load(?:(?:8|16|32)_[su])?|lt(?:_[su])?|max|min|mul|nearest|neg?|or|popcnt|promote\\/f32|reinterpret\\/[fi](?:32|64)|rem_[su]|rot[lr]|shl|shr_[su]|store(?:8|16|32)?|sqrt|sub|trunc(?:_[su]\\/f(?:32|64))?|wrap\\/i64|xor))?|memory\\.(?:grow|size))\\b/,\n    inside: {\n      punctuation: /\\./\n    }\n  }, /\\b(?:anyfunc|block|br(?:_if|_table)?|call(?:_indirect)?|data|drop|elem|else|end|export|func|get_(?:global|local)|global|if|import|local|loop|memory|module|mut|nop|offset|param|result|return|select|set_(?:global|local)|start|table|tee_local|then|type|unreachable)\\b/],\n  variable: /\\$[\\w!#$%&'*+\\-.\\/:<=>?@\\\\^_`|~]+/i,\n  number: /[+-]?\\b(?:\\d(?:_?\\d)*(?:\\.\\d(?:_?\\d)*)?(?:[eE][+-]?\\d(?:_?\\d)*)?|0x[\\da-fA-F](?:_?[\\da-fA-F])*(?:\\.[\\da-fA-F](?:_?[\\da-fA-D])*)?(?:[pP][+-]?\\d(?:_?\\d)*)?)\\b|\\binf\\b|\\bnan(?::0x[\\da-fA-F](?:_?[\\da-fA-D])*)?\\b/,\n  punctuation: /[()]/\n}, Prism.languages.wiki = Prism.languages.extend(\"markup\", {\n  \"block-comment\": {\n    pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,\n    lookbehind: !0,\n    alias: \"comment\"\n  },\n  heading: {\n    pattern: /^(=+).+?\\1/m,\n    inside: {\n      punctuation: /^=+|=+$/,\n      important: /.+/\n    }\n  },\n  emphasis: {\n    pattern: /('{2,5}).+?\\1/,\n    inside: {\n      \"bold italic\": {\n        pattern: /(''''').+?(?=\\1)/,\n        lookbehind: !0\n      },\n      bold: {\n        pattern: /(''')[^'](?:.*?[^'])?(?=\\1)/,\n        lookbehind: !0\n      },\n      italic: {\n        pattern: /('')[^'](?:.*?[^'])?(?=\\1)/,\n        lookbehind: !0\n      },\n      punctuation: /^''+|''+$/\n    }\n  },\n  hr: {\n    pattern: /^-{4,}/m,\n    alias: \"punctuation\"\n  },\n  url: [/ISBN +(?:97[89][ -]?)?(?:\\d[ -]?){9}[\\dx]\\b|(?:RFC|PMID) +\\d+/i, /\\[\\[.+?\\]\\]|\\[.+?\\]/],\n  variable: [/__[A-Z]+__/, /\\{{3}.+?\\}{3}/, /\\{\\{.+?\\}\\}/],\n  symbol: [/^#redirect/im, /~{3,5}/],\n  \"table-tag\": {\n    pattern: /((?:^|[|!])[|!])[^|\\r\\n]+\\|(?!\\|)/m,\n    lookbehind: !0,\n    inside: {\n      \"table-bar\": {\n        pattern: /\\|$/,\n        alias: \"punctuation\"\n      },\n      rest: Prism.languages.markup.tag.inside\n    }\n  },\n  punctuation: /^(?:\\{\\||\\|\\}|\\|-|[*#:;!|])|\\|\\||!!/m\n}), Prism.languages.insertBefore(\"wiki\", \"tag\", {\n  nowiki: {\n    pattern: /<(nowiki|pre|source)\\b[\\s\\S]*?>[\\s\\S]*?<\\/\\1>/i,\n    inside: {\n      tag: {\n        pattern: /<(?:nowiki|pre|source)\\b[\\s\\S]*?>|<\\/(?:nowiki|pre|source)>/i,\n        inside: Prism.languages.markup.tag.inside\n      }\n    }\n  }\n}), function (e) {\n  e.languages.xeora = e.languages.extend(\"markup\", {\n    constant: {\n      pattern: /\\$(?:DomainContents|PageRenderDuration)\\$/,\n      inside: {\n        punctuation: {\n          pattern: /\\$/\n        }\n      }\n    },\n    variable: {\n      pattern: /\\$@?(?:#+|[-+*~=^])?[\\w.]+\\$/,\n      inside: {\n        punctuation: {\n          pattern: /[$.]/\n        },\n        operator: {\n          pattern: /#+|[-+*~=^@]/\n        }\n      }\n    },\n    \"function-inline\": {\n      pattern: /\\$F:[-\\w.]+\\?[-\\w.]+(?:,(?:\\|?(?:[-#.^+*~]*(?:[\\w+][^$]*)|=(?:[\\S+][^$]*)|@[-#]*(?:\\w+.)[\\w+.]+)?)*)?\\$/,\n      inside: {\n        variable: {\n          pattern: /(?:[,|])@?(?:#+|[-+*~=^])?[\\w.]+/,\n          inside: {\n            punctuation: {\n              pattern: /[,.|]/\n            },\n            operator: {\n              pattern: /#+|[-+*~=^@]/\n            }\n          }\n        },\n        punctuation: {\n          pattern: /\\$\\w:|[$:?.,|]/\n        }\n      },\n      alias: \"function\"\n    },\n    \"function-block\": {\n      pattern: /\\$XF:{[-\\w.]+\\?[-\\w.]+(?:,(?:\\|?(?:[-#.^+*~]*(?:[\\w+][^$]*)|=(?:[\\S+][^$]*)|@[-#]*(?:\\w+.)[\\w+.]+)?)*)?}:XF\\$/,\n      inside: {\n        punctuation: {\n          pattern: /[$:{}?.,|]/\n        }\n      },\n      alias: \"function\"\n    },\n    \"directive-inline\": {\n      pattern: /\\$\\w(?:#\\d+\\+?)?(?:\\[[-\\w.]+])?:[-\\/\\w.]+\\$/,\n      inside: {\n        punctuation: {\n          pattern: /\\$(?:\\w:|C(?:\\[|#\\d))?|[:{[\\]]/,\n          inside: {\n            tag: {\n              pattern: /#\\d/\n            }\n          }\n        }\n      },\n      alias: \"function\"\n    },\n    \"directive-block-open\": {\n      pattern: /\\$\\w+:{|\\$\\w(?:#\\d+\\+?)?(?:\\[[-\\w.]+])?:[-\\w.]+:{(![A-Z]+)?/,\n      inside: {\n        punctuation: {\n          pattern: /\\$(?:\\w:|C(?:\\[|#\\d))?|[:{[\\]]/,\n          inside: {\n            tag: {\n              pattern: /#\\d/\n            }\n          }\n        },\n        attribute: {\n          pattern: /![A-Z]+$/,\n          inside: {\n            punctuation: {\n              pattern: /!/\n            }\n          },\n          alias: \"keyword\"\n        }\n      },\n      alias: \"function\"\n    },\n    \"directive-block-separator\": {\n      pattern: /}:[-\\w.]+:{/,\n      inside: {\n        punctuation: {\n          pattern: /[:{}]/\n        }\n      },\n      alias: \"function\"\n    },\n    \"directive-block-close\": {\n      pattern: /}:[-\\w.]+\\$/,\n      inside: {\n        punctuation: {\n          pattern: /[:{}$]/\n        }\n      },\n      alias: \"function\"\n    }\n  }), e.languages.insertBefore(\"inside\", \"punctuation\", {\n    variable: e.languages.xeora[\"function-inline\"].inside.variable\n  }, e.languages.xeora[\"function-block\"]), e.languages.xeoracube = e.languages.xeora;\n}(Prism), Prism.languages.xojo = {\n  comment: {\n    pattern: /(?:'|\\/\\/|Rem\\b).+/i,\n    inside: {\n      keyword: /^Rem/i\n    }\n  },\n  string: {\n    pattern: /\"(?:\"\"|[^\"])*\"/,\n    greedy: !0\n  },\n  number: [/(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:E[+-]?\\d+)?/i, /&[bchou][a-z\\d]+/i],\n  symbol: /#(?:If|Else|ElseIf|Endif|Pragma)\\b/i,\n  keyword: /\\b(?:AddHandler|App|Array|As(?:signs)?|By(?:Ref|Val)|Break|Call|Case|Catch|Const|Continue|CurrentMethodName|Declare|Dim|Do(?:wnTo)?|Each|Else(?:If)?|End|Exit|Extends|False|Finally|For|Global|If|In|Lib|Loop|Me|Next|Nil|Optional|ParamArray|Raise(?:Event)?|ReDim|Rem|RemoveHandler|Return|Select|Self|Soft|Static|Step|Super|Then|To|True|Try|Ubound|Until|Using|Wend|While)\\b/i,\n  operator: /<[=>]?|>=?|[+\\-*\\/\\\\^=]|\\b(?:AddressOf|And|Ctype|IsA?|Mod|New|Not|Or|Xor|WeakAddressOf)\\b/i,\n  punctuation: /[.,;:()]/\n}, function (e) {\n  e.languages.xquery = e.languages.extend(\"markup\", {\n    \"xquery-comment\": {\n      pattern: /\\(:[\\s\\S]*?:\\)/,\n      greedy: !0,\n      alias: \"comment\"\n    },\n    string: {\n      pattern: /([\"'])(?:\\1\\1|(?!\\1)[\\s\\S])*\\1/,\n      greedy: !0\n    },\n    extension: {\n      pattern: /\\(#.+?#\\)/,\n      alias: \"symbol\"\n    },\n    variable: /\\$[\\w-:]+/,\n    axis: {\n      pattern: /(^|[^-])(?:ancestor(?:-or-self)?|attribute|child|descendant(?:-or-self)?|following(?:-sibling)?|parent|preceding(?:-sibling)?|self)(?=::)/,\n      lookbehind: !0,\n      alias: \"operator\"\n    },\n    \"keyword-operator\": {\n      pattern: /(^|[^:-])\\b(?:and|castable as|div|eq|except|ge|gt|idiv|instance of|intersect|is|le|lt|mod|ne|or|union)\\b(?=$|[^:-])/,\n      lookbehind: !0,\n      alias: \"operator\"\n    },\n    keyword: {\n      pattern: /(^|[^:-])\\b(?:as|ascending|at|base-uri|boundary-space|case|cast as|collation|construction|copy-namespaces|declare|default|descending|else|empty (?:greatest|least)|encoding|every|external|for|function|if|import|in|inherit|lax|let|map|module|namespace|no-inherit|no-preserve|option|order(?: by|ed|ing)?|preserve|return|satisfies|schema|some|stable|strict|strip|then|to|treat as|typeswitch|unordered|validate|variable|version|where|xquery)\\b(?=$|[^:-])/,\n      lookbehind: !0\n    },\n    function: /[\\w-]+(?::[\\w-]+)*(?=\\s*\\()/,\n    \"xquery-element\": {\n      pattern: /(element\\s+)[\\w-]+(?::[\\w-]+)*/,\n      lookbehind: !0,\n      alias: \"tag\"\n    },\n    \"xquery-attribute\": {\n      pattern: /(attribute\\s+)[\\w-]+(?::[\\w-]+)*/,\n      lookbehind: !0,\n      alias: \"attr-name\"\n    },\n    builtin: {\n      pattern: /(^|[^:-])\\b(?:attribute|comment|document|element|processing-instruction|text|xs:(?:anyAtomicType|anyType|anyURI|base64Binary|boolean|byte|date|dateTime|dayTimeDuration|decimal|double|duration|ENTITIES|ENTITY|float|gDay|gMonth|gMonthDay|gYear|gYearMonth|hexBinary|ID|IDREFS?|int|integer|language|long|Name|NCName|negativeInteger|NMTOKENS?|nonNegativeInteger|nonPositiveInteger|normalizedString|NOTATION|positiveInteger|QName|short|string|time|token|unsigned(?:Byte|Int|Long|Short)|untyped(?:Atomic)?|yearMonthDuration))\\b(?=$|[^:-])/,\n      lookbehind: !0\n    },\n    number: /\\b\\d+(?:\\.\\d+)?(?:E[+-]?\\d+)?/,\n    operator: [/[+*=?|@]|\\.\\.?|:=|!=|<[=<]?|>[=>]?/, {\n      pattern: /(\\s)-(?=\\s)/,\n      lookbehind: !0\n    }],\n    punctuation: /[[\\](){},;:\\/]/\n  }), e.languages.xquery.tag.pattern = /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|{(?!{)(?:{(?:{[^}]*}|[^}])*}|[^}])+}|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+))?)*\\s*\\/?>/i, e.languages.xquery.tag.inside[\"attr-value\"].pattern = /=(?:(\"|')(?:\\\\[\\s\\S]|{(?!{)(?:{(?:{[^}]*}|[^}])*}|[^}])+}|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+)/i, e.languages.xquery.tag.inside[\"attr-value\"].inside.punctuation = /^=\"|\"$/, e.languages.xquery.tag.inside[\"attr-value\"].inside.expression = {\n    pattern: /{(?!{)(?:{(?:{[^}]*}|[^}])*}|[^}])+}/,\n    inside: {\n      rest: e.languages.xquery\n    },\n    alias: \"language-xquery\"\n  };\n\n  var t = function t(e) {\n    return \"string\" == typeof e ? e : \"string\" == typeof e.content ? e.content : e.content.map(t).join(\"\");\n  },\n      n = function n(a) {\n    for (var i = [], r = 0; r < a.length; r++) {\n      var o = a[r],\n          s = !1;\n\n      if (\"string\" != typeof o && (\"tag\" === o.type && o.content[0] && \"tag\" === o.content[0].type ? \"</\" === o.content[0].content[0].content ? i.length > 0 && i[i.length - 1].tagName === t(o.content[0].content[1]) && i.pop() : \"/>\" === o.content[o.content.length - 1].content || i.push({\n        tagName: t(o.content[0].content[1]),\n        openedBraces: 0\n      }) : !(i.length > 0 && \"punctuation\" === o.type && \"{\" === o.content) || a[r + 1] && \"punctuation\" === a[r + 1].type && \"{\" === a[r + 1].content || a[r - 1] && \"plain-text\" === a[r - 1].type && \"{\" === a[r - 1].content ? i.length > 0 && i[i.length - 1].openedBraces > 0 && \"punctuation\" === o.type && \"}\" === o.content ? i[i.length - 1].openedBraces-- : \"comment\" !== o.type && (s = !0) : i[i.length - 1].openedBraces++), (s || \"string\" == typeof o) && i.length > 0 && 0 === i[i.length - 1].openedBraces) {\n        var l = t(o);\n        r < a.length - 1 && (\"string\" == typeof a[r + 1] || \"plain-text\" === a[r + 1].type) && (l += t(a[r + 1]), a.splice(r + 1, 1)), r > 0 && (\"string\" == typeof a[r - 1] || \"plain-text\" === a[r - 1].type) && (l = t(a[r - 1]) + l, a.splice(r - 1, 1), r--), a[r] = /^\\s+$/.test(l) ? l : new e.Token(\"plain-text\", l, null, l);\n      }\n\n      o.content && \"string\" != typeof o.content && n(o.content);\n    }\n  };\n\n  e.hooks.add(\"after-tokenize\", function (e) {\n    \"xquery\" === e.language && n(e.tokens);\n  });\n}(Prism), Prism.languages.yaml = {\n  scalar: {\n    pattern: /([\\-:]\\s*(?:![^\\s]+)?[ \\t]*[|>])[ \\t]*(?:((?:\\r?\\n|\\r)[ \\t]+)[^\\r\\n]+(?:\\2[^\\r\\n]+)*)/,\n    lookbehind: !0,\n    alias: \"string\"\n  },\n  comment: /#.*/,\n  key: {\n    pattern: /(\\s*(?:^|[:\\-,[{\\r\\n?])[ \\t]*(?:![^\\s]+)?[ \\t]*)[^\\r\\n{[\\]},#\\s]+?(?=\\s*:\\s)/,\n    lookbehind: !0,\n    alias: \"atrule\"\n  },\n  directive: {\n    pattern: /(^[ \\t]*)%.+/m,\n    lookbehind: !0,\n    alias: \"important\"\n  },\n  datetime: {\n    pattern: /([:\\-,[{]\\s*(?:![^\\s]+)?[ \\t]*)(?:\\d{4}-\\d\\d?-\\d\\d?(?:[tT]|[ \\t]+)\\d\\d?:\\d{2}:\\d{2}(?:\\.\\d*)?[ \\t]*(?:Z|[-+]\\d\\d?(?::\\d{2})?)?|\\d{4}-\\d{2}-\\d{2}|\\d\\d?:\\d{2}(?::\\d{2}(?:\\.\\d*)?)?)(?=[ \\t]*(?:$|,|]|}))/m,\n    lookbehind: !0,\n    alias: \"number\"\n  },\n  boolean: {\n    pattern: /([:\\-,[{]\\s*(?:![^\\s]+)?[ \\t]*)(?:true|false)[ \\t]*(?=$|,|]|})/im,\n    lookbehind: !0,\n    alias: \"important\"\n  },\n  null: {\n    pattern: /([:\\-,[{]\\s*(?:![^\\s]+)?[ \\t]*)(?:null|~)[ \\t]*(?=$|,|]|})/im,\n    lookbehind: !0,\n    alias: \"important\"\n  },\n  string: {\n    pattern: /([:\\-,[{]\\s*(?:![^\\s]+)?[ \\t]*)(\"|')(?:(?!\\2)[^\\\\\\r\\n]|\\\\.)*\\2(?=[ \\t]*(?:$|,|]|}))/m,\n    lookbehind: !0,\n    greedy: !0\n  },\n  number: {\n    pattern: /([:\\-,[{]\\s*(?:![^\\s]+)?[ \\t]*)[+-]?(?:0x[\\da-f]+|0o[0-7]+|(?:\\d+\\.?\\d*|\\.?\\d+)(?:e[+-]?\\d+)?|\\.inf|\\.nan)[ \\t]*(?=$|,|]|})/im,\n    lookbehind: !0\n  },\n  tag: /![^\\s]+/,\n  important: /[&*][\\w]+/,\n  punctuation: /---|[:[\\]{}\\-,|>?]|\\.\\.\\./\n};\n\nvar toggleSelection = function toggleSelection() {\n  var e = document.getSelection();\n  if (!e.rangeCount) return function () {};\n\n  for (var t = document.activeElement, n = [], a = 0; a < e.rangeCount; a++) {\n    n.push(e.getRangeAt(a));\n  }\n\n  switch (t.tagName.toUpperCase()) {\n    case \"INPUT\":\n    case \"TEXTAREA\":\n      t.blur();\n      break;\n\n    default:\n      t = null;\n  }\n\n  return e.removeAllRanges(), function () {\n    \"Caret\" === e.type && e.removeAllRanges(), e.rangeCount || n.forEach(function (t) {\n      e.addRange(t);\n    }), t && t.focus();\n  };\n},\n    defaultMessage = \"Copy to clipboard: #{key}, Enter\";\n\nfunction format(e) {\n  var t = (/mac os x/i.test(navigator.userAgent) ? \"⌘\" : \"Ctrl\") + \"+C\";\n  return e.replace(/#{\\s*key\\s*}/g, t);\n}\n\nfunction copy(e, t) {\n  var n,\n      a,\n      i,\n      r,\n      o,\n      s,\n      l = !1;\n  t || (t = {}), n = t.debug || !1;\n\n  try {\n    if (i = toggleSelection(), r = document.createRange(), o = document.getSelection(), (s = document.createElement(\"span\")).textContent = e, s.style.all = \"unset\", s.style.position = \"fixed\", s.style.top = 0, s.style.clip = \"rect(0, 0, 0, 0)\", s.style.whiteSpace = \"pre\", s.style.webkitUserSelect = \"text\", s.style.MozUserSelect = \"text\", s.style.msUserSelect = \"text\", s.style.userSelect = \"text\", document.body.appendChild(s), r.selectNode(s), o.addRange(r), !document.execCommand(\"copy\")) throw new Error(\"copy command was unsuccessful\");\n    l = !0;\n  } catch (i) {\n    n && console.error(\"unable to copy using execCommand: \", i), n && console.warn(\"trying IE specific stuff\");\n\n    try {\n      window.clipboardData.setData(\"text\", e), l = !0;\n    } catch (i) {\n      n && console.error(\"unable to copy using clipboardData: \", i), n && console.error(\"falling back to prompt\"), a = format(\"message\" in t ? t.message : defaultMessage), window.prompt(a, e);\n    }\n  } finally {\n    o && (\"function\" == typeof o.removeRange ? o.removeRange(r) : o.removeAllRanges()), s && document.body.removeChild(s), i();\n  }\n\n  return l;\n}\n\nvar copyToClipboard = copy,\n    MyComponent = function () {\n  function e() {\n    this.content = '<h1>Hi, This is Sample/Default HTML code. Please set \"content\" and \"language\" attribute of the component to render your code snippet</h1>', this.theme = \"dark\", this.language = \"html\", this.copyMessage = \"Copy\";\n  }\n\n  return e.prototype.componentDidLoad = function () {\n    var e = this;\n    Prism.hooks.add(\"complete\", function (t) {\n      e.code = t.code;\n    }), Prism.highlightAll();\n  }, e.prototype.componentDidUpdate = function () {\n    Prism.highlightAll();\n  }, e.prototype.encodeContent = function (e) {\n    if (e) return Prism.util.encode(e);\n  }, e.prototype.copyToClipboard = function () {\n    var e = this;\n    this.copyMessage = \"Copied\", copyToClipboard(this.code), setTimeout(function () {\n      e.copyMessage = \"Copy\";\n    }, 800);\n  }, e.prototype.render = function () {\n    var e = this;\n    return h(\"div\", null, h(\"div\", {\n      id: \"content\",\n      class: \"hidden\"\n    }, h(\"slot\", null)), h(\"div\", {\n      class: this.theme\n    }, h(\"div\", {\n      class: \"code-toolbar\"\n    }, h(\"pre\", {\n      class: \"language-\" + this.language\n    }, h(\"code\", {\n      class: \"language-\" + this.language,\n      innerHTML: this.encodeContent(this.content)\n    })), h(\"div\", {\n      class: \"toolbar\"\n    }, h(\"div\", {\n      class: \"toolbar-item\"\n    }, h(\"span\", null, this.language.toUpperCase())), h(\"div\", {\n      class: \"toolbar-item\"\n    }, h(\"a\", {\n      onClick: function onClick() {\n        e.copyToClipboard();\n      }\n    }, h(\"svg\", {\n      \"aria-hidden\": \"true\",\n      \"data-prefix\": \"far\",\n      \"data-icon\": \"copy\",\n      class: \"svg-inline--fa fa-copy fa-w-14\",\n      role: \"img\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      viewBox: \"0 0 448 512\",\n      id: \"svg_resize\",\n      width: \"15\",\n      height: \"15\"\n    }, h(\"path\", {\n      fill: \"currentColor\",\n      d: \"M433.941 65.941l-51.882-51.882A48 48 0 0 0 348.118 0H176c-26.51 0-48 21.49-48 48v48H48c-26.51 0-48 21.49-48 48v320c0 26.51 21.49 48 48 48h224c26.51 0 48-21.49 48-48v-48h80c26.51 0 48-21.49 48-48V99.882a48 48 0 0 0-14.059-33.941zM266 464H54a6 6 0 0 1-6-6V150a6 6 0 0 1 6-6h74v224c0 26.51 21.49 48 48 48h96v42a6 6 0 0 1-6 6zm128-96H182a6 6 0 0 1-6-6V54a6 6 0 0 1 6-6h106v88c0 13.255 10.745 24 24 24h88v202a6 6 0 0 1-6 6zm6-256h-64V48h9.632c1.591 0 3.117.632 4.243 1.757l48.368 48.368a6 6 0 0 1 1.757 4.243V112z\"\n    })), this.copyMessage))))));\n  }, Object.defineProperty(e, \"is\", {\n    get: function get() {\n      return \"snippet-highlight\";\n    },\n    enumerable: !0,\n    configurable: !0\n  }), Object.defineProperty(e, \"properties\", {\n    get: function get() {\n      return {\n        content: {\n          type: String,\n          attr: \"content\"\n        },\n        copyMessage: {\n          state: !0\n        },\n        language: {\n          type: String,\n          attr: \"language\"\n        },\n        theme: {\n          type: String,\n          attr: \"theme\"\n        }\n      };\n    },\n    enumerable: !0,\n    configurable: !0\n  }), Object.defineProperty(e, \"style\", {\n    get: function get() {\n      return \"snippet-highlight .hidden{display:none}snippet-highlight pre{border-radius:5px}snippet-highlight div.code-toolbar{position:relative}snippet-highlight div.code-toolbar>.toolbar{position:absolute;top:.3em;right:.2em;-webkit-transition:opacity .3s ease-in-out;transition:opacity .3s ease-in-out;opacity:0}snippet-highlight div.code-toolbar:hover>.toolbar{opacity:1}snippet-highlight div.code-toolbar>.toolbar .toolbar-item{display:inline-block}snippet-highlight div.code-toolbar>.toolbar a{cursor:pointer}snippet-highlight div.code-toolbar>.toolbar button{background:none;border:0;color:inherit;font:inherit;line-height:normal;overflow:visible;padding:0;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none}snippet-highlight div.code-toolbar>.toolbar a:focus,snippet-highlight div.code-toolbar>.toolbar a:hover,snippet-highlight div.code-toolbar>.toolbar button:focus,snippet-highlight div.code-toolbar>.toolbar button:hover,snippet-highlight div.code-toolbar>.toolbar span:focus,snippet-highlight div.code-toolbar>.toolbar span:hover{color:inherit;text-decoration:none}snippet-highlight .light code[class*=language-],snippet-highlight .light pre[class*=language-]{color:#000;background:none;text-shadow:0 1px #fff;font-family:Consolas,Monaco,Andale Mono,Ubuntu Mono,monospace;text-align:left;white-space:pre;word-spacing:normal;word-break:normal;word-wrap:normal;line-height:1.5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;-webkit-hyphens:none;-moz-hyphens:none;-ms-hyphens:none;hyphens:none}snippet-highlight .light code[class*=language-]::-moz-selection,snippet-highlight .light code[class*=language-] ::-moz-selection,snippet-highlight .light pre[class*=language-]::-moz-selection,snippet-highlight .light pre[class*=language-] ::-moz-selection{text-shadow:none;background:#b3d4fc}snippet-highlight .light code[class*=language-]::selection,snippet-highlight .light code[class*=language-] ::selection,snippet-highlight .light pre[class*=language-]::selection,snippet-highlight .light pre[class*=language-] ::selection{text-shadow:none;background:#b3d4fc}\\@media print{snippet-highlight .light code[class*=language-],snippet-highlight .light pre[class*=language-]{text-shadow:none}}snippet-highlight .light pre[class*=language-]{padding:1em;margin:.5em 0;overflow:auto}snippet-highlight .light :not(pre)>code[class*=language-],snippet-highlight .light pre[class*=language-]{background:#f5f2f0}snippet-highlight .light :not(pre)>code[class*=language-]{padding:.1em;border-radius:.3em;white-space:normal}snippet-highlight .light .token.cdata,snippet-highlight .light .token.comment,snippet-highlight .light .token.doctype,snippet-highlight .light .token.prolog{color:#708090}snippet-highlight .light .token.punctuation{color:#999}snippet-highlight .light .namespace{opacity:.7}snippet-highlight .light .token.boolean,snippet-highlight .light .token.constant,snippet-highlight .light .token.deleted,snippet-highlight .light .token.number,snippet-highlight .light .token.property,snippet-highlight .light .token.symbol,snippet-highlight .light .token.tag{color:#905}snippet-highlight .light .token.attr-name,snippet-highlight .light .token.builtin,snippet-highlight .light .token.char,snippet-highlight .light .token.inserted,snippet-highlight .light .token.selector,snippet-highlight .light .token.string{color:#690}snippet-highlight .light .language-css .token.string,snippet-highlight .light .style .token.string,snippet-highlight .light .token.entity,snippet-highlight .light .token.operator,snippet-highlight .light .token.url{color:#9a6e3a;background:hsla(0,0%,100%,.5)}snippet-highlight .light .token.atrule,snippet-highlight .light .token.attr-value,snippet-highlight .light .token.keyword{color:#07a}snippet-highlight .light .token.class-name,snippet-highlight .light .token.function{color:#dd4a68}snippet-highlight .light .token.important,snippet-highlight .light .token.regex,snippet-highlight .light .token.variable{color:#e90}snippet-highlight .light .token.bold,snippet-highlight .light .token.important{font-weight:700}snippet-highlight .light .token.italic{font-style:italic}snippet-highlight .light .token.entity{cursor:help}snippet-highlight .light .code-toolbar pre{border-top:10px solid #2170c4}snippet-highlight .light .code-toolbar .toolbar{opacity:1}snippet-highlight .light .code-toolbar .toolbar a,snippet-highlight .light .code-toolbar .toolbar span{color:#fff;font-size:12px;font-weight:bolder;padding:8px;background:#2170c4;-webkit-box-shadow:none;box-shadow:none;border-radius:5px;margin-right:10px;font-family:monospace}snippet-highlight .light .code-toolbar .toolbar span:hover{color:#fff}snippet-highlight .light .code-toolbar .toolbar a:hover{color:#ff0}snippet-highlight .dark code[class*=language-],snippet-highlight .dark pre[class*=language-]{color:#f8f8f2;background:none;text-shadow:0 1px rgba(0,0,0,.3);font-family:Consolas,Monaco,Andale Mono,Ubuntu Mono,monospace;text-align:left;white-space:pre;word-spacing:normal;word-break:normal;word-wrap:normal;line-height:1.5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;-webkit-hyphens:none;-moz-hyphens:none;-ms-hyphens:none;hyphens:none}snippet-highlight .dark pre[class*=language-]{padding:1em;margin:.5em 0;overflow:auto;border-radius:.3em}snippet-highlight .dark :not(pre)>code[class*=language-],snippet-highlight .dark pre[class*=language-]{background:#272822}snippet-highlight .dark :not(pre)>code[class*=language-]{padding:.1em;border-radius:.3em;white-space:normal}snippet-highlight .dark .token.cdata,snippet-highlight .dark .token.comment,snippet-highlight .dark .token.doctype,snippet-highlight .dark .token.prolog{color:#708090}snippet-highlight .dark .token.punctuation{color:#f8f8f2}snippet-highlight .dark .namespace{opacity:.7}snippet-highlight .dark .token.constant,snippet-highlight .dark .token.deleted,snippet-highlight .dark .token.property,snippet-highlight .dark .token.symbol,snippet-highlight .dark .token.tag{color:#f92672}snippet-highlight .dark .token.boolean,snippet-highlight .dark .token.number{color:#ae81ff}snippet-highlight .dark .token.attr-name,snippet-highlight .dark .token.builtin,snippet-highlight .dark .token.char,snippet-highlight .dark .token.inserted,snippet-highlight .dark .token.selector,snippet-highlight .dark .token.string{color:#a6e22e}snippet-highlight .dark .language-css .token.string,snippet-highlight .dark .style .token.string,snippet-highlight .dark .token.entity,snippet-highlight .dark .token.operator,snippet-highlight .dark .token.url,snippet-highlight .dark .token.variable{color:#f8f8f2}snippet-highlight .dark .token.atrule,snippet-highlight .dark .token.attr-value,snippet-highlight .dark .token.class-name,snippet-highlight .dark .token.function{color:#e6db74}snippet-highlight .dark .token.keyword{color:#66d9ef}snippet-highlight .dark .token.important,snippet-highlight .dark .token.regex{color:#fd971f}snippet-highlight .dark .token.bold,snippet-highlight .dark .token.important{font-weight:700}snippet-highlight .dark .token.italic{font-style:italic}snippet-highlight .dark .token.entity{cursor:help}snippet-highlight .dark .code-toolbar pre{border-top:10px solid #f26428}snippet-highlight .dark .code-toolbar .toolbar{opacity:1}snippet-highlight .dark .code-toolbar .toolbar a,snippet-highlight .dark .code-toolbar .toolbar span{color:#fff;font-size:12px;font-weight:bolder;padding:8px;background:#f26428;-webkit-box-shadow:none;box-shadow:none;border-radius:5px;margin-right:10px;font-family:monospace}snippet-highlight .dark .code-toolbar .toolbar span:hover{color:#fff}snippet-highlight .dark .code-toolbar .toolbar a:hover{color:#f9b038}\";\n    },\n    enumerable: !0,\n    configurable: !0\n  }), e;\n}();\n\nexport { MyComponent as SnippetHighlight };"],"sourceRoot":""}